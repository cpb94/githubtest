$PBExportHeader$menu_planificacion_tencer_wide_lotes.srm
forward
global type menu_planificacion_tencer_wide_lotes from menu
end type
type m_archivo from menu within menu_planificacion_tencer_wide_lotes
end type
type m_grabar from menu within m_archivo
end type
type m_10 from menu within m_archivo
end type
type m_-2 from menu within m_archivo
end type
type m_imprimir from menu within m_archivo
end type
type m_imprimirseccin from menu within m_archivo
end type
type m_imprimirlneaactual from menu within m_archivo
end type
type m_-7 from menu within m_archivo
end type
type m_imprimirfichatécnicacompleta from menu within m_archivo
end type
type m_imprimirfichatcnica from menu within m_archivo
end type
type m_imprimirfichaoperación from menu within m_archivo
end type
type m_imprimiretiquetas from menu within m_archivo
end type
type m_-1 from menu within m_archivo
end type
type m_salir from menu within m_archivo
end type
type m_archivo from menu within menu_planificacion_tencer_wide_lotes
m_grabar m_grabar
m_10 m_10
m_-2 m_-2
m_imprimir m_imprimir
m_imprimirseccin m_imprimirseccin
m_imprimirlneaactual m_imprimirlneaactual
m_-7 m_-7
m_imprimirfichatécnicacompleta m_imprimirfichatécnicacompleta
m_imprimirfichatcnica m_imprimirfichatcnica
m_imprimirfichaoperación m_imprimirfichaoperación
m_imprimiretiquetas m_imprimiretiquetas
m_-1 m_-1
m_salir m_salir
end type
type m_ventana from menu within menu_planificacion_tencer_wide_lotes
end type
type m_herramientas from menu within menu_planificacion_tencer_wide_lotes
end type
type m_borrarseleccin from menu within m_herramientas
end type
type m_moverantes from menu within m_herramientas
end type
type m_moverdespus from menu within m_herramientas
end type
type m_0 from menu within m_herramientas
end type
type m_selecciónmúltiple from menu within m_herramientas
end type
type m_- from menu within m_herramientas
end type
type m_5 from menu within m_herramientas
end type
type m_borrarot from menu within m_herramientas
end type
type m_borrarot2 from menu within m_herramientas
end type
type m_-9 from menu within m_herramientas
end type
type m_generarcopia from menu within m_herramientas
end type
type m_3 from menu within m_herramientas
end type
type m_4 from menu within m_herramientas
end type
type m_-10 from menu within m_herramientas
end type
type m_consultas from menu within m_herramientas
end type
type m_consultadepedidos from menu within m_consultas
end type
type m_12 from menu within m_consultas
end type
type m_1 from menu within m_consultas
end type
type m_2 from menu within m_consultas
end type
type m_verobservacionesstock from menu within m_consultas
end type
type m_6 from menu within m_consultas
end type
type m_8 from menu within m_consultas
end type
type m_14 from menu within m_consultas
end type
type m_13 from menu within m_consultas
end type
type m_enviarnuevo from menu within m_consultas
end type
type m_enviarainkcid from menu within m_consultas
end type
type m_consultas from menu within m_herramientas
m_consultadepedidos m_consultadepedidos
m_12 m_12
m_1 m_1
m_2 m_2
m_verobservacionesstock m_verobservacionesstock
m_6 m_6
m_8 m_8
m_14 m_14
m_13 m_13
m_enviarnuevo m_enviarnuevo
m_enviarainkcid m_enviarainkcid
end type
type m_-4 from menu within m_herramientas
end type
type m_verimagen from menu within m_herramientas
end type
type m_herramientas from menu within menu_planificacion_tencer_wide_lotes
m_borrarseleccin m_borrarseleccin
m_moverantes m_moverantes
m_moverdespus m_moverdespus
m_0 m_0
m_selecciónmúltiple m_selecciónmúltiple
m_- m_-
m_5 m_5
m_borrarot m_borrarot
m_borrarot2 m_borrarot2
m_-9 m_-9
m_generarcopia m_generarcopia
m_3 m_3
m_4 m_4
m_-10 m_-10
m_consultas m_consultas
m_-4 m_-4
m_verimagen m_verimagen
end type
type m_procesos from menu within menu_planificacion_tencer_wide_lotes
end type
type m_9 from menu within m_procesos
end type
type m_generar1 from menu within m_procesos
end type
type m_agruparmuestras from menu within m_procesos
end type
type m_agruparintermedios from menu within m_procesos
end type
type m_regenerarartculo from menu within m_procesos
end type
type m_-5 from menu within m_procesos
end type
type m_calcularstock from menu within m_procesos
end type
type m_enlazarfechas from menu within m_procesos
end type
type m_sugerirfentrega from menu within m_procesos
end type
type m_calculartiempos from menu within m_procesos
end type
type m_-0 from menu within m_procesos
end type
type m_ejecutarrecálculocompleto from menu within m_procesos
end type
type m_-6 from menu within m_procesos
end type
type m_renumerar from menu within m_procesos
end type
type m_procesos from menu within menu_planificacion_tencer_wide_lotes
m_9 m_9
m_generar1 m_generar1
m_agruparmuestras m_agruparmuestras
m_agruparintermedios m_agruparintermedios
m_regenerarartculo m_regenerarartculo
m_-5 m_-5
m_calcularstock m_calcularstock
m_enlazarfechas m_enlazarfechas
m_sugerirfentrega m_sugerirfentrega
m_calculartiempos m_calculartiempos
m_-0 m_-0
m_ejecutarrecálculocompleto m_ejecutarrecálculocompleto
m_-6 m_-6
m_renumerar m_renumerar
end type
type m_seleccionar from menu within menu_planificacion_tencer_wide_lotes
end type
type m_pasadaanterior from menu within m_seleccionar
end type
type m_verselecin from menu within m_seleccionar
end type
type m_-3 from menu within m_seleccionar
end type
type m_hornosyhornosencajado from menu within m_seleccionar
end type
type m_bicoccion from menu within m_seleccionar
end type
type m_monococcin from menu within m_seleccionar
end type
type m_encastres from menu within m_seleccionar
end type
type m_encr from menu within m_seleccionar
end type
type m_aaee from menu within m_seleccionar
end type
type m_enc from menu within m_seleccionar
end type
type m_enf from menu within m_seleccionar
end type
type m_pvho from menu within m_seleccionar
end type
type m_encf from menu within m_seleccionar
end type
type m_-8 from menu within m_seleccionar
end type
type m_marcarfechainamovible from menu within m_seleccionar
end type
type m_desmarcarfechainamovible from menu within m_seleccionar
end type
type m_eliminarfecha from menu within m_seleccionar
end type
type m_seleccionar from menu within menu_planificacion_tencer_wide_lotes
m_pasadaanterior m_pasadaanterior
m_verselecin m_verselecin
m_-3 m_-3
m_hornosyhornosencajado m_hornosyhornosencajado
m_bicoccion m_bicoccion
m_monococcin m_monococcin
m_encastres m_encastres
m_encr m_encr
m_aaee m_aaee
m_enc m_enc
m_enf m_enf
m_pvho m_pvho
m_encf m_encf
m_-8 m_-8
m_marcarfechainamovible m_marcarfechainamovible
m_desmarcarfechainamovible m_desmarcarfechainamovible
m_eliminarfecha m_eliminarfecha
end type
type m_buscar from menu within menu_planificacion_tencer_wide_lotes
end type
type m_descripcin from menu within m_buscar
end type
type m_buscar from menu within menu_planificacion_tencer_wide_lotes
m_descripcin m_descripcin
end type
type m_listados from menu within menu_planificacion_tencer_wide_lotes
end type
type m_cargadelaslneas from menu within m_listados
end type
type m_necesidadesdecajas from menu within m_listados
end type
type m_7 from menu within m_listados
end type
type m_necesidadesdegranillas from menu within m_listados
end type
type m_11 from menu within m_listados
end type
type m_listados from menu within menu_planificacion_tencer_wide_lotes
m_cargadelaslneas m_cargadelaslneas
m_necesidadesdecajas m_necesidadesdecajas
m_7 m_7
m_necesidadesdegranillas m_necesidadesdegranillas
m_11 m_11
end type
global type menu_planificacion_tencer_wide_lotes from menu
m_archivo m_archivo
m_ventana m_ventana
m_herramientas m_herramientas
m_procesos m_procesos
m_seleccionar m_seleccionar
m_buscar m_buscar
m_listados m_listados
end type
end forward

shared variables

end variables

global type menu_planificacion_tencer_wide_lotes from menu
m_archivo m_archivo
m_ventana m_ventana
m_herramientas m_herramientas
m_procesos m_procesos
m_seleccionar m_seleccionar
m_buscar m_buscar
m_listados m_listados
end type
global menu_planificacion_tencer_wide_lotes menu_planificacion_tencer_wide_lotes

forward prototypes
public function integer f_imprimir_planificacion (datawindow data, string linea)
public function datetime f_sumar_fecha_hora (datetime fecha_hora, decimal segundos, string calendario)
public subroutine f_calcularfechas (string linea, string calendario, string seccion)
public function decimal f_tiempo_cambios (string linea, string seccion, string articulo1, string articulo2, string relieve1, string relieve2, decimal ancho1, decimal ancho2, decimal largo1, decimal largo2, string molde1, string molde2)
public function datetime f_sumar_dias_fecha (datetime fecha, integer dias, string calendario)
public subroutine seleccionar_por_operacion (integer codigo_operacion, ref datawindow datos)
public subroutine f_imprimir_ficha_tecnica2 ()
public function integer f_generar_copia_planificacion ()
public function integer f_restaurar_copia_planificacion ()
public subroutine f_enviar_archivos_inkcid (string empresa, string articulo, string ver, string operacion)
public subroutine f_borrar_archivos_maquina_marcados (string linea, datawindow dw_errores, transaction trans_sql)
public subroutine f_imprimir_ficha_bases_enc ()
public function string f_ruta_imagen_destino (string maquina, string perfil_color, string perfil_origen, string tipomaquina_disenyo)
end prototypes

public function integer f_imprimir_planificacion (datawindow data, string linea);datastore lineas_planificacion
string sel, aux
dec i, total_lineas_planificacion

data.setredraw(false)
data.retrieve(codigo_empresa)

sel = "SELECT planificacion.lineaprod, planificacion.ot, planificacion.ordenoperacion, planificacion.stockacabado, planificacion.fecha_sugerida, "+&
		"planificacion.stockbase, planificacion.cantidad, planificacion.formato, planificacion.cod_articulo, "+&
		"planificacion.version, planificacion.base, art_ver_tipooperacion.descripcion_abr, formatos.descripcion, "+&
		"articulos.descripcion, prodlineas.resumido, prodlineas.codigo,  venliped.fentrega, art_codestadistico.tm, "+&
		"formatos.largo, formatos.ancho, planificacion.velocidad, planificacion.fecha_fin, articulos.molde, art_ver_operaciones.numaplicaciones, articulos.plato_sup, articulos.plato_inf  "+&
		"FROM planificacion, art_ver_tipooperacion, formatos, articulos, prodlineas, art_codestadistico, venliped, art_ver_operaciones "+&
		"WHERE planificacion.empresa 			= '" + codigo_empresa + "' "+&
		"AND art_ver_tipooperacion.empresa 	= '" + codigo_empresa + "' "+&
		"AND formatos.empresa				 	= '" + codigo_empresa + "' "+&
		"AND articulos.empresa				 	= '" + codigo_empresa + "' "+&
		"AND prodlineas.empresa				 	= '" + codigo_empresa + "' "+&
		"AND art_codestadistico.empresa		= '" + codigo_empresa + "' "+&
		"AND venliped.empresa    				= '" + codigo_empresa + "' "+&
		"AND art_ver_operaciones.empresa  = '" + codigo_empresa + "' "+&
		"AND planificacion.lineaprod		 		= '" + linea + "' "+&
		"AND articulos.codigo						= art_codestadistico.codigo "+&
		"AND planificacion.tipo_operacion				= art_ver_tipooperacion.codigo "+&
		"AND planificacion.formato				*= formatos.codigo "+&
		"AND planificacion.cod_articulo			= articulos.codigo "+&
		"AND planificacion.lineaprod				= prodlineas.codigo "+&
		"AND planificacion.anyo          			*= venliped.anyo "+&
		"AND planificacion.pedido       			*= venliped.pedido "+&
		"AND planificacion.linped          			*= venliped.linea "+&
		"AND planificacion.cod_articulo           = art_ver_operaciones.Articulo "+&	
		"AND planificacion.version      	  		= art_ver_operaciones.version "+&	
		"AND planificacion.ordenoperacion		= art_ver_operaciones.orden "+&			
		"ORDER BY CONVERT(int,lineaprod), planificacion.orden"			 
//		"AND planificacion.cod_articulo        	*= venliped.Articulo "+&	

//lineas_planificacion = f_cargar_cursor(sel)
f_cargar_cursor_nuevo(sel,lineas_planificacion)

total_lineas_planificacion = lineas_planificacion.rowcount()

if total_lineas_planificacion = 0 then
	return 1
end if

for i = 1 to total_lineas_planificacion
	data.object.ot[i]  				= lineas_planificacion.object.planificacion_ot[i]
	data.object.ordenoperacion[i] = lineas_planificacion.object.planificacion_ordenoperacion[i]
	data.object.stockacabado[i]  	= lineas_planificacion.object.planificacion_stockacabado[i]
	data.object.stockbase[i]  		= lineas_planificacion.object.planificacion_stockbase[i]
	data.object.cantidad[i]  		= lineas_planificacion.object.planificacion_cantidad[i]
	data.object.cod_articulo[i] 	= lineas_planificacion.object.planificacion_cod_Articulo[i]
	data.object.cantidad[i]  		= lineas_planificacion.object.planificacion_cantidad[i]
	data.object.version[i]  		= lineas_planificacion.object.planificacion_version[i]
	data.object.base[i] 		 		= lineas_planificacion.object.planificacion_base[i]
	data.object.f_entrega[i] 		= lineas_planificacion.object.venliped_fentrega[i]
	data.object.formato[i]  		= lineas_planificacion.object.formatos_descripcion[i]
	data.object.largo[i]    		= lineas_planificacion.object.formatos_largo[i]
	data.object.ancho[i]  	   	= lineas_planificacion.object.formatos_ancho[i]
	data.object.des_articulo[i]  	= lineas_planificacion.object.articulos_descripcion[i]
	data.object.operacion[i]		= lineas_planificacion.object.art_ver_tipooperacion_descripcion_abr[i]
	data.object.lineaprod[i]  		= lineas_planificacion.object.prodlineas_resumido[i]
	data.object.velocidad[i]  		= lineas_planificacion.object.planificacion_velocidad[i]
	data.object.fechafin[i]  		= lineas_planificacion.object.planificacion_fecha_fin[i]
	data.object.molde[i]  			= lineas_planificacion.object.articulos_molde[i]
	data.object.relieve[i]  		= lineas_planificacion.object.art_codestadistico_tm[i]
	data.object.pantallas[i]  		= lineas_planificacion.object.art_ver_operaciones_numaplicaciones[i]
	data.object.molde[i]  		= lineas_planificacion.object.articulos_molde[i]
	data.object.plato_sup[i]  		= lineas_planificacion.object.articulos_plato_sup[i]
	data.object.plato_inf[i]  		= lineas_planificacion.object.articulos_plato_inf[i]

next

destroy lineas_planificacion

data.SetFilter("")
data.Filter()
	
data.sort()
data.groupcalc()
data.setredraw(true)
return 0


end function

public function datetime f_sumar_fecha_hora (datetime fecha_hora, decimal segundos, string calendario);datetime v_resultado
long total_dias,  total_segundos, i
date fecha
time hora
decimal segundos_dia, horas_dia, bucle = 1
integer v_anyo, v_mes, v_dia


fecha = Date(fecha_hora)
hora =Time(fecha_hora)
v_anyo = year(fecha)
v_mes = month(fecha)
v_dia = day(fecha)

// Sacamos los segundos según el calendario
if calendario <> "" then
	DO 
		bucle = bucle +1  // si se producen más de 60 iteraciones saldrá del bucle
		v_anyo = year(fecha)
		v_mes = month(fecha)
		v_dia = day(fecha)
	
		select horas 
		into :horas_dia
		from prodmeses
		where empresa = :codigo_empresa
		and calendario = :calendario
		and anyo = :v_anyo
		and mes = :v_mes
		and dia = :v_dia;
		
		if isnull(horas_dia) then 
			horas_dia = 0
		end if
		segundos_dia = horas_dia * 3600
		
		if segundos >= segundos_dia then
			fecha = RelativeDate(fecha , 1)
			segundos = segundos - segundos_dia
		else
			if segundos <= segundos_dia - SecondsAfter(Time("00:00:00"), hora )  then
				hora = RelativeTime(hora, segundos)
				segundos = 0
			else
				fecha = RelativeDate(fecha , 1)
				segundos = segundos - (segundos_dia - SecondsAfter(Time("00:00:00"), hora ) )
				hora = Time("00:00:00")
			end if
		end if	
	LOOP WHILE segundos > 0 and bucle < 60
end if

v_resultado = DateTime(fecha, hora)	
return v_resultado

end function

public subroutine f_calcularfechas (string linea, string calendario, string seccion);datastore registros
string sel, articulo1, articulo2, molde1, molde2, relieve1, relieve2, v_ordenaplicacion
dec v_ot, i, total_registros, v_cantidad, v_velocidad, ancho_std1, largo_std1, ancho_std2, largo_std2
datetime v_fecha_fin
long v_total_segundos, v_tiempo_cambio
boolean bien

sel = "select planificacion.ot, planificacion.cod_articulo, planificacion.cantidad, planificacion.velocidad, "+&
		"articulos.molde, art_codestadistico.tm, formatos.ancho_std, formatos.largo_std, prodlineas.descripcion "+&
		"from planificacion, articulos, art_codestadistico, art_ver_operaciones, formatos, prodlineas "+&
		"where planificacion.empresa = '"+codigo_empresa+"' "+&
		"and articulos.empresa = '"+codigo_empresa+"' "+&
		"and art_codestadistico.empresa = '"+codigo_empresa+"' "+&
		"and art_ver_operaciones.empresa = '"+codigo_empresa+"' "+&
		"and formatos.empresa = '"+codigo_empresa+"' "+&
		"and prodlineas.empresa = '"+codigo_empresa+"' "+&
		"and planificacion.cod_articulo = art_ver_operaciones.articulo "+&
		"and prodlineas.codigo = planificacion.lineaprod "+&
		"and planificacion.version = art_ver_operaciones.version "+&
		"and planificacion.ordenoperacion = art_ver_operaciones.orden "+&
		"and art_ver_operaciones.formato = formatos.codigo "+&
		"and planificacion.cod_articulo = articulos.codigo "+&
		"and articulos.codigo = art_codestadistico.codigo "+&
		"and (planificacion.cantidad <> '0' or planificacion.cantidad is not null) "+&
		"and (planificacion.velocidad <> '0' or planificacion.velocidad is not null) "+&
		"and planificacion.lineaprod = '"+linea+"' "+&
		"order by planificacion.orden; "

f_cargar_cursor_nuevo(sel, registros)

v_fecha_fin = datetime(Today() )
total_registros = registros.RowCount()

if total_registros > 0 then
	articulo1 = registros.object.planificacion_cod_articulo[1]
	molde1 = registros.object.articulos_molde[1]
	relieve1 = registros.object.art_codestadistico_tm[1]
	ancho_std1 = registros.object.formatos_ancho_std[1]
	largo_std1 = registros.object.formatos_largo_std[1]
	v_velocidad = registros.object.planificacion_velocidad[1]
end if

bien = true

for i = 1 to total_registros 
	articulo2 = registros.object.planificacion_cod_articulo[i]
	molde2 = registros.object.articulos_molde[i]
	relieve2 = registros.object.art_codestadistico_tm[i]
	ancho_std2 = registros.object.formatos_ancho_std[i]
	largo_std2 = registros.object.formatos_largo_std[i]

	// David 13-01-06
//	select velocidad
//	from prodvelocidades
//	where empresa = :codigo_emprea
//	and articulo = :articulo2
//	and version = 
	// fin David 13-01-06

	v_cantidad = registros.object.planificacion_cantidad[i]
	if 	v_velocidad = 0 or isnull(v_velocidad) then
		v_velocidad = 999999
	else
		v_velocidad = registros.object.planificacion_velocidad[i]
	end if
	if v_velocidad <> 0 and not isnull(v_velocidad) then
		v_total_segundos = (v_cantidad / v_velocidad) * 3600
	end if

	// Añado los segundos del cambio de formato o modelo
	v_tiempo_cambio =	f_tiempo_cambios (linea, seccion, articulo1, articulo2, relieve1, relieve2, +&
														ancho_std1, ancho_std2, largo_std1, largo_std2, molde1, molde2)
														
    if isnull(v_tiempo_cambio) then
		v_tiempo_cambio = 0
	end if
	v_total_segundos = v_total_segundos + v_tiempo_cambio
	articulo1 = articulo2
	molde1 = molde2
	relieve1 = relieve2
	ancho_std1 = ancho_std2
	largo_std1 = largo_std2

	v_ot = registros.object.planificacion_ot[i]
	v_fecha_fin = f_sumar_fecha_hora (v_fecha_fin, v_total_segundos, calendario)

	connect using SQLCA;	
	update planificacion
	set fecha_fin = :v_fecha_fin
	where empresa = :codigo_empresa
	and ot = :v_ot;
	
	if SQLCA.SQLCode <> 0 then
		bien = false
	end if	
	f_mensaje_proceso(registros.object.prodlineas_descripcion[i]+" :",i,total_registros)
next

if not bien then
	rollback;
	messagebox ('ERROR', 'No se han podido calcular las fechas')
else
	commit;
end if	

destroy registros
end subroutine

public function decimal f_tiempo_cambios (string linea, string seccion, string articulo1, string articulo2, string relieve1, string relieve2, decimal ancho1, decimal ancho2, decimal largo1, decimal largo2, string molde1, string molde2);decimal segundos
decimal cambio_formato_complejo_3fue = 9000, cambio_formato_normal_3fue = 5000	
decimal cambio_formato_largo_3fue = 2700, cambio_modelo_3fue = 1800	
decimal cambio_espatula = 5400
decimal cambio_molde_mono = 10800, cambio_formato_mono = 7200, cambio_modelo_mono = 7200
decimal cambio_modelo_pvid = 600, cambio_formato_pvid = 900, cambio_modelo_pvid3 = 1800, cambio_formato_pvid3 = 3600 , cambio_modelo_pvid4 = 1800, cambio_formato_pvid4 = 3600 
decimal cambio_formato_3fue_FUE07_FUE08 = 4500
decimal cambio_formato_INK1_a = 5400
decimal cambio_formato_INK1_normal = 3600
decimal cambio_modelo_INK1 = 1800
decimal cambio_modelo_corte_linea_11 = 1800
decimal cambio_modelo_corte_linea_17 = 1800
decimal cambio_modelo_corte_linea_27 = 1800
decimal cambio_UNA_HORA = 3600
decimal cambio_UNA_HORA_Y_MEDIA = 5400

choose case seccion 
	case '10' // IMPRESIÓN DIGITAL
		if linea = '39' or linea = '44' or linea = '45' then
			if (ancho1 <= 5 and ancho2 > 5) or (ancho1 > 5 and ancho2 <= 5) then
				segundos = cambio_formato_INK1_a
			elseif ancho1 <> ancho2 then	
				segundos = cambio_formato_INK1_normal
				elseif articulo1 <> articulo2 then		
						segundos = cambio_modelo_INK1
			end if
		end if
	case '1'   // Tercer Fuego 
		if linea = '34' or linea = '37'  then  // FUE07 o FUE08 o INK	
			if ( ancho1 <> ancho2 ) or ( largo1 <> largo2 ) then
				segundos = cambio_formato_3fue_FUE07_FUE08 
			else
				if articulo1 <> articulo2 then  // Si es el mismo artículo no hay cambio.
					segundos = cambio_modelo_3fue
				end if
			end if	
		else
			if (ancho1 <= 4 and ancho2 > 4) or (ancho1 > 4 and ancho2 <= 4) or +&
				(ancho1 <= 12 and ancho2 > 12) or (ancho1 > 12 and ancho2 <= 12) then
				segundos = cambio_formato_complejo_3fue
			elseif ancho1 <> ancho2 then
					segundos = cambio_formato_normal_3fue
				elseif relieve1 <> relieve2 then
						segundos = cambio_espatula
					elseif (largo1 < 25 and largo2 > 25) or (largo1 > 25 and largo2 < 25) then
							segundos = cambio_formato_largo_3fue
						elseif articulo1 <> articulo2 then		
								segundos = cambio_modelo_3fue
			end if		
		end if
	case '2', '5', '14' // Monococción - Bicocción y Prensas
		if linea = '48' then  // BICO01 (igual que las líneas de serigrafía de formato pequeño)
			if (ancho1 <> ancho2 ) OR (largo1 <> largo2) then
				segundos = cambio_UNA_HORA_Y_MEDIA 
			else
				segundos = cambio_UNA_HORA 
			end if

		/*
			if (ancho1 <= 4 and ancho2 > 4) or (ancho1 > 4 and ancho2 <= 4) or +&
				(ancho1 <= 12 and ancho2 > 12) or (ancho1 > 12 and ancho2 <= 12) then
				segundos = cambio_formato_complejo_3fue
			elseif ancho1 <> ancho2 then
					segundos = cambio_formato_normal_3fue
				elseif relieve1 <> relieve2 then
						segundos = cambio_espatula
					elseif (largo1 < 25 and largo2 > 25) or (largo1 > 25 and largo2 < 25) then
							segundos = cambio_formato_largo_3fue
						elseif articulo1 <> articulo2 then		
								segundos = cambio_modelo_BICO
			end if		
			*/
		else		
			if molde1 <> molde2 then
				segundos = cambio_molde_mono
			elseif (ancho1 <> ancho2 ) or (largo1 <> largo2) then
					segundos = cambio_formato_mono
				elseif articulo1 <> articulo2 then
						segundos = cambio_modelo_mono
			end if			
		end if
	case '4' // Corte
		if linea = '11' then   // CORT01
			if ancho1 <> ancho2 or largo1 <> largo2 then
				segundos = cambio_modelo_corte_linea_11
			end if
		end if
		
		if linea = '17' then // CORT02
			if ancho1 <> ancho2 or largo1 <> largo2 then
				segundos = cambio_modelo_corte_linea_17
			end if
		end if
		
		if linea = '27' then // CORT03
			if ancho1 <> ancho2 or largo1 <> largo2 then
				segundos = cambio_modelo_corte_linea_27
			end if
		end if
		
	case '6' // PVID
		if linea = '12' then // LINEA PVID1
			if articulo1 <> articulo2 then		
					segundos = cambio_modelo_pvid
			elseif ( ancho1 <> ancho2 ) or ( largo1 <> largo2 ) then
					segundos = cambio_formato_pvid
			end if
		end if
		if linea = '35' then  // LINEA PVID3
			if articulo1 <> articulo2 then		
					segundos = cambio_modelo_pvid3
			elseif ( ancho1 <> ancho2 ) or ( largo1 <> largo2 ) then
					segundos = cambio_formato_pvid3
			end if
		end if
		if linea = '46' then  // LINEA PVID4
			if articulo1 <> articulo2 then		
					segundos = cambio_modelo_pvid4
			elseif ( ancho1 <> ancho2 ) or ( largo1 <> largo2 ) then
					segundos = cambio_formato_pvid4
			end if
		end if
		
	case else
		segundos = 0
end choose

return segundos
end function

public function datetime f_sumar_dias_fecha (datetime fecha, integer dias, string calendario);datastore registros
datetime fecha_final
int v_anyo, v_mes, v_dia
string sel
long total_reg,  i

v_anyo = year(date(fecha))
v_mes = month(date(fecha))
v_dia = day(date(fecha))

sel = " select anyo, mes, dia, calendario, horas "+&
		" from prodmeses "+&
		" where empresa = '"+codigo_empresa +"' "+&
		" and ((anyo >= "+string(v_anyo)+" and mes >= "+string(v_mes)+" and dia > "+string(v_dia)+" ) or "+&
		" (anyo >= "+string(v_anyo)+" and mes > "+string(v_mes)+" ) or "+&
		" (anyo > "+string(v_anyo)+"))"+&
		" and calendario = '"+calendario+"' "+&
		" and horas <> 0 "+&
		" order by anyo, mes, dia; "
		
f_cargar_cursor_nuevo (sel, registros)
total_reg = registros.RowCount()

i= 1
if (dias > 0) and (total_reg > dias) then
	fecha_final	= datetime(date(string(registros.object.anyo[dias])+"/"+string(registros.object.mes[dias])+"/"+string(registros.object.dia[dias])))
end if

destroy registros
return fecha_final
end function

public subroutine seleccionar_por_operacion (integer codigo_operacion, ref datawindow datos);dec v_ot
dec v_ordenmarcado
//datawindow datos
string v_usuario
boolean bien = True

//datos = w_planificacion.dw_1
v_usuario = nombre_usuario

update planificacion
set usuario = :v_usuario
where empresa = :codigo_empresa
and tipo_operacion = :codigo_operacion
and lineaprod = :w_planificacion_tencer_wide.uo_1.em_codigo.text;

if SQLCA.SQLCode <> 0 then
	bien = false
end if

if bien then
	commit;
	datos.Retrieve(codigo_empresa,w_planificacion_tencer_wide.uo_1.em_codigo.text)				
else
	rollback;
	messagebox("ERROR", "Error seleccionando los registros")
end if






end subroutine

public subroutine f_imprimir_ficha_tecnica2 ();str_escandallo arg_escandallo[300]
string articulo, sel
integer indice, i, j, k, fila_actual, v_hilos
dec v_factor
datawindow DW, data
datastore ds_operaciones, ds_aplicaciones, ds_escandallo
integer ultima_fila
string descripcion_art, v_articulo_final, v_empresa, descripcion_base, v_pantalla, v_articulo_intermedio, encajado, tipo_operacion, ajuste, v_tecnico, v_dis
string v_cod_caja, v_des_caja, v_piezascaja, v_cod_pallet, v_des_pallet, v_cajaspallet, v_planospallet, v_alturaspallet
string v_juegopantallas, v_referencia_laboratorio, v_version_laboratorio, v_formato_final, v_pasta, v_version
string v_tono, v_tono_calibre, v_anyo, v_linped, v_ubi_muestras, v_molde, v_des_molde, v_codigo_pantallas, v_imagen, v_obs_largas, v_imagen_nueva
String v_nominal, v_espesor, v_formato
dec v_ot, v_pedido, v_calibre, v_ancho, v_largo
datetime v_fecha_alta
string v_ordenaplicacion, v_uso
string obs, v_base
integer nivel
integer nivel2
string v_tipooperacion, tiff, codigo_base
string modelo_origen, pieza_origen, prueba_origen, coleccion
Long numero_piezas = 0 //Se refiere a numero de piezas que componen el encajado
Boolean imprimir_articulo

nivel = 0
obs = ''

DW = w_planificacion_tencer_wide.dw_1

data = w_planificacion_tencer_wide.dw_listado_ficha2

// Para asignar un datawidow a un control datawindow.
//data.DataObject = "report_ficha_tecnica_horizontal"

data.reset()

articulo = DW.object.cod_articulo[DW.GetRow()]
v_version = DW.object.planificacion_version[DW.GetRow()]
tipo_operacion = DW.object.planificacion_tipo_operacion[DW.GetRow()] 
ajuste = DW.object.planificacion_ajuste[DW.GetRow()] 
indice = 1
v_factor = 1

f_escandallo_factores (arg_escandallo, articulo, indice, v_factor, nivel)
////////////////////////////////////////////////////////////////////////////////
//									DATOS DE LA BANDA HEADER									//
////////////////////////////////////////////////////////////////////////////////

SELECT art_encajado INTO :encajado FROM planificacion WHERE empresa = :codigo_empresa AND cod_articulo = :articulo;
	
v_articulo_final = articulo // arg_escandallo[indice - 1].articulo

// Extraemos el nombre de la empresa
SELECT nombre   
INTO  :v_empresa
FROM  empresas
WHERE empresa = :codigo_empresa;

select articulos.descripcion, articulos.referencia_laboratorio, articulos.version_laboratorio, formatos.abreviado, art_codestadistico.pt, 
		 articulos.fecha_alta, ubi_muestras,  articulos.molde, prodmoldes.descripcion, codigo_pantallas, modelo_origen, pieza_origen, prueba_origen, articulos.uso,
		 articulos.espesor, articulos.formato
into :descripcion_art, :v_referencia_laboratorio, :v_version_laboratorio, :v_formato_final, :v_pasta, :v_fecha_alta, :v_ubi_muestras,
		:v_molde, :v_des_molde, :v_codigo_pantallas, :modelo_origen, :pieza_origen, :prueba_origen, :v_uso, :v_espesor, :v_formato
from articulos, formatos, art_codestadistico, prodmoldes
where articulos.codigo = :v_articulo_final
and articulos.empresa = :codigo_Empresa
and formatos.empresa = :codigo_empresa
and art_codestadistico.empresa = :codigo_empresa
and prodmoldes.empresa = :codigo_empresa
and articulos.codigo = art_codestadistico.codigo
and articulos.molde *= prodmoldes.codigo
and articulos.formato = formatos.codigo;

// Sacamos el largo y el ancho del formato
select ancho, largo
into :v_ancho, :v_largo
from formatos
where empresa = :codigo_empresa
and codigo = :v_formato;

v_nominal = string(v_ancho*10,"###,##0.0")+" x "+string(v_largo*10,"###,##0.0")

if (not isnull(tipo_operacion) and tipo_operacion <> "" and tipo_operacion = "27") then
	//or (not isnull(ajuste) and ajuste = "S") 
	f_imprimir_ficha_bases_enc()
	return
end if

if not isnull(modelo_origen) and modelo_origen <> "" then
	SELECT coleccion INTO :coleccion FROM modelo WHERE empresa = :codigo_empresa AND modelo = :modelo_origen;	
	if isnull(pieza_origen) or pieza_origen = "" then
		SELECT COUNT(*) INTO :numero_piezas 
		FROM art_escandallo 
		WHERE empresa = :codigo_empresa 
		AND articulo = :encajado 
		AND version = :v_version;
		if numero_piezas = 1 then
			SELECT articulo_ant INTO :v_articulo_intermedio FROM art_escandallo WHERE empresa = :codigo_empresa AND articulo = :encajado;
			SELECT pieza_origen, prueba_origen INTO :pieza_origen, :prueba_origen  
			FROM articulos 
			WHERE empresa = :codigo_empresa 
			AND codigo = :v_articulo_intermedio;
		end if
	end if
end if

// Sacamos la imagen -----------------------------------------------------------------------------------------------------------------------------------------------
v_imagen = ""
v_imagen_nueva = ""
v_imagen_nueva = ftc_imagen_articulo_ruta("1", articulo)
if v_imagen_nueva = "" and ftc_articulo_base2(articulo, codigo_base) then
	v_imagen_nueva = ftc_imagen_articulo_ruta("1", codigo_base)
end if
if modelo_origen <> '' and not isnull (modelo_origen) then 
	if articulo = encajado then //El articulo es el encajado, muestro su imagen
		v_imagen_nueva = ftc_imagen_articulo_ruta("1", encajado)
	else
		sel = " select articulo_ant "+&
		" from art_escandallo "+&
		" where articulo = '"+encajado+"' "+&
		" and version = '"+v_version+"' ";
		f_cargar_cursor_nuevo (sel, ds_escandallo)
		//ftc_escandallo_esta
		i = 1
		Do While (i <= ds_escandallo.rowcount() and v_imagen_nueva = "")
			v_articulo_intermedio = ds_escandallo.object.articulo_ant[i]
			if ftc_escandallo_esta(v_articulo_intermedio, articulo, v_version) = 1 then
				v_imagen_nueva = ftc_imagen_articulo_ruta("1", v_articulo_intermedio)
			end if
			i++
		Loop
		if v_imagen_nueva = "" then //Si no encuentro imagen en intermedios, busco la del encajado
			v_imagen_nueva = ftc_imagen_articulo_ruta("1", articulo)
		end if
	end if
	//data.Object.ruta_imagen[1] = ftc_imagen_ruta ('1', "", "", pieza_origen)
	//data.Object.ruta_imagen[1] = ftc_imagen_articulo_ruta("1", arg_escandallo[indice - 1].articulo)
	
	//Técnico y diseñador
	SELECT tecnico_lab.descripcion, tecnico_dis.descripcion INTO :v_tecnico, :v_dis
	FROM modelo 
	INNER JOIN descoleccionsol ON modelo.empresa = descoleccionsol.empresa AND modelo.coleccion = descoleccionsol.codigo
	INNER JOIN tecnico_lab ON descoleccionsol.empresa = tecnico_lab.empresa AND descoleccionsol.tecnico_lab = tecnico_lab.codigo 
	INNER JOIN tecnico_dis ON modelo.empresa = tecnico_dis.empresa AND modelo.tecnico_dis = tecnico_dis.codigo
	WHERE descoleccionsol.empresa = :codigo_empresa AND modelo.modelo = :modelo_origen;
	
else
	v_imagen = f_cargar_imagen_nuevo(v_codigo_pantallas)
	
	//Técnico y diseñador
	SELECT tecnico_lab.descripcion, tecnico_dis.descripcion INTO :v_tecnico, :v_dis
	FROM desmodelo 
	INNER JOIN descoleccionsol ON desmodelo.empresa = descoleccionsol.empresa AND desmodelo.coleccion = descoleccionsol.codigo
	INNER JOIN tecnico_lab ON descoleccionsol.empresa = tecnico_lab.empresa AND descoleccionsol.tecnico_lab = tecnico_lab.codigo 
	INNER JOIN tecnico_dis ON desmodelo.empresa = tecnico_dis.empresa AND desmodelo.tecnico_dis = tecnico_dis.codigo
	WHERE descoleccionsol.empresa = :codigo_empresa AND desmodelo.modelo = :v_referencia_laboratorio;
end if

CHOOSE CASE v_pasta
 	CASE "B" 
		v_pasta = "BLANCA"
 	CASE "R" 
		v_pasta = "ROJA"
	CASE "P"
		v_pasta = "PORCELANICO"
	CASE ELSE
		v_pasta = ""
END CHOOSE

//select descripcion
//into :descripcion_base
//from articulos
//where codigo = :arg_escandallo[1].articulo
//and empresa = :codigo_Empresa;

v_base = arg_escandallo[1].articulo
	
v_ot = DW.object.ot[DW.GetRow()]

select anyo, pedido, linped
into :v_anyo, :v_pedido, :v_linped
from planificacion
where ot = :v_ot;

select tonochar, calibre
into :v_tono, :v_calibre
from venliped
where anyo 	= :v_anyo
and pedido = :v_pedido
and linea = :v_linped
and empresa = :codigo_empresa;

if isnull (v_calibre) or  (v_calibre = 0) then
	v_tono_calibre = v_tono
else
	v_tono_calibre = v_tono+" / "+string (v_calibre)
end if


////////////////////////////////////////////////////////////////////////////////
//								FIN DATOS DE LA BANDA HEADER									//
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//									DATOS DE LA BANDA SUMMARY									//
////////////////////////////////////////////////////////////////////////////////

ultima_fila = data.rowcount()

// Sacamos la información de las cajas
select almartcajas.caja, almcajas.descripcion, almartcajas.piezascaja
into :v_cod_caja, :v_des_caja, :v_piezascaja
from almartcajas, almcajas
where almartcajas.empresa = almcajas.empresa
and almartcajas.caja = almcajas.codigo
AND almartcajas.articulo = :v_articulo_final
and pordefecto = 'S';

// Sacamos la información de las pallets
select pallets.codigo, pallets.descripcion, palarticulo.cajaspallet, palarticulo.planospallet, palarticulo.alturas
into :v_cod_pallet, :v_des_pallet, :v_cajaspallet, :v_planospallet, :v_alturaspallet
from palarticulo, pallets
where palarticulo.empresa = pallets.empresa
and palarticulo.caja = :v_cod_caja
and palarticulo.articulo = :v_articulo_final
and palarticulo.codigo = pallets.codigo
and pordefecto = 'S';


////////////////////////////////////////////////////////////////////////////////
//								FIN DATOS DE LA BANDA SUMMARY									//
////////////////////////////////////////////////////////////////////////////////

for i = 1 to indice - 1
	
	//-------------------------------------------------------------------------------------------------------
	//IMPORTANTE: Cambiar consulta al rehacer parte de producción. Repite aplicaciones de un artículo cuando se planifica más de una vez (más de una ot)
	
	//Comprobamos el uso porque en caso de solicitar la ficha de una base SI sacamos su ficha, si no no sacamos ni la base ni sus partes
	imprimir_articulo = true
	if v_uso <> '1' and ftc_articulo_base(arg_escandallo[i].articulo) then
		imprimir_articulo = false
	end if
	
	if imprimir_articulo then
	
		sel = " select op.orden, tip.descripcion_abr, f.abreviado, f.ancho, f.largo, op.juegopantallas, pl.version, jp.ubicacion, pl.cantidad, pl.ot, "+&
				" op.operacion, art.descripcion, apl.contadoraplicacion, art.codigo, pl.nivel, papl.resumido, "+&
				" apl.pantalla, apl.formula, apl.gramaje, apl.gram_7x20, apl.orden, apl.tipoaplicacion, apl.densidad, apl.viscosidad,  "+&
				" apl.ciclo, apl.cortes, apl.discos, apl.temp_sup, apl.temp_inf, formul.descripcion_produccion, pl.tipo_operacion, "+&
				" papl.descripcion, op.piezas_fila, op.orientacion, apl.tiff "+&
				" from art_ver_operaciones 		op, "+& 
				" planificacion 						pl, "+&
				" art_Ver_tipooperacion 			tip, "+&
				" formatos 								f, "+&
				" juegospantallas 					jp, "+&
				" art_ver_op_aplicaciones 			apl, "+&
				" prodaplicaciones 					papl, "+&
				" articulos 							art, "+&
				" prodformula 							formul "+&
				" where op.empresa = '"+codigo_empresa+"' "+&
				" and tip.empresa = '"+codigo_empresa+"' "+&
				" and f.empresa = '"+codigo_empresa+"' "+&
				" and op.empresa = '"+codigo_empresa+"' "+&
				" and pl.empresa = '"+codigo_empresa+"' "+&
				" and art.empresa = '"+codigo_empresa+"' "+&
				" and apl.empresa = '"+codigo_empresa+"' "+&
				" and papl.empresa = '"+codigo_empresa+"' "+&
				" and apl.tipoaplicacion *= papl.codigo "+&
				" and pl.cod_articulo = op.articulo "+&
				" and pl.version = op.version "+&
				" and pl.ordenoperacion = op.orden "+&
				" and pl.tipo_operacion = tip.codigo "+&
				" and op.formato = f.codigo "+&
				" and pl.cod_articulo = art.codigo "+&
				" and op.juegopantallas *= jp.codigo "+&
				" and op.empresa *= jp.empresa "+&
				" and op.articulo = apl.articulo "+&
				" and op.version = apl.version "+&
				" and op.operacion = apl.operacion "+&
				" and apl.empresa *= formul.empresa "+&
				" and apl.formula *= formul.formula "+&
				" and pl.cod_articulo = '"+arg_escandallo[i].articulo+"' "+&
				" and pl.pedido = "+string(v_pedido)+&
				" and pl.linped = "+string(v_linped)+&
				" and pl.anyo = "+string(v_anyo)+&
				" order by nivel, convert(integer, op.orden), convert(integer, apl.orden ) "
				
		f_cargar_cursor_nuevo (sel, ds_operaciones)
		
		string art, art_ant, ver, ver_ant, op, op_ant
		
		art = '' 
		art_ant= ''
		ver = ''
		ver_ant = ''
		op = ''
		op_ant = ''
		for j = 1 to ds_operaciones.rowcount()
			art = ds_operaciones.object.articulos_codigo[j]
			ver = ds_operaciones.object.planificacion_version[j]
	//		op = ds_operaciones.object.art_ver_operaciones_orden[j]
			
			if art_ant <> art or ver_ant <> ver then
				SELECT art_versiones.observaciones
				INTO  :v_obs_largas
				FROM  art_versiones
				WHERE art_versiones.empresa  = :codigo_empresa
				AND   art_versiones.articulo = :art //:arg_escandallo[i].articulo
				AND 	art_versiones.version  = :ver; //:arg_escandallo[i].version;
				
				if not isnull (v_obs_largas) then
					if v_obs_largas <> '' then
						obs = obs +"ARTICULO "+arg_escandallo[i].articulo+":   "+ v_obs_largas+"~r~r"		
					end if
				end if	
			end if
			art_ant = art
			ver_ant = ver
		//	op_ant = op
		
			fila_actual = data.insertrow(0)
			data.object.ordenarticulo[fila_actual]			= i
			data.object.nivel[fila_actual]					= ds_operaciones.object.planificacion_nivel[j] 
			data.object.empresa[fila_actual]					= codigo_empresa
			data.object.articulo[fila_actual]				= arg_escandallo[i].articulo
			data.object.ref_produccion[fila_actual]		= ds_operaciones.object.articulos_descripcion[j] 
			data.object.version[fila_actual]					= ds_operaciones.object.planificacion_version[j] 
			data.object.operacion[fila_actual]				= ds_operaciones.object.art_ver_operaciones_operacion[j] 
			data.object.ordenoperacion[fila_actual]   	= dec(ds_operaciones.object.art_ver_operaciones_orden[j] )
			data.object.formato_operacion[fila_actual]	= 	string(ds_operaciones.object.formatos_ancho[j]*10,"###,##0.0")+" x "+&
																			string(ds_operaciones.object.formatos_largo[j]*10,"###,##0.0")
			data.object.tipooperacion[fila_actual]   		= ds_operaciones.object.art_ver_tipooperacion_descripcion_abr[j]
			data.object.cantidad[fila_actual]   			= ds_operaciones.object.planificacion_cantidad[j]
			data.object.ot[fila_actual]   					= ds_operaciones.object.planificacion_ot[j]
			v_tipooperacion 	 									= ds_operaciones.object.planificacion_tipo_operacion[j]
			
			if not isnull(ds_operaciones.object.art_ver_operaciones_juegopantallas[j])  and ds_operaciones.object.art_ver_operaciones_juegopantallas[j] <> '' then
				v_juegopantallas = ds_operaciones.object.art_ver_operaciones_juegopantallas[j]
				data.object.juegopantallas[fila_actual]		= v_juegopantallas
				data.object.ubicacion[fila_actual]				= ds_operaciones.object.juegospantallas_ubicacion[j]	
				data.object.titulo_jp[fila_actual] = "Juego Pant: "
				data.object.titulo_ubic[fila_actual] = "Ubic: "
			end if
			
			v_pantalla = ds_operaciones.object.art_ver_op_aplicaciones_pantalla[j]
			data.object.pantalla[fila_actual]  = v_pantalla
	
			v_hilos = 0
			select numero_hilos
			into :v_hilos
			from prodpantallas
			where empresa = :codigo_empresa
			and juegopantallas = :v_juegopantallas
			AND codigo = :v_pantalla;
			
			if v_hilos = 0 or isnull(v_hilos) then
				data.object.hilos[fila_actual]   			= ""
			else
				data.object.hilos[fila_actual]   			= string(v_hilos)	
			end if
			
			data.object.cod_formula[fila_actual]   		= ds_operaciones.object.art_ver_op_aplicaciones_formula[j]
			data.object.formula[fila_actual]   				= ds_operaciones.object.prodformula_descripcion_produccion[j]
			
			// David 25-10-06. Añadimos un control para las biccociones. Deberá mostrar el gramaje en 7x20 y no el real.
			if v_tipooperacion = '7' or v_tipooperacion = '1' then
				data.object.gramaje[fila_actual]   				= string(round(ds_operaciones.object.art_ver_op_aplicaciones_gram_7x20[j], 2 ))
			else
				data.object.gramaje[fila_actual]   				= string(round (ds_operaciones.object.art_ver_op_aplicaciones_gramaje[j], 2 ))
			end if		
	
			// Mostramos las piezas / fila y la orientación sólo para las operaciones de hornos.		
			if v_tipooperacion = '3' or v_tipooperacion = '8' or v_tipooperacion = '20' then
				data.object.titulo_orientacion[fila_actual] = "Orientación:"
				data.object.orientacion[fila_actual] = ds_operaciones.object.art_ver_operaciones_orientacion[j]
				data.object.titulo_pzas_fila[fila_actual] = "Piezas / fila:"
				data.object.pzas_fila[fila_actual] = ds_operaciones.object.art_ver_operaciones_piezas_fila[j]
			else
				data.object.titulo_orientacion[fila_actual] = ""
				data.object.orientacion[fila_actual] = ""
				data.object.titulo_pzas_fila[fila_actual] = ""
				
	//			setnull(data.object.pzas_fila[fila_actual] )
			end if
			
			
	//		data.object.tipoaplicacion[fila_actual]   	= ds_operaciones.object.art_ver_op_aplicaciones_tipoaplicacion[j]
			data.object.densidad[fila_actual]   			= string(ds_operaciones.object.art_ver_op_aplicaciones_densidad[j])
			data.object.viscosidad[fila_actual]   			= string(ds_operaciones.object.art_ver_op_aplicaciones_viscosidad[j])
			data.object.ciclo[fila_actual]   				= ds_operaciones.object.art_ver_op_aplicaciones_ciclo[j]
			data.object.temp_sup[fila_actual]   			= ds_operaciones.object.art_ver_op_aplicaciones_temp_sup[j]
			data.object.temp_inf[fila_actual]   			= ds_operaciones.object.art_ver_op_aplicaciones_temp_inf[j]
			data.object.cortes[fila_actual]   				= ds_operaciones.object.art_ver_op_aplicaciones_cortes[j]
			data.object.discos[fila_actual]   				= ds_operaciones.object.art_ver_op_aplicaciones_discos[j]
			data.object.aplicacion[fila_actual]   			= ds_operaciones.object.art_ver_op_aplicaciones_orden[j]
			data.object.tipoaplicacion[fila_actual]   	= ds_operaciones.object.prodaplicaciones_resumido[j]		
			data.object.ordenaplicacion[fila_actual]   	= ds_operaciones.object.art_ver_op_aplicaciones_orden[j]
			data.object.tiff[fila_actual]   					= ds_operaciones.object.art_ver_op_aplicaciones_tiff[j]
	
			
			
			//DATOS DE CABECERA Y PIE
			data.object.empresa[fila_actual]  				= v_empresa
			data.object.articulo_enc[fila_actual] 			= arg_escandallo[indice - 1].articulo
			data.object.base1[fila_actual]					= v_base
			data.object.des_base1[fila_actual]				= descripcion_base
			data.object.ref_produccion_enc[fila_actual] 	= descripcion_art
			data.object.articulo_enc[fila_actual] 			= arg_escandallo[indice - 1].articulo
			data.object.formato[fila_actual]					= v_formato_final
			
			data.object.cod_caja[fila_actual]  				= v_cod_caja
			data.object.des_caja[fila_actual]  				= v_des_caja
			data.object.piezascaja[fila_actual]  			= string(round(dec(v_piezascaja),0))
			data.object.cod_pallet[fila_actual]  			= v_cod_pallet
			data.object.des_pallet[fila_actual]  			= v_des_pallet
			data.object.cajaspallet[fila_actual]  			= string(round(dec(v_cajaspallet),0))
			data.object.planospallet[fila_actual]  		= v_planospallet
			data.object.alturapallet[fila_actual]  		= v_alturaspallet
			data.object.ref_laboratorio[fila_actual]  	= v_referencia_laboratorio
			data.object.prueba[fila_actual]  				= v_version_laboratorio
			data.object.pasta[fila_actual]            	= v_pasta
			data.object.tono_calibre[fila_actual]     	= v_tono_calibre
			data.object.pedido[fila_actual]           	= string(v_anyo)+" / "+string(v_pedido)+" / "+string(v_linped)
			data.object.fecha_alta[fila_actual]   			= v_fecha_alta
			data.object.ubi_muestra[fila_actual]  			= v_ubi_muestras
			data.object.molde[fila_actual]  					= v_molde+" - "+v_des_molde
			data.object.imagen_pieza[fila_actual]   		= v_imagen
			data.object.obs_largas[fila_actual]   			= obs	
			
			data.object.nominal[fila_actual]   				= v_nominal
			data.object.espesor[fila_actual]   				= v_espesor
	
			data.object.modelo_origen[fila_actual]  		= modelo_origen
			data.object.pieza_origen[fila_actual]  		= pieza_origen
			data.object.prueba_origen[fila_actual]  		= prueba_origen
			
			data.Object.ruta_imagen[fila_actual] = v_imagen_nueva
			//data.Object.ruta_imagen[1] = ftc_imagen_articulo_ruta("1", arg_escandallo[i].articulo) //Articulo
			//data.Object.ruta_imagen[fila_actual] = ftc_imagen_encajado_ruta("1", coleccion, modelo_origen, pieza_origen, "")
			
			data.Object.tecnico[fila_actual] = v_tecnico + " / " + v_dis
			
		next
	end if
next

if data.rowcount() > 0 then
	articulo = data.object.articulo[1]
	
	select articulo_ant
	into :v_base
	from art_escandallo
	where articulo = :articulo;
	
	select descripcion
	into :descripcion_base
	from articulos
	where codigo = :v_base
	and empresa = :codigo_Empresa;
	
	
	data.object.base1[1]					= v_base
	data.object.des_base1[1]			= descripcion_base
	
end if

data.SetFilter("")
data.Filter()
data.setsort(" empresa A, nivel D, articulo A, version A, ordenoperacion A, integer(ordenaplicacion) A ")
data.sort()


data.groupcalc()

if f_imprimir_datawindow(data) then

	if data.rowcount() > 0 then
		articulo = data.object.articulo[data.rowcount()]
		w_planificacion_tencer_wide.dw_imagenes_extra.settransobject(sqlca)
		if w_planificacion_tencer_wide.dw_imagenes_extra.retrieve(codigo_empresa, articulo, "2") > 0 then
			w_planificacion_tencer_wide.dw_imagenes_extra.Print(false)
			/*
			if MessageBox("Atención", "El artículo tiene imágenes de encajado adicionales. ¿Desea imprimirlas?", Question!, YesNo!, 2) = 1 then
				f_imprimir_datawindow(w_planificacion_tencer_wide.dw_imagenes_extra)
			end if
			*/
		end if
	end if
end if

destroy ds_operaciones


return
end subroutine

public function integer f_generar_copia_planificacion ();// Si no se produce ningún error devuelve 0
// Si se produce un error devuelve 1

long total_regs
boolean exito

if MessageBox("Cuestión", " ¿Seguro que desea ejecutar la copia de la planificación?",   Exclamation!, YesNo!, 2) = 1 then
	exito = true
	
	select count(*) 
	into :total_regs
	from planificacion_copia;
	
	if total_regs = 0 then
		INSERT INTO planificacion_copia
		SELECT * FROM planificacion using SQLCA;
	
		if SQLCA.SQLCode = -1 then	exito = false	
		
		if exito then
			commit using SQLCA;
			Messagebox("Aviso", "La copia se ha realizado con éxito" )
			return 0
		else
			rollback using SQLCA;
			Messagebox("Aviso", "Se ha producido un error, no se ha generado la copia." )
			return 1
		end if
	else
		Messagebox("Aviso", "Actualmente existe una copia, debe borrarla antes de generear una nueva." )
	end if
else
	return 0
end if	

end function

public function integer f_restaurar_copia_planificacion ();// Si no se produce ningún error devuelve 0
// Si se produce un error devuelve 1

long total_regs
boolean exito

if MessageBox("Cuestión", " ¿Seguro que desea RESTAURAR la copia de la planificación?",   Exclamation!, YesNo!, 2) = 1 then
	exito = true
	
	DELETE FROM planificacion USING SQLCA;
	if SQLCA.SQLCode = -1 then	exito = false	

	if exito then
		if total_regs = 0 then
			INSERT INTO planificacion
			SELECT * FROM planificacion_copia using SQLCA;
		
			if SQLCA.SQLCode = -1 then	exito = false	
			
			if exito then
				commit using SQLCA;
				Messagebox("Aviso", "La copia se ha restaurado con éxito" )
				return 0
			else
				rollback using SQLCA;
				Messagebox("Aviso", "Se ha producido un error, no se ha restaurado la copia." )
				return 1
			end if
		else
			Messagebox("Aviso", "Actualmente existe una copia, debe borrarla antes de generar una nueva." )
		end if
	else
		Messagebox("Aviso", "Error borrando la tabal planifacion." )
	end if
else
	return 0
end if	

end function

public subroutine f_enviar_archivos_inkcid (string empresa, string articulo, string ver, string operacion);string tiff

  SELECT art_ver_op_aplicaciones.tiff	  
  INTO :tiff
    FROM art_ver_op_aplicaciones 		LEFT OUTER JOIN prodaplicaciones ON art_ver_op_aplicaciones.empresa = prodaplicaciones.empresa AND art_ver_op_aplicaciones.tipoaplicacion = prodaplicaciones.codigo 
	 											LEFT OUTER JOIN prodpantallas ON art_ver_op_aplicaciones.empresa = prodpantallas.empresa AND art_ver_op_aplicaciones.pantalla = prodpantallas.codigo
												LEFT OUTER JOIN prodformula ON art_ver_op_aplicaciones.empresa = prodformula.empresa AND art_ver_op_aplicaciones.formula = prodformula.formula 
   WHERE ( art_ver_op_aplicaciones.empresa = :empresa ) AND  
         ( art_ver_op_aplicaciones.articulo = :articulo ) AND  
         ( art_ver_op_aplicaciones.version = :ver ) AND  
         ( art_ver_op_aplicaciones.operacion = :operacion ) AND
         ( art_ver_op_aplicaciones.tipoaplicacion = '51' )  ;
												





end subroutine

public subroutine f_borrar_archivos_maquina_marcados (string linea, datawindow dw_errores, transaction trans_sql);
string RUTA_MAQUINA_INK04 = "\\Ink-04\produccion\"

Datastore regs, ficheros
String ruta_maquina, tipomaquina_disenyo, operacion, articulo, archivo, archivo_prueba, ver, nombre_archivo
Long ordenoperacion
String sel
Long i, j, k, num_ficheros

dw_errores.reset()


//Obtengo ruta máquina y tipo de ficheros que utiliza la máquina
select ruta_inkcid, tipomaquina_disenyo 
into :ruta_maquina, :tipomaquina_disenyo 
from prodlineas
where empresa = :codigo_empresa
and codigo = :linea
using sqlca;

//Obtengo las lineas marcadas de planificación para eliminar sus ficheros
sel = " select cod_articulo, version, ordenoperacion "+&
		" from planificacion "+&
		" where usuario = '"+nombre_usuario+"' "

f_cargar_cursor_trans (sqlca, sel, regs)

for i = 1 to regs.rowcount()
	operacion = ""
	articulo = regs.object.cod_articulo[i] 
	ver = regs.object.version[i] 
	ordenoperacion = regs.object.ordenoperacion[i] 
	
	select operacion
	into :operacion
	from art_ver_operaciones 
	where articulo = :articulo
	and version = :ver
	and orden = :ordenoperacion
	and empresa = :codigo_empresa using sqlca;

	sel = "SELECT archivo_disenyo_codigo, archivo_disenyo_prueba "+&
			"FROM art_ver_op_aplicaciones "+&
			"WHERE empresa = '"+codigo_empresa+"' AND  "+&
			"		 articulo = '"+articulo+"' AND  "+&
			"		 version = '"+ver+"' AND  "+&
			"		 operacion = '"+operacion+"' AND "+&
			"		 archivo_disenyo_tipomaquina_disenyo = '"+tipomaquina_disenyo+"'"
	f_cargar_cursor_trans (SQLCA,  sel,  ficheros)
	j = 1
	num_ficheros = ficheros.RowCount()
	do while (j <= num_ficheros) 
		archivo = ficheros.object.archivo_disenyo_codigo[j]
		archivo_prueba = ficheros.object.archivo_disenyo_prueba[j]
		
		SELECT fichero 
		INTO :nombre_archivo 
		FROM archivo_disenyo_sistema_archivos 
		WHERE empresa = :codigo_empresa 
			AND tipomaquina_disenyo = :tipomaquina_disenyo 
			AND archivo = :archivo 
			AND codigo = :archivo_prueba
		USING SQLCA;
		
		if fileExists(ruta_maquina+nombre_archivo) then //El fichero existe, se intenta borrar
			if fileDelete(ruta_maquina+nombre_archivo) then //Supuestamente se ha borrado, se comprueba
				if fileExists(ruta_maquina+nombre_archivo) then //El archivo sigue existiendo, error de borrado
					k = dw_errores.insertrow(0)
					dw_errores.object.texto[k] = "ERROR BORRADO 2. Fichero: "+ruta_maquina+nombre_archivo
				end if
				if linea = "44" then
					fileDelete (RUTA_MAQUINA_INK04 +nombre_archivo)	
				end if
				if fileExists(RUTA_MAQUINA_INK04 +nombre_archivo) then //El archivo sigue existiendo, error de borrado
					k = dw_errores.insertrow(0)
					dw_errores.object.texto[k] = "ERROR BORRADO 2 (EFECTOS). Fichero: "+RUTA_MAQUINA_INK04 +nombre_archivo
				end if
			else
				//Error Borrado
				k = dw_errores.insertrow(0)
				dw_errores.object.texto[k] = "ERROR BORRADO 1. Fichero: "+ruta_maquina+nombre_archivo
			end if
		else
			//El fichero a borrar no existe
			k = dw_errores.insertrow(0)
			dw_errores.object.texto[k] = "El Fichero a borrar NO EXISTE: "+ruta_maquina+nombre_archivo
		end if
		j++
	loop
	
	Destroy ficheros		

next

Destroy regs

if dw_errores.rowcount() > 0 then
	dw_errores.visible = true;
	f_imprimir_datawindow(dw_errores)
end if


end subroutine

public subroutine f_imprimir_ficha_bases_enc ();string escandallo[],version_esc[],camino
long   indice,total,i, ot
tipo_array val,ent
datawindow DW, report
string articulo, version1 , version2

DW = w_planificacion_tencer_wide.dw_1
report = w_planificacion_tencer_wide.dw_listado_ficha

report.reset()

articulo = DW.object.cod_articulo[DW.GetRow()]
version1 = DW.object.planificacion_version[DW.GetRow()]
version2 = DW.object.planificacion_version[DW.GetRow()]
ot = DW.object.ot[DW.GetRow()]

f_imprimir_ficha_tecnica_ot(report,articulo,version1,version2, ot)
if f_imprimir_datawindow(report) then
	w_planificacion_tencer_wide.dw_imagenes_extra.settransobject(sqlca)
	if w_planificacion_tencer_wide.dw_imagenes_extra.retrieve(codigo_empresa, articulo, "2") > 0 then
		w_planificacion_tencer_wide.dw_imagenes_extra.Print(false)
		/*
		if MessageBox("Atención", "El artículo tiene imágenes de encajado adicionales. ¿Desea imprimirlas?", Question!, YesNo!, 2) = 1 then
			f_imprimir_datawindow(w_planificacion_tencer_wide.dw_imagenes_extra)
		end if
		*/
	end if
end if



end subroutine

public function string f_ruta_imagen_destino (string maquina, string perfil_color, string perfil_origen, string tipomaquina_disenyo);string ruta_destino, ruta_maquina
Long gestion_color

ruta_destino = ''
gestion_color = 0

/*
SELECT tipomaquina_disenyo.gestion_color, prodlineas.ruta_inkcid INTO :gestion_color, :ruta_maquina
FROM prodlineas 
INNER JOIN tipomaquina_disenyo ON tipomaquina_disenyo.empresa = prodlineas.empresa AND tipomaquina_disenyo.codigo = prodlineas.tipomaquina_disenyo
WHERE prodlineas.empresa = :codigo_empresa AND prodlineas.codigo = :maquina;
*/
SELECT tipomaquina_disenyo.gestion_color, prodlineas.ruta_inkcid INTO :gestion_color, :ruta_maquina
FROM prodlineas 
INNER JOIN prodlinea_tipomaquina_disenyo ON prodlinea_tipomaquina_disenyo.empresa = prodlineas.empresa AND prodlinea_tipomaquina_disenyo.prodlinea = prodlineas.codigo
INNER JOIN tipomaquina_disenyo ON prodlinea_tipomaquina_disenyo.empresa = tipomaquina_disenyo.empresa AND prodlinea_tipomaquina_disenyo.tipomaquina_disenyo = tipomaquina_disenyo.codigo
WHERE prodlineas.empresa = :codigo_empresa AND prodlineas.codigo = :maquina and 	prodlinea_tipomaquina_disenyo.tipomaquina_disenyo = :tipomaquina_disenyo;

if isnull(ruta_maquina) then ruta_maquina = ''
if isnull(perfil_color ) then perfil_color = ''

if ( gestion_color = 1 and perfil_color = '' ) then
	return "SIN PERFIL";
end if

if gestion_color = 0  then //Sin gestión color 
	if ruta_maquina <> '' then
		ruta_destino = ruta_maquina
	else
		messagebox ("Error", "La ruta destino de la máquina está vacía")
	end if

else //Con gestión Color
	SELECT carpeta
	into :ruta_destino
	FROM prodlineas_perfil_color
	where empresa = :codigo_empresa
	and prodlineas = :maquina
	and perfil_color = :perfil_color
	and activo = 1;
	
	if isnull (ruta_destino) or ruta_destino = "" then
		SELECT carpeta
		into :ruta_destino
		FROM prodlineas_perfil_color
		where empresa = :codigo_empresa
		and prodlineas = :maquina
		and perfil_color = :perfil_origen
		and activo = 1;
	
	end if
end if

return ruta_destino;
end function

on menu_planificacion_tencer_wide_lotes.create
menu_planificacion_tencer_wide_lotes=this
call super::create
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
this.m_archivo=create m_archivo
this.m_ventana=create m_ventana
this.m_herramientas=create m_herramientas
this.m_procesos=create m_procesos
this.m_seleccionar=create m_seleccionar
this.m_buscar=create m_buscar
this.m_listados=create m_listados
this.Item[UpperBound(this.Item)+1]=this.m_archivo
this.Item[UpperBound(this.Item)+1]=this.m_ventana
this.Item[UpperBound(this.Item)+1]=this.m_herramientas
this.Item[UpperBound(this.Item)+1]=this.m_procesos
this.Item[UpperBound(this.Item)+1]=this.m_seleccionar
this.Item[UpperBound(this.Item)+1]=this.m_buscar
this.Item[UpperBound(this.Item)+1]=this.m_listados
end on

on menu_planificacion_tencer_wide_lotes.destroy
call super::destroy
destroy(this.m_archivo)
destroy(this.m_ventana)
destroy(this.m_herramientas)
destroy(this.m_procesos)
destroy(this.m_seleccionar)
destroy(this.m_buscar)
destroy(this.m_listados)
end on

type m_archivo from menu within menu_planificacion_tencer_wide_lotes
m_grabar m_grabar
m_10 m_10
m_-2 m_-2
m_imprimir m_imprimir
m_imprimirseccin m_imprimirseccin
m_imprimirlneaactual m_imprimirlneaactual
m_-7 m_-7
m_imprimirfichatécnicacompleta m_imprimirfichatécnicacompleta
m_imprimirfichatcnica m_imprimirfichatcnica
m_imprimirfichaoperación m_imprimirfichaoperación
m_imprimiretiquetas m_imprimiretiquetas
m_-1 m_-1
m_salir m_salir
end type

on m_archivo.create
call super::create
this.text = "&Archivo"
this.toolbaritemtext = "Salir"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
this.m_grabar=create m_grabar
this.m_10=create m_10
this.m_-2=create m_-2
this.m_imprimir=create m_imprimir
this.m_imprimirseccin=create m_imprimirseccin
this.m_imprimirlneaactual=create m_imprimirlneaactual
this.m_-7=create m_-7
this.m_imprimirfichatécnicacompleta=create m_imprimirfichatécnicacompleta
this.m_imprimirfichatcnica=create m_imprimirfichatcnica
this.m_imprimirfichaoperación=create m_imprimirfichaoperación
this.m_imprimiretiquetas=create m_imprimiretiquetas
this.m_-1=create m_-1
this.m_salir=create m_salir
this.Item[UpperBound(this.Item)+1]=this.m_grabar
this.Item[UpperBound(this.Item)+1]=this.m_10
this.Item[UpperBound(this.Item)+1]=this.m_-2
this.Item[UpperBound(this.Item)+1]=this.m_imprimir
this.Item[UpperBound(this.Item)+1]=this.m_imprimirseccin
this.Item[UpperBound(this.Item)+1]=this.m_imprimirlneaactual
this.Item[UpperBound(this.Item)+1]=this.m_-7
this.Item[UpperBound(this.Item)+1]=this.m_imprimirfichatécnicacompleta
this.Item[UpperBound(this.Item)+1]=this.m_imprimirfichatcnica
this.Item[UpperBound(this.Item)+1]=this.m_imprimirfichaoperación
this.Item[UpperBound(this.Item)+1]=this.m_imprimiretiquetas
this.Item[UpperBound(this.Item)+1]=this.m_-1
this.Item[UpperBound(this.Item)+1]=this.m_salir
end on

on m_archivo.destroy
call super::destroy
destroy(this.m_grabar)
destroy(this.m_10)
destroy(this.m_-2)
destroy(this.m_imprimir)
destroy(this.m_imprimirseccin)
destroy(this.m_imprimirlneaactual)
destroy(this.m_-7)
destroy(this.m_imprimirfichatécnicacompleta)
destroy(this.m_imprimirfichatcnica)
destroy(this.m_imprimirfichaoperación)
destroy(this.m_imprimiretiquetas)
destroy(this.m_-1)
destroy(this.m_salir)
end on

type m_grabar from menu within m_archivo
end type

on m_grabar.create
call super::create
this.text = "Grabar"
this.toolbaritemname = "save!"
this.toolbaritemorder = 1
this.toolbaritemspace = 1
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;datawindow DW

DW = w_planificacion_tencer_wide.dw_1

if MessageBox("Atención", "¿Desea garabar los cambios?", Exclamation!, YesNo!, 2) = 1 then  
	CONNECT USING SQLCA;
	IF DW.Update(True) = 1 THEN
		COMMIT USING SQLCA;
	ELSE
		ROLLBACK USING SQLCA;
	END IF
end if

end event

on m_grabar.destroy
call super::destroy
end on

type m_10 from menu within m_archivo
end type

on m_10.create
call super::create
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_10.destroy
call super::destroy
end on

type m_-2 from menu within m_archivo
end type

on m_-2.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_-2.destroy
call super::destroy
end on

type m_imprimir from menu within m_archivo
end type

on m_imprimir.create
call super::create
this.text = "Imprimir Todo"
this.toolbaritemorder = 6
this.toolbaritemspace = 1
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;string copias = "1", ls_comando, ls_tmp , sel
datawindow report
datastore lineas_produccion
dec total_lineas, i

report = w_planificacion_tencer_wide.dw_listado_planificacion
report.SetTransObject(SQLCA)

//	Numero de copias
IF len(copias) > 0 THEN
	ls_comando = ls_comando +  " datawindow.print.copies = "+copias
END IF

ls_tmp = report.Modify(ls_comando)
IF len(ls_tmp) > 0 THEN
	MessageBox('ERROR', 'Error al preparar las Opciones de Impresión')
	Return
END IF

sel = "select codigo "+&
		"from prodlineas "+&
		"where empresa = '"+codigo_empresa+"' "+&
		"and codigo <> '7'"+&
		"order by resumido "
		
//lineas_produccion = f_cargar_cursor(sel)
f_cargar_cursor_nuevo(sel, lineas_produccion)
total_lineas = lineas_produccion.RowCount()
if total_lineas > 0 then
	for i = 1 to total_lineas
		if f_imprimir_planificacion(report, lineas_produccion.object.codigo[i]) <> 1 then
   		report.Print(TRUE)
		end if
	next
end if

destroy lineas_produccion

end event

on m_imprimir.destroy
call super::destroy
end on

type m_imprimirseccin from menu within m_archivo
end type

on m_imprimirseccin.create
call super::create
this.text = "Imprimir Sección"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;string copias = "1", ls_comando, ls_tmp , sel
datawindow report
datastore lineas_produccion
dec total_lineas, i
string  v_seccion

report = w_planificacion_tencer_wide.dw_listado_planificacion
report.SetTransObject(SQLCA)

//	Numero de copias
IF len(copias) > 0 THEN
	ls_comando = ls_comando +  " datawindow.print.copies = "+copias
END IF

ls_tmp = report.Modify(ls_comando)
IF len(ls_tmp) > 0 THEN
	MessageBox('ERROR', 'Error al preparar las Opciones de Impresión')
	Return
END IF

select seccion
into :v_seccion
from prodlineas
where empresa = :codigo_empresa
and codigo = :w_planificacion_tencer_wide.uo_1.em_codigo.text;

sel = "select codigo "+&
		"from prodlineas "+&
		"where empresa = '"+codigo_empresa+"' "+&
		"and seccion = '"+v_seccion+"'"+&
		"order by resumido "
		
//lineas_produccion = f_cargar_cursor(sel)
f_cargar_cursor_nuevo(sel,lineas_produccion)

total_lineas = lineas_produccion.RowCount()
if total_lineas > 0 then
	for i = 1 to total_lineas
		if f_imprimir_planificacion(report, lineas_produccion.object.codigo[i]) <> 1 then
   		report.Print(TRUE)
		end if
	next
end if

destroy lineas_produccion
end event

on m_imprimirseccin.destroy
call super::destroy
end on

type m_imprimirlneaactual from menu within m_archivo
end type

event clicked;string copias = "1", ls_comando, ls_tmp , sel
datawindow report
dec total_lineas, i


report = w_planificacion_tencer_wide.dw_listado_planificacion
report.SetTransObject(SQLCA)
report.reset()

if f_imprimir_planificacion(report, w_planificacion_tencer_wide.uo_1.em_codigo.text) <> 1 then
	
	report.sort()
	report.groupcalc()	
	
	f_imprimir_datawindow(report)
	
end if




end event

on m_imprimirlneaactual.create
call super::create
this.text = "Imprimir Línea Actual"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_imprimirlneaactual.destroy
call super::destroy
end on

type m_-7 from menu within m_archivo
end type

on m_-7.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_-7.destroy
call super::destroy
end on

type m_imprimirfichatécnicacompleta from menu within m_archivo
end type

event clicked;ftc_imprimir_ficha_tecnica_completa(1) 
//if messagebox("Aviso","¿Desea Imrpimir el Documento del Palet?", Question!, YesNo!, 2  ) = 1 then
//	ftc_imprmir_documento_almacen(1)
//end if
end event

on m_imprimirfichatécnicacompleta.create
call super::create
this.text = "Imprimir Ficha Técnica Completa"
this.microhelp = "Imprimir Ficha Técnica Completa"
this.toolbaritemname = "print!"
this.toolbaritemdownname = "Print!"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_imprimirfichatécnicacompleta.destroy
call super::destroy
end on

type m_imprimirfichatcnica from menu within m_archivo
end type

event clicked;ftc_imprimir_ficha_tecnica_bases()
end event

on m_imprimirfichatcnica.create
call super::create
this.visible = false
this.text = "Imprimir Ficha Técnica de Bases y Artículos Sueltos"
this.enabled = false
this.toolbaritemvisible = false
this.toolbaritemname = "custom084!"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_imprimirfichatcnica.destroy
call super::destroy
end on

type m_imprimirfichaoperación from menu within m_archivo
end type

on m_imprimirfichaoperación.create
call super::create
this.text = "Imprimir Ficha Operación"
this.microhelp = "Imprimir Ficha Operación"
this.toolbaritemname = "custom068!"
this.toolbaritemdownname = "Custom068!"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_imprimirfichaoperación.destroy
call super::destroy
end on

event clicked;//f_imprimir_ficha_operacion()

DataWindow DW
string articulo, ver
long ordenoperacion


DW = w_planificacion_tencer_wide.dw_1

w_planificacion_tencer_wide.dw_ficha_operacion.SetTransObject(SQLCA)

articulo = DW.object.cod_articulo[DW.GetRow()]

w_planificacion_tencer_wide.dw_ficha_operacion.Retrieve(codigo_empresa,articulo)

f_imprimir_datawindow(w_planificacion_tencer_wide.dw_ficha_operacion)
end event

type m_imprimiretiquetas from menu within m_archivo
end type

on m_imprimiretiquetas.create
call super::create
this.text = "Imprimir Etiquetas"
this.microhelp = "Abre ventana para asignar calidad y calibre de las etiquetas a imprimir"
this.toolbaritemname = "editdatagrid!"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_imprimiretiquetas.destroy
call super::destroy
end on

event clicked;long ll_ot

if w_planificacion_tencer_wide.dw_1.getrow() > 0 then
	ll_ot = w_planificacion_tencer_wide.dw_1.object.ot[w_planificacion_tencer_wide.dw_1.getrow()]
	
	if open(w_impresion_etiquetas_ean128) = 1 then
		w_impresion_etiquetas_ean128.il_ot = ll_ot
		w_impresion_etiquetas_ean128.f_datos_ot()
	end if
else
	messagebox("¡Atención!","Debe marcar la ot de la que quiere imprimir las etiquetas.")
end if
end event

type m_-1 from menu within m_archivo
end type

on m_-1.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_-1.destroy
call super::destroy
end on

type m_salir from menu within m_archivo
end type

on m_salir.create
call super::create
this.text = "&Salir"
this.microhelp = "Salir"
this.toolbaritemname = "exit!"
this.toolbaritemdownname = "Salir"
this.toolbaritemorder = 8
this.toolbaritemspace = 1
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;close(parentwindow)
end event

on m_salir.destroy
call super::destroy
end on

type m_ventana from menu within menu_planificacion_tencer_wide_lotes
end type

on m_ventana.create
call super::create
this.text = "Ventana"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_ventana.destroy
call super::destroy
end on

type m_herramientas from menu within menu_planificacion_tencer_wide_lotes
m_borrarseleccin m_borrarseleccin
m_moverantes m_moverantes
m_moverdespus m_moverdespus
m_0 m_0
m_selecciónmúltiple m_selecciónmúltiple
m_- m_-
m_5 m_5
m_borrarot m_borrarot
m_borrarot2 m_borrarot2
m_-9 m_-9
m_generarcopia m_generarcopia
m_3 m_3
m_4 m_4
m_-10 m_-10
m_consultas m_consultas
m_-4 m_-4
m_verimagen m_verimagen
end type

on m_herramientas.create
call super::create
this.text = "Herramientas"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
this.m_borrarseleccin=create m_borrarseleccin
this.m_moverantes=create m_moverantes
this.m_moverdespus=create m_moverdespus
this.m_0=create m_0
this.m_selecciónmúltiple=create m_selecciónmúltiple
this.m_-=create m_-
this.m_5=create m_5
this.m_borrarot=create m_borrarot
this.m_borrarot2=create m_borrarot2
this.m_-9=create m_-9
this.m_generarcopia=create m_generarcopia
this.m_3=create m_3
this.m_4=create m_4
this.m_-10=create m_-10
this.m_consultas=create m_consultas
this.m_-4=create m_-4
this.m_verimagen=create m_verimagen
this.Item[UpperBound(this.Item)+1]=this.m_borrarseleccin
this.Item[UpperBound(this.Item)+1]=this.m_moverantes
this.Item[UpperBound(this.Item)+1]=this.m_moverdespus
this.Item[UpperBound(this.Item)+1]=this.m_0
this.Item[UpperBound(this.Item)+1]=this.m_selecciónmúltiple
this.Item[UpperBound(this.Item)+1]=this.m_-
this.Item[UpperBound(this.Item)+1]=this.m_5
this.Item[UpperBound(this.Item)+1]=this.m_borrarot
this.Item[UpperBound(this.Item)+1]=this.m_borrarot2
this.Item[UpperBound(this.Item)+1]=this.m_-9
this.Item[UpperBound(this.Item)+1]=this.m_generarcopia
this.Item[UpperBound(this.Item)+1]=this.m_3
this.Item[UpperBound(this.Item)+1]=this.m_4
this.Item[UpperBound(this.Item)+1]=this.m_-10
this.Item[UpperBound(this.Item)+1]=this.m_consultas
this.Item[UpperBound(this.Item)+1]=this.m_-4
this.Item[UpperBound(this.Item)+1]=this.m_verimagen
end on

on m_herramientas.destroy
call super::destroy
destroy(this.m_borrarseleccin)
destroy(this.m_moverantes)
destroy(this.m_moverdespus)
destroy(this.m_0)
destroy(this.m_selecciónmúltiple)
destroy(this.m_-)
destroy(this.m_5)
destroy(this.m_borrarot)
destroy(this.m_borrarot2)
destroy(this.m_-9)
destroy(this.m_generarcopia)
destroy(this.m_3)
destroy(this.m_4)
destroy(this.m_-10)
destroy(this.m_consultas)
destroy(this.m_-4)
destroy(this.m_verimagen)
end on

type m_borrarseleccin from menu within m_herramientas
end type

on m_borrarseleccin.create
call super::create
this.text = "Borrar Selección"
this.microhelp = "Borrar Selección"
this.toolbaritemname = "notfound!"
this.toolbaritemdownname = "Borrar Seleccion"
this.toolbaritemorder = 1
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;string v_usuario
long fila_actual
datawindow DW
u_em_campo_2 EE

EE = w_planificacion_tencer_wide.uo_1
DW = w_planificacion_tencer_wide.dw_1  // Asiganamos el datawindow sobre el que haremos el borrado

v_usuario = nombre_usuario
fila_Actual = DW.GetRow()

CONNECT USING SQLCA;
update planificacion 
set usuario = "", ordenmarcado = 0
where empresa = :codigo_empresa
and usuario = :v_usuario;

IF SQLCA.SQLCode = 0 THEN
	COMMIT USING SQLCA;
ELSE
	ROLLBACK USING SQLCA;
END IF

DW.Retrieve(codigo_empresa,EE.em_codigo.text)
DW.ScrollToRow(fila_actual)
DW.SelectRow(fila_actual, true)
DW.SetRow(fila_actual)


w_planificacion_tencer_wide.st_piezas.text = ''
w_planificacion_tencer_wide.st_m2.text = ''





end event

on m_borrarseleccin.destroy
call super::destroy
end on

type m_moverantes from menu within m_herramientas
end type

on m_moverantes.create
call super::create
this.text = "Mover Antes"
this.microhelp = "Mover Antes"
this.toolbaritemname = "undo!"
this.toolbaritemdownname = "MOver Antes"
this.toolbaritemorder = 4
this.toolbaritemspace = 1
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;datastore lineas
string sel, v_usuario
dec v_orden, v_ot, total_lineas
int i, k
boolean bien = True
long fila_actual
u_em_campo_2 EE 
datawindow DW 

EE = w_planificacion_tencer_wide.uo_1
DW = w_planificacion_tencer_wide.dw_1

v_usuario = nombre_usuario

sel = " select * from planificacion "+& 
		" where empresa = "+codigo_empresa+&
		" and usuario = '"+v_usuario+"' order by ordenmarcado;"
		
f_cargar_cursor_nuevo(sel,lineas)



fila_Actual = DW.GetRow()

if DW.RowCount() > 0 then
   v_orden = DW.object.orden[Fila_actual]
else
	v_orden = 0
end if

total_lineas = lineas.RowCount() 

update planificacion
set orden = orden+:total_lineas
where empresa = :codigo_empresa
and lineaprod = :EE.em_codigo.text
and orden >= :v_orden
using sqlca;

if SQLCA.SQLCode <> 0 then
	bien = false
end if

for i = 1 to total_lineas
	v_ot = lineas.object.ot[i]
	
	update planificacion
	set lineaprod = :EE.em_codigo.text, orden = :v_orden, usuario = ""
	where empresa = :codigo_empresa
	and ot = :v_ot
	using sqlca;	

	if SQLCA.SQLCode <> 0 then
		bien = false
	end if

	update planificacion
	set  ordenmarcado = 0
	where empresa = :codigo_empresa
	using sqlca;
	
	if SQLCA.SQLCode <> 0 then
		bien = false
	end if
	
	v_orden = v_orden +1
	f_mensaje_proceso("Moviendo Registros :",i,total_lineas)
next

if bien  then
	commit using sqlca;
else
	rollback using sqlca;
end if

DW.Retrieve(codigo_empresa,EE.em_codigo.text)				
DW.ScrollToRow(fila_actual)

destroy lineas
end event

on m_moverantes.destroy
call super::destroy
end on

type m_moverdespus from menu within m_herramientas
end type

on m_moverdespus.create
call super::create
this.text = "Mover Después"
this.microhelp = "Mover Después"
this.toolbaritemname = "redo!"
this.toolbaritemdownname = "Mover Después"
this.toolbaritemorder = 5
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;datastore lineas
string sel
dec v_orden, v_ot, total_lineas
int i
string v_usuario
boolean bien = True
long fila_actual

u_em_campo_2 EE 
datawindow DW 

EE = w_planificacion_tencer_wide.uo_1
DW = w_planificacion_tencer_wide.dw_1

v_usuario = nombre_usuario
sel = " select * from planificacion "+& 
		" where empresa = "+codigo_empresa+&
		" and usuario = '"+v_usuario+"' order by ordenmarcado;"
		
//lineas = f_cargar_cursor (sel)
f_cargar_cursor_nuevo(sel,lineas)

fila_actual = DW.GetRow()
if DW.RowCount() > 0 then
   v_orden = DW.object.orden[fila_actual]
else
	v_orden = 0
end if

total_lineas = lineas.RowCount() 

update planificacion
set orden = orden+:total_lineas
where lineaprod = :EE.em_codigo.text
and empresa = :codigo_empresa
and orden > :v_orden
using sqlca;

if SQLCA.SQLCode <> 0 then
	bien = false
end if

for i = 1 to total_lineas
	v_orden = v_orden +1
	v_ot = lineas.object.ot[i]

	update planificacion
	set lineaprod = :EE.em_codigo.text, orden = :v_orden, usuario = ""
	where ot = :v_ot
	and empresa = :codigo_empresa
	using sqlca;	
	
	if SQLCA.SQLCode <> 0 then
		bien = false
	end if

	update planificacion
	set  ordenmarcado = 0
	where empresa = :codigo_empresa
	using sqlca;

	if SQLCA.SQLCode <> 0 then
		bien = false
	end if

	f_mensaje_proceso("Moviendo Registros :",i,total_lineas)
next

if bien then
	commit using sqlca;
else
	rollback using sqlca;
end if

DW.Retrieve(codigo_empresa,EE.em_codigo.text)				
DW.ScrollToRow(fila_actual)

destroy lineas
end event

on m_moverdespus.destroy
call super::destroy
end on

type m_0 from menu within m_herramientas
end type

on m_0.create
call super::create
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0.destroy
call super::destroy
end on

type m_selecciónmúltiple from menu within m_herramientas
end type

event clicked;datawindow DW
DW = w_planificacion_tencer_wide.dw_1

long v_inicial, v_final, v_orden_ini, v_orden_fin, i, v_ordenmarcado, v_ot
dec piezas, m2

select max(ordenmarcado)
into :v_final
from planificacion;

v_inicial = v_final - 1

if v_inicial > 0 then
	v_orden_ini = DW.Find("ordenmarcado = "+string(v_inicial),1 , DW.RowCount())
	v_orden_fin = DW.Find("ordenmarcado = "+string(v_final),v_orden_ini , DW.RowCount())
	
	for i = v_orden_ini to v_orden_fin
		v_ot = DW.object.ot[i]
		v_ordenmarcado = 0
		select max (ordenmarcado)
		into :v_ordenmarcado
		from planificacion
		using sqlca;
		v_ordenmarcado = v_ordenmarcado+1

	
		DW.object.planificacion_usuario[i] = nombre_usuario
		DW.object.ordenmarcado[i] = int(v_ordenmarcado)
		DW.object.planificacion_usuario.Color = RGB(0, 0, 255)
	
		update planificacion
		set usuario = :nombre_usuario, ordenmarcado = :v_ordenmarcado
		where ot = :v_ot 
		using sqlca;
		
		if SQLCA.SQLCode = 0 then
			commit using sqlca;
		else
			messagebox ("ERROR","No se puede marcar el registro")
			rollback using sqlca;
		end if
	
	next
end if	

//f_calculo_piezas_m2_seleccion (piezas, m2)

long k
piezas = 0
m2 = 0

for k=1 to	w_planificacion_tencer_wide.dw_1.rowcount()
	if w_planificacion_tencer_wide.dw_1.object.planificacion_usuario[k]  = nombre_usuario then
		piezas += w_planificacion_tencer_wide.dw_1.object.planificacion_cantidad[k]
		m2 += w_planificacion_tencer_wide.dw_1.object.m2[k]
	end if		
next

m2 = round (m2, 2)

	


w_planificacion_tencer_wide.st_piezas.text = string(piezas)
w_planificacion_tencer_wide.st_m2.text = string(m2)
end event

on m_selecciónmúltiple.create
call super::create
this.text = "Selección Múltiple~tF8"
this.shortcut = 119
this.microhelp = "Selección Multiple"
this.toolbaritemname = "sizevertical!"
this.toolbaritemdownname = "OutputNext!"
this.toolbaritemorder = 5
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_selecciónmúltiple.destroy
call super::destroy
end on

type m_- from menu within m_herramientas
end type

on m_-.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_-.destroy
call super::destroy
end on

type m_5 from menu within m_herramientas
end type

on m_5.create
call super::create
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_5.destroy
call super::destroy
end on

type m_borrarot from menu within m_herramientas
end type

event clicked;string v_usuario, tipo_operacion, ruta, operacion, articulo, ver, modelo, tiff, perfil
datawindow DW
u_em_campo_2 EE
int v_anyo, v_pedido, v_linped
boolean fallo = false
string sel
datastore datos, regs, ficheros
long i, ordenoperacion
//transaction trans_sql
Long j, num_ficheros
String archivo, archivo_prueba, nombre_archivo, tipo_maquina

DW = w_planificacion_tencer_wide.dw_1
EE = w_planificacion_tencer_wide.uo_1

v_usuario = nombre_usuario

if MessageBox("Atención", "Va a marcar cómo terminadas todas las OT,s de este pedido. ¿Seguro que desea borrar el registro?", Exclamation!, YesNo!, 2) = 2 then
	return
else

	// Cerrando ot´s (ot_termindada = 'S' )
	sel = " Select cod_articulo, anyo, pedido, linped, tipo_operacion " +&
			" from planificacion "+&
			" where usuario = '"+v_usuario+"' "+&
			" and empresa = '"+codigo_empresa+"' "
			
	f_cargar_cursor_transaccion ( sqlca, datos , sel)

	for i = 1 to datos.rowcount()
		v_anyo = datos.object.anyo[i]
		v_pedido = datos.object.pedido[i]
		v_linped = datos.object.linped[i]
		tipo_operacion = datos.object.tipo_operacion[i]

		if tipo_operacion = '9' or tipo_operacion = '27' or tipo_operacion = '31' then
			update prodpartes_ot 
			set ot_terminada = 'S'
			where anyo = :v_anyo
			and pedido = :v_pedido
			and linped = :v_linped using sqlca;
		end if
		
		if sqlca.SQLCode <> 0  then
			fallo = true;
		end if
		ruta = '1'
		fallo = f_calculo_coste_mermas_trans (codigo_empresa, datos.object.cod_Articulo[i], ruta , sqlca)
		f_mensaje_proceso ("Marcando ....", i, datos.rowcount())
	next
	// fin de cerrar ot´s

	//NUEVA FUNCION BORRADO TIFFS
	f_borrar_archivos_maquina_marcados(EE.em_codigo.text, w_planificacion_tencer_wide.dw_informe_archivos, sqlca)
	
	delete from planificacion 
	where empresa = :codigo_empresa
	and usuario = :v_usuario using sqlca;

	if  sqlca.SQLCode <> 0  then
		fallo = true;
	end if
	
	if fallo then
		rollback using sqlca;
		messagebox("ERROR", "Error en el proceso de borrado de OT.")
	else
		commit using sqlca;
	end if
	
	DW.Retrieve(codigo_empresa,EE.em_codigo.text)				
end if

destroy datos
destroy ficheros
end event

on m_borrarot.create
call super::create
this.text = "Borrar OT"
this.microhelp = "Borrar OT"
this.toolbaritemname = "clear!"
this.toolbaritemtext = "Borrado Marcando Ot´s Cómo Terminadas."
this.toolbaritemorder = 2
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_borrarot.destroy
call super::destroy
end on

type m_borrarot2 from menu within m_herramientas
end type

event clicked;string v_usuario, tipo_operacion, archivo, ruta, operacion, articulo, ver, modelo, tiff, perfil
datawindow DW
u_em_campo_2 EE
int v_anyo, v_pedido, v_linped
boolean correcto = true
string sel
datastore  regs, ficheros
long i,  ordenoperacion
transaction trans_sql
Long j, num_ficheros
String archivo_prueba, nombre_archivo, tipo_maquina

DW = w_planificacion_tencer_wide.dw_1
EE = w_planificacion_tencer_wide.uo_1

v_usuario = nombre_usuario

if MessageBox("Atención", "¿Seguro que desea borrar el registro?", Exclamation!, YesNo!, 2) = 2 then
	return
else

	f_crear_transaccion(trans_sql,"","",false,"TS","")
	CONNECT USING trans_sql;

	//NUEVA FUNCION BORRADO TIFFS
	f_borrar_archivos_maquina_marcados(EE.em_codigo.text, w_planificacion_tencer_wide.dw_informe_archivos, trans_sql)

	delete from planificacion 
	where empresa = :codigo_empresa
	and usuario = :v_usuario using trans_sql;

	if trans_sql.SQLCode <> 0  then
		correcto = false;
	end if
	
	if not correcto then
		rollback using trans_sql;
		DISCONNECT USING trans_sql;		
		messagebox("ERROR", "Error en el proceso de borrado de OT.    ERROR:"+ trans_sql.SQLErrText)
	else
		commit using trans_sql;
		DISCONNECT USING trans_sql;				
	end if
	
	DW.Retrieve(codigo_empresa,EE.em_codigo.text)				
end if

destroy trans_sql
destroy regs
destroy ficheros
end event

on m_borrarot2.create
call super::create
this.text = "Borrar Sin Cálculo Coste"
this.microhelp = "Borrar OT Sin Cacular Costes"
this.toolbaritemname = "custom094!"
this.toolbaritemtext = "Borrar Ot`s sin Marcarlas Cómo Terminadas."
this.toolbaritemorder = 3
this.shifttoright = true
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_borrarot2.destroy
call super::destroy
end on

type m_-9 from menu within m_herramientas
end type

on m_-9.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_-9.destroy
call super::destroy
end on

type m_generarcopia from menu within m_herramientas
end type

event clicked;f_generar_copia_planificacion()
end event

on m_generarcopia.create
call super::create
this.text = "Generar Copia"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_generarcopia.destroy
call super::destroy
end on

type m_3 from menu within m_herramientas
end type

event clicked;if MessageBox("Atención", " ¿Seguro que desea borrar la copia de la planificación?",   Exclamation!, YesNo!, 2) = 1 then
	if MessageBox("Atención", " Se van a borrar todos los datos de la copia de la planificación. ~rLos datos no se podrán recuperar.",   Exclamation!, OkCancel!, 2) = 1 then
	
		delete from planificacion_copia using SQLCA;
		
		if SQLCA.SQLCode = -1 then
			rollback using SQLCA;
			Messagebox("Aviso", "Se ha producido un error, no se ha borrado la copia." )
		else
			commit using SQLCA;
			Messagebox("Aviso", "La copia se ha borrado con éxito." )
		end if
	end if
end if
end event

on m_3.create
call super::create
this.text = "Borra Copia"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_3.destroy
call super::destroy
end on

type m_4 from menu within m_herramientas
end type

on m_4.create
call super::create
this.text = "Restaurar Copia"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_4.destroy
call super::destroy
end on

event clicked;f_restaurar_copia_planificacion()
end event

type m_-10 from menu within m_herramientas
end type

on m_-10.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_-10.destroy
call super::destroy
end on

type m_consultas from menu within m_herramientas
m_consultadepedidos m_consultadepedidos
m_12 m_12
m_1 m_1
m_2 m_2
m_verobservacionesstock m_verobservacionesstock
m_6 m_6
m_8 m_8
m_14 m_14
m_13 m_13
m_enviarnuevo m_enviarnuevo
m_enviarainkcid m_enviarainkcid
end type

on m_consultas.create
call super::create
this.text = "Consultas"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
this.m_consultadepedidos=create m_consultadepedidos
this.m_12=create m_12
this.m_1=create m_1
this.m_2=create m_2
this.m_verobservacionesstock=create m_verobservacionesstock
this.m_6=create m_6
this.m_8=create m_8
this.m_14=create m_14
this.m_13=create m_13
this.m_enviarnuevo=create m_enviarnuevo
this.m_enviarainkcid=create m_enviarainkcid
this.Item[UpperBound(this.Item)+1]=this.m_consultadepedidos
this.Item[UpperBound(this.Item)+1]=this.m_12
this.Item[UpperBound(this.Item)+1]=this.m_1
this.Item[UpperBound(this.Item)+1]=this.m_2
this.Item[UpperBound(this.Item)+1]=this.m_verobservacionesstock
this.Item[UpperBound(this.Item)+1]=this.m_6
this.Item[UpperBound(this.Item)+1]=this.m_8
this.Item[UpperBound(this.Item)+1]=this.m_14
this.Item[UpperBound(this.Item)+1]=this.m_13
this.Item[UpperBound(this.Item)+1]=this.m_enviarnuevo
this.Item[UpperBound(this.Item)+1]=this.m_enviarainkcid
end on

on m_consultas.destroy
call super::destroy
destroy(this.m_consultadepedidos)
destroy(this.m_12)
destroy(this.m_1)
destroy(this.m_2)
destroy(this.m_verobservacionesstock)
destroy(this.m_6)
destroy(this.m_8)
destroy(this.m_14)
destroy(this.m_13)
destroy(this.m_enviarnuevo)
destroy(this.m_enviarainkcid)
end on

type m_consultadepedidos from menu within m_consultas
end type

event clicked;//Open (w_ver_pedidos, w_planificacion)

OpenWithParm(w_ver_pedidos, w_planificacion_tencer_wide.dw_1)
end event

on m_consultadepedidos.create
call super::create
this.text = "Consulta de Pedidos"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_consultadepedidos.destroy
call super::destroy
end on

type m_12 from menu within m_consultas
end type

event clicked;OpenWithParm(w_consulta_cajas_disponibles, w_planificacion_tencer_wide.dw_1)
end event

on m_12.create
call super::create
this.text = "Consulta Cajas"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_12.destroy
call super::destroy
end on

type m_1 from menu within m_consultas
end type

event clicked;datawindow dw

dw = w_planificacion_tencer_wide.dw_1
OpenWithParm(w_con_stock_articulo, dw.object.cod_articulo[DW.GetRow()])



end event

on m_1.create
call super::create
this.text = "Consulta Stock Acabado"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_1.destroy
call super::destroy
end on

type m_2 from menu within m_consultas
end type

event clicked;dec v_stocksugerido
string v_articulo
int resultado

v_articulo = w_planificacion_tencer_wide.dw_1.object.cod_articulo[w_planificacion_tencer_wide.dw_1.GetRow()]

select stocksugerido
into :v_stocksugerido
from articulos
where empresa = :codigo_empresa
and codigo = :v_articulo;

if isnull(v_stocksugerido) then v_stocksugerido = 0

//messagebox("Stock Sugerido", "Stock: "+string(v_stocksugerido, "###,###,##0"))

str_ventana_alerta parametros
string botones[1]

parametros.titulo = "Stock Sugerido"
parametros.mensaje = "Stock: "+string(v_stocksugerido, "###,###,##0")
parametros.tipo = 3
botones[1] = "Aceptar"
parametros.botones = botones
parametros.mostrar_imagen = true
openwithparm(wtc_ventana_alerta_popup, parametros)




end event

on m_2.create
call super::create
this.text = "Consulta Stock Sugerido"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_2.destroy
call super::destroy
end on

type m_verobservacionesstock from menu within m_consultas
end type

event clicked;datawindow dw

dw = w_planificacion_tencer_wide.dw_1
OpenWithParm(w_con_stock_articulo, dw.object.base[DW.GetRow()])

end event

on m_verobservacionesstock.create
call super::create
this.text = "Consulta de Stock de Base"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_verobservacionesstock.destroy
call super::destroy
end on

type m_6 from menu within m_consultas
end type

on m_6.create
call super::create
this.visible = false
this.text = "Consulta Piezas y m2 de la Selección"
this.enabled = false
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_6.destroy
call super::destroy
end on

event clicked;long  i
decimal m2, piezas

//f_calculo_piezas_m2_seleccion (piezas, m2)

piezas = 0
m2 = 0

for i=1 to w_planificacion_tencer_wide.dw_1.rowcount()
	if w_planificacion_tencer_wide.dw_1.object.planificacion_usuario[i]  = nombre_usuario then
		piezas += w_planificacion_tencer_wide.dw_1.object.planificacion_cantidad[i]
		m2 += w_planificacion_tencer_wide.dw_1.object.m2[i]
	end if		
next

m2 = round (m2, 2)

w_planificacion_tencer_wide.st_piezas.text = string(piezas)
w_planificacion_tencer_wide.st_m2.text = string(m2)
end event

type m_8 from menu within m_consultas
end type

on m_8.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_8.destroy
call super::destroy
end on

type m_14 from menu within m_consultas
end type

event clicked;string campo, molde
str_wt_busquedas_salida resultado
str_wt_busquedas_entrada busqueda


busqueda.filtro_es_codigo = false


busqueda.titulo_ventana = "Localización moldes"
molde = w_planificacion_tencer_wide.dw_1.object.articulos_molde[w_planificacion_tencer_wide.dw_1.GetRow()]
busqueda.consulta  = " SELECT prodlineas.descripcion LINEA, planificacion.cod_articulo ARTICULO, articulos.descripcion "+&
								" FROM planificacion "+&
								" INNER JOIN  articulos ON planificacion.cod_Articulo = articulos.codigo and planificacion.empresa = articulos.empresa "+&
								" INNER JOIN  prodlineas ON planificacion.lineaprod = prodlineas.codigo and planificacion.empresa = prodlineas.empresa "+&
								" WHERE planificacion.empresa = '"+codigo_empresa+"' "+&
								" AND articulos.molde = '"+molde+"' "+&
								" AND planificacion.tipo_operacion = '28'"+&
								" ORDER BY  prodlineas.descripcion "
								

busqueda.titulos[1] = "Código"
busqueda.titulos[2] = "Descripción"

OpenWithParm(wt_busquedas, busqueda)
resultado = Message.PowerObjectParm
if resultado.resultado > 0 then
//	this.object.prodlineas_tipomaquina_disenyo[this.GetRow()] 			= resultado.valores[1]
//	this.object.tipomaquina_disenyo_descripcion[this.GetRow()]			= resultado.valores[2]		
end if		
end event

on m_14.create
call super::create
this.text = "Localizar Molde"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_14.destroy
call super::destroy
end on

type m_13 from menu within m_consultas
end type

on m_13.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_13.destroy
call super::destroy
end on

type m_enviarnuevo from menu within m_consultas
end type

event clicked;string articulo, ver, operacion, modelo, archivo, archivo_prueba, archivo_dest, perfil, perfil_carpeta, resolucion
long ordenoperacion, i, j, k, num_ficheros
datawindow DW
datastore regs
transaction trans_sql
string sel, tiff, origen, destino, ruta_origen, ruta_destino, disenyador, des_disenyador, tecnico, des_tecnico, tipo_maquina, digital, ruta, fichero, nombre_archivo
int resultado

String texto, nombre_fichero
String cadena_conversion[500]
Long conversiones = 0
integer f_conversor

Datastore ficheros

DW = w_planificacion_tencer_wide.dw_1


select ruta_inkcid, ruta_origen, tipomaquina_disenyo, digital, resolucion
into :ruta_destino, :ruta_origen, :tipo_maquina, :digital, :resolucion 
from prodlineas
where empresa = :codigo_empresa
and codigo = :w_planificacion_tencer_wide.uo_1.em_codigo.text;

//ruta_origen = "\\amazonas\disenyo\produccion\"
//ruta_destino = "c:\pruebas\"

w_planificacion_tencer_wide.dw_informe_archivos.reset()

f_crear_transaccion(trans_sql,"","",false,"TS","")
connect using trans_sql;

sel = " select cod_articulo, version, ordenoperacion "+&
		" from planificacion "+&
		" where usuario = '"+nombre_usuario+"' "

f_cargar_cursor_nuevo (sel, regs)

k = 0
for i = 1 to regs.rowcount()
	operacion = ""
	articulo = regs.object.cod_articulo[i] 
	ver = regs.object.version[i] 
	ordenoperacion = regs.object.ordenoperacion[i] 

	select operacion
	into :operacion
	from art_ver_operaciones 
	where articulo = :articulo
	and version = :ver
	and orden = :ordenoperacion
	and empresa = :codigo_empresa using trans_sql;
	
	
	//DETERMINACIÓN DEL MÉTODO DE ENVÍO A MÁQUINA DE PRODUCCIÓN
	
	//SISTEMA ANTIGUO
	modelo = ""
	
	select referencia_laboratorio
	into :modelo
	from articulos
	where empresa = :codigo_empresa
	and codigo = :articulo;
	
	if not isnull(modelo) and modelo <> "" then

		select desmodelo.tecnico_dis, tecnico_dis.descripcion
		into :disenyador, :des_disenyador
		from desmodelo, tecnico_dis
		where desmodelo.modelo = :modelo
		and desmodelo.empresa = :codigo_empresa
		and desmodelo.empresa = tecnico_dis.empresa
		and desmodelo.tecnico_dis = tecnico_dis.codigo;
	
	/*
		SELECT art_ver_op_aplicaciones.tiff, art_ver_op_aplicaciones.perfil
		INTO :tiff, :perfil
		FROM art_ver_op_aplicaciones LEFT OUTER JOIN prodaplicaciones ON art_ver_op_aplicaciones.empresa = prodaplicaciones.empresa AND art_ver_op_aplicaciones.tipoaplicacion = prodaplicaciones.codigo 
												LEFT OUTER JOIN prodpantallas ON art_ver_op_aplicaciones.empresa = prodpantallas.empresa AND art_ver_op_aplicaciones.pantalla = prodpantallas.codigo
												LEFT OUTER JOIN prodformula ON art_ver_op_aplicaciones.empresa = prodformula.empresa AND art_ver_op_aplicaciones.formula = prodformula.formula 
		WHERE ( art_ver_op_aplicaciones.empresa = :codigo_empresa ) AND  
		( art_ver_op_aplicaciones.articulo = :articulo ) AND  
		( art_ver_op_aplicaciones.version = :ver ) AND  
		( art_ver_op_aplicaciones.operacion = :operacion ) AND
		( art_ver_op_aplicaciones.tipoaplicacion = '51' ) using trans_sql  ;
	
		if w_planificacion_tencer_wide.sle_valor.text = '39' then //INK1
			archivo = "\T"+tiff+".tif"
			origen = ruta_origen+modelo+archivo
			destino = ruta_destino+archivo
		end if
		if w_planificacion_tencer_wide.sle_valor.text = '44' then //INK2
			archivo = +"\T"+tiff+"_INK2.tif"
			origen = ruta_origen+archivo
			destino = ruta_destino+archivo
		end if
		if w_planificacion_tencer_wide.sle_valor.text = '45' then //INK3
			archivo = "\T"+tiff+".tif"
			origen = ruta_origen+modelo+archivo
			destino = ruta_destino+archivo
		end if
		
		*/
		
		SELECT prodformula.descripcion_produccion, art_ver_op_aplicaciones.perfil	  
		INTO :tiff, :perfil
		FROM art_ver_op_aplicaciones LEFT OUTER JOIN prodaplicaciones ON art_ver_op_aplicaciones.empresa = prodaplicaciones.empresa AND art_ver_op_aplicaciones.tipoaplicacion = prodaplicaciones.codigo 
												LEFT OUTER JOIN prodpantallas ON art_ver_op_aplicaciones.empresa = prodpantallas.empresa AND art_ver_op_aplicaciones.pantalla = prodpantallas.codigo
												LEFT OUTER JOIN prodformula ON art_ver_op_aplicaciones.empresa = prodformula.empresa AND art_ver_op_aplicaciones.formula = prodformula.formula 
		WHERE ( art_ver_op_aplicaciones.empresa = :codigo_empresa ) AND  
		( art_ver_op_aplicaciones.articulo = :articulo ) AND  
		( art_ver_op_aplicaciones.version = :ver ) AND  
		( art_ver_op_aplicaciones.operacion = :operacion ) AND
		( art_ver_op_aplicaciones.tipoaplicacion = '51' ) using trans_sql  ;
		
		resultado = 1
		if w_planificacion_tencer_wide.uo_1.em_codigo.text = '39' then //INK1
			archivo = "\"+tiff+".tif"
			origen = ruta_origen+modelo+archivo
			destino = ruta_destino+archivo
		elseif w_planificacion_tencer_wide.uo_1.em_codigo.text = '44' then //INK2
			//archivo = "\"+tiff+"_INK2.tif"
			//origen = ruta_origen+archivo
			archivo = "\"+tiff+".tif"
			archivo_dest = "\"+tiff+"_INK2.tif"
			origen = ruta_origen+modelo+archivo
			destino = ruta_destino+archivo_dest
		elseif w_planificacion_tencer_wide.uo_1.em_codigo.text = '45' then //INK3
			archivo = "\"+tiff+".tif"
			origen = ruta_origen+modelo+archivo
			destino = ruta_destino+archivo
		else
			resultado = -1
		end if
		
		//SISTEMA NUEVO APLICADO A MODELOS ANTIGUOS
		//*************************************************************************************************************************************
		sel = "SELECT archivo_disenyo_codigo, archivo_disenyo_prueba "+&
					"FROM art_ver_op_aplicaciones "+&
					"WHERE empresa = '"+codigo_empresa+"' AND  "+&
					"		 articulo = '"+articulo+"' AND  "+&
					"		 version = '"+ver+"' AND  "+&
					"		 operacion = '"+operacion+"' AND "+&
					"		 archivo_disenyo_tipomaquina_disenyo = '"+tipo_maquina+"'" //SOLO COGEMOS FICHEROS NUEVOS POR LA CONDICION DE QUE archivo_disenyo_tipomaquina_disenyo TIENE UN VALOR CONCRETO
		f_cargar_cursor_trans (SQLCA,  sel,  ficheros)
		j = 1
		num_ficheros = ficheros.RowCount()
		do while (j <= num_ficheros) 
			archivo = ficheros.object.archivo_disenyo_codigo[j]
			archivo_prueba = ficheros.object.archivo_disenyo_prueba[j]
			
			origen = ""
			SELECT REPLACE(((SELECT ruta_archivos_disenyo FROM empresas WHERE empresa = '1') + ruta + fichero),' ', ''), fichero INTO :origen, :nombre_archivo FROM archivo_disenyo_sistema_archivos 
			WHERE empresa = :codigo_empresa AND tipomaquina_disenyo = :tipo_maquina AND archivo = :archivo AND codigo = :archivo_prueba;
			if isnull(origen) or origen = "" then
				k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
				w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = des_disenyador+" ARTÍCULO: "+articulo+"  MODELO:   "+modelo+"  Fichero: "+nombre_archivo
			else
				if fileexists(ruta_destino + nombre_archivo) then
					//No avisamos. Lo reemplazamos directamente puesto que es lo normal
				end if
				if not isnull(resolucion) and resolucion <> "" then
					
					//---------------------------------------------------------------------------------------------------------------------------------------------
					//resultado = run ('c:\tencer_pb12\IM\convert.exe '+origen+' -resample '+resolucion+' '+ruta_destino + nombre_archivo, Minimized!)
					conversiones ++
					cadena_conversion[conversiones] = 'convert.exe '+origen+' -resample '+resolucion+' '+ruta_destino + nombre_archivo
					resultado = 1
					//---------------------------------------------------------------------------------------------------------------------------------------------
					
				else
					resultado = filecopy(origen, ruta_destino + nombre_archivo, true)
				end if
				if resultado <> 1 then
					k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
					w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = "ERROR COPIA - ARTÍCULO: "+articulo+"  MODELO:   "+modelo+"  Ruta Destino: "+destino
				end if
			end if
			j++
		loop
		//FIN SISTEMA NUEVO APLICADO A MODELOS ANTIGUOS
		//*************************************************************************************************************************************
		
		//ENVIO VIEJO, si ho ha sido posible por el nuevo
		if resultado <> -1 and num_ficheros = 0 then
				/*
			if not isnull(perfil) and perfil <> "" then
				SELECT carpeta INTO :perfil_carpeta FROM perfil color WHERE empresa = :codigo_empresa AND codigo = :perfil;
				ruta_destino = ruta_destino + carpeta + "\"
			end if
			*/
			
			if FileExists (origen) then
				//Comprobar si hay que realizar cambio de resolución
				if not isnull(resolucion) and resolucion <> "" then
					
					//resultado = run ('c:\tencer_pb12\IM\convert.exe '+origen+' -resample '+resolucion+' '+destino, Minimized!)
					//---------------------------------------------------------------------------------------------------------------------------------------------
					conversiones ++
					cadena_conversion[conversiones] = 'convert.exe '+origen+' -resample '+resolucion+' '+destino
					resultado = 1
					//---------------------------------------------------------------------------------------------------------------------------------------------
					
				else
					resultado = FileCopy (origen, destino, true )
				end if
			else
				resultado = -1
			end if
			
			if resultado <> 1 then 
				k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
				w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = des_disenyador+"     ARTÍCULO: "+articulo+"     MODELO:   "+modelo+"      Ruta origen: "+origen
			end if
		end if
	else
	
		//NUEVO SISTEMA ENVIOS
		
		modelo = ""
		
		select modelo_origen
		into :modelo 
		from articulos
		where empresa = :codigo_empresa
		and codigo = :articulo;
		
		if not isnull (modelo) and modelo <> "" then
			
			select modelo.tecnico_dis, tecnico_dis.descripcion
			into :disenyador, :des_disenyador
			from modelo, tecnico_dis
			where modelo.modelo = :modelo
			and modelo.empresa = :codigo_empresa
			and modelo.empresa = tecnico_dis.empresa
			and modelo.tecnico_dis = tecnico_dis.codigo;
			
			//ADVERTENCIA: SOLO SE ENVIARÁN FICHEROS A MÁQUINAS DIGITALES ASOCIADAS A SU CORRESPONDIENTE TIPO MÁQUINA DE DISEÑO
			
			if digital <> '1' then
				k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
				w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = "ARTÍCULO: "+articulo+"  La linea seleccionada no es una máquina digital. No se puede realizar el envio."
			else
				
				sel = "SELECT archivo_disenyo_codigo, archivo_disenyo_prueba "+&
						"FROM art_ver_op_aplicaciones "+&
						"WHERE empresa = '"+codigo_empresa+"' AND  "+&
						"		 articulo = '"+articulo+"' AND  "+&
						"		 version = '"+ver+"' AND  "+&
						"		 operacion = '"+operacion+"' AND "+&
						"		 archivo_disenyo_tipomaquina_disenyo = '"+tipo_maquina+"'"
				f_cargar_cursor_trans (SQLCA,  sel,  ficheros)
				j = 1
				num_ficheros = ficheros.RowCount()
				do while (j <= num_ficheros) 
					archivo = ficheros.object.archivo_disenyo_codigo[j]
					archivo_prueba = ficheros.object.archivo_disenyo_prueba[j]
					
					origen = ""
					SELECT REPLACE(((SELECT ruta_archivos_disenyo FROM empresas WHERE empresa = '1') + ruta + fichero),' ', ''), fichero INTO :origen, :nombre_archivo FROM archivo_disenyo_sistema_archivos 
					WHERE empresa = :codigo_empresa AND tipomaquina_disenyo = :tipo_maquina AND archivo = :archivo AND codigo = :archivo_prueba;
					if isnull(origen) or origen = "" then
						k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
						w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = des_disenyador+" (SISTEMA NUEVO)  ARTÍCULO: "+articulo+"  MODELO:   "+modelo+"  Archivo: "+ruta_destino + nombre_archivo
					else
						if fileexists(ruta_destino + nombre_archivo) then
							//No avisamos. Lo reemplazamos directamente puesto que es lo normal
						end if
						if not isnull(resolucion) and resolucion <> "" then
							
							//---------------------------------------------------------------------------------------------------------------------------------------------
							//resultado = run ('c:\tencer_pb12\IM\convert.exe '+origen+' -resample '+resolucion+' '+ruta_destino + nombre_archivo, Minimized!)
							conversiones ++
							cadena_conversion[conversiones] = 'convert.exe '+origen+' -resample '+resolucion+' '+ruta_destino + nombre_archivo
							resultado = 1
							//---------------------------------------------------------------------------------------------------------------------------------------------
							
						else
							resultado = filecopy(origen, ruta_destino + nombre_archivo, true)
						end if
						if resultado <> 1 then
							k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
							w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = "ERROR COPIA SISTEMA NUEVO - ARTÍCULO: "+articulo+"  MODELO:   "+modelo+" ~n Origen: "+origen+" Archivo: "+ruta_destino + nombre_archivo
						end if
					end if
					
					j++
				loop
				if num_ficheros = 0 and (w_planificacion_tencer_wide.uo_1.em_codigo.text = '39' or w_planificacion_tencer_wide.uo_1.em_codigo.text = '44' or w_planificacion_tencer_wide.uo_1.em_codigo.text = '45' or w_planificacion_tencer_wide.uo_1.em_codigo.text = '2') then //INK1, 2, 3 y KERA
					//Tiene que existir un fichero asociado a este tipño de máquinas o ha ocurrido un error en el alta
					k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
					w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = "ARTÍCULO: "+articulo+"  Laboratorio no ha introducido el fichero necesario para la máquina."
				end if
			end if
		end if
	end if
	//ERROR POR FALTA DE REFERENCIA AL MODELO
	
	if isnull (modelo) or modelo = "" then
		k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
		w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = "ARTÍCULO: "+articulo+"  Laboratorio no ha introducido una referencia al modelo origen."
	end if
	
	f_mensaje_proceso ("Reg: ", i , regs.rowcount())
next

if conversiones > 0 then
	//nombre_fichero = "C:\Tencer_pb12\conv_plani_"+String(Datetime(Today(), Now()), "dd_mm_yyyy_hh_mm_ss")+".bat"
	nombre_fichero = "C:\Tencer_pb12\conv_plani.bat"
	f_conversor = FileOpen(nombre_fichero, LineMode!, Write!, LockReadWrite!, Replace!)
	if f_conversor <> -1 then
		For i = 1 To conversiones 
			texto = cadena_conversion[i]
			FileWrite(f_conversor, texto)
		Next
		FileClose(f_conversor)
		if run (nombre_fichero, Minimized!) <> 1 then
			MessageBox("Atención", "No se ha podido lanzar el conversor y enviar a la máquina los archivos seleccionados.")
		end if
		//filedelete(nombre_fichero) //Si lo borro paro la ejecución
	else
		MessageBox("Atención", "No se ha podido convertir y enviar a la máquina los archivos seleccionados. Fallo al abrir el bat (¿está siendo usado?).")
	end if	
end if

Destroy ficheros

update planificacion 
set usuario = "", ordenmarcado = 0
where empresa = :codigo_empresa
and usuario = :nombre_usuario using trans_sql;

IF trans_sql.sqlcode <> 0 THEN
	messagebox ("Error","Error Copiando Archivos. Avise al administrador. Detalles: "+trans_sql.SQLErrText)
	ROLLBACK USING trans_sql;
	DISCONNECT USING trans_sql;
ELSE
	COMMIT USING trans_sql;
END IF
	
Destroy trans_sql
Destroy regs

if w_planificacion_tencer_wide.dw_informe_archivos.rowcount() > 0 then
	w_planificacion_tencer_wide.dw_informe_archivos.retrieve()
	w_planificacion_tencer_wide.dw_informe_archivos.visible = true;
	f_imprimir_datawindow(w_planificacion_tencer_wide.dw_informe_archivos)
end if

DW.Retrieve(codigo_empresa,w_planificacion_tencer_wide.uo_1.em_codigo.text)


end event

on m_enviarnuevo.create
call super::create
this.visible = false
this.text = "Enviar Viejo"
this.enabled = false
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_enviarnuevo.destroy
call super::destroy
end on

type m_enviarainkcid from menu within m_consultas
end type

on m_enviarainkcid.create
call super::create
this.text = "Enviar Archivos a Máquinas de Producción"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_enviarainkcid.destroy
call super::destroy
end on

event clicked;// LO DEJAMOS PREPARADO PARA CUANDO HAGAMOS LA MIGRACIÓN AL NUEVO SISTEMA

string RUTA_EFECTOS_INK04 = "\\Amazonas\hotfolders\INK-04\EFECTOS\"

datawindow DW
string maquina_destino, sel, tipo_maquina, disenyador, modelo_origen, referencia_laboratorio, cadena
string   origen_bocetos, origen_antiguo
string perfil_color, perfil_origen
string destino, empresa_ruta_archivos_disenyo, ruta_destino, empresa_ruta_archivos_cambio_perfil
string ruta_archivo, archivo, archivo_destino 
datastore  ds_archivos
long i, k, m
int resultado
string articulo
string sel2
datastore ds_tipomaquina
string tipomaquina_disenyo
string tipo_operacion

DW = w_planificacion_tencer_wide.dw_1
w_planificacion_tencer_wide.dw_informe_archivos.reset()

maquina_destino = w_planificacion_tencer_wide.uo_1.em_codigo.text


sel2 = " select tipomaquina_disenyo "+&
		" from prodlinea_tipomaquina_disenyo "+&
		" where empresa = '"+codigo_empresa+" ' "+&
		" and prodlinea = '"+maquina_destino+"' "
		
f_cargar_cursor_nuevo (sel2, ds_tipomaquina)		

tipo_maquina = ""
for m = 1 to ds_tipomaquina.RowCount()
	if tipo_maquina = "" then
			tipo_maquina = ds_tipomaquina.object.tipomaquina_disenyo[m]
	else
		tipo_maquina = tipo_maquina +", "+ ds_tipomaquina.object.tipomaquina_disenyo[m]
	end if
next

destroy ds_tipomaquina
/*
select tipomaquina_disenyo
into :tipo_maquina
from prodlineas
where empresa = :codigo_empresa
and codigo = :maquina_destino;
*/

select ruta_archivos_disenyo, ruta_archivos_cambio_perfil
into :empresa_ruta_archivos_disenyo, :empresa_ruta_archivos_cambio_perfil
from  empresas	
where empresa = :codigo_empresa;

sel = " select distinct rtrim(ltrim(archivo_disenyo_sistema_archivos.ruta)) as ruta_archivo,  rtrim(ltrim(archivo_disenyo_sistema_archivos.fichero)) as archivo, "+&
						"  planificacion.cod_articulo, "+&
						" archivo_disenyo_sistema_archivos.perfil_color, "+&
						" archivo_disenyo_sistema_archivos.perfil_origen as perfil_origen, archivo_disenyo_sistema_archivos.tipomaquina_disenyo, "+&
						" art_ver_operaciones.tipo_operacion "+&
" from planificacion "+&
" left outer join art_ver_operaciones on planificacion.empresa = art_ver_operaciones.empresa "+&
	 								" and planificacion.cod_articulo = art_ver_operaciones.articulo "+&
									" and planificacion.version = art_ver_operaciones.version "+&
									" and planificacion.ordenoperacion = art_ver_operaciones.orden  "+&
" left outer join art_ver_op_aplicaciones on planificacion.empresa = art_ver_op_aplicaciones.empresa "+&
										" and planificacion.cod_articulo = art_ver_op_aplicaciones.articulo "+&
										" and planificacion.version = art_ver_op_aplicaciones.version "+&
										" and art_ver_operaciones.operacion = art_ver_op_aplicaciones.operacion "+&
" left outer join archivo_disenyo_sistema_archivos on art_ver_op_aplicaciones.archivo_disenyo_tipomaquina_disenyo = archivo_disenyo_sistema_archivos.tipomaquina_disenyo "+&
												" and art_ver_op_aplicaciones.archivo_disenyo_codigo = archivo_disenyo_sistema_archivos.archivo "+&
												" and art_ver_op_aplicaciones.archivo_disenyo_prueba = archivo_disenyo_sistema_archivos.codigo "+&
" where planificacion.empresa = '"+codigo_empresa+"' "+&
" and art_ver_op_aplicaciones.archivo_disenyo_tipomaquina_disenyo in ("+tipo_maquina+") "+&
" and planificacion.usuario = '"+nombre_usuario+"' "



f_cargar_cursor_nuevo (sel, ds_archivos)


for i = 1 to ds_archivos.rowcount()

	articulo = ds_archivos.object.planificacion_cod_articulo[i]
	ruta_archivo = ds_archivos.object.ruta_archivo[i]
	archivo = ds_archivos.object.archivo[i]

	tipomaquina_disenyo = ds_archivos.object.archivo_disenyo_sistema_archivos_tipomaquina_disenyo[i]
	tipo_operacion = 	ds_archivos.object.art_ver_operaciones_tipo_operacion[i]
	
	origen_bocetos = empresa_ruta_archivos_disenyo + ruta_archivo + archivo
	origen_antiguo = empresa_ruta_archivos_cambio_perfil + archivo
	
	perfil_color = ds_archivos.object.archivo_disenyo_sistema_archivos_perfil_color[i]
	ruta_destino = f_ruta_imagen_destino (maquina_destino, perfil_color, perfil_origen, tipomaquina_disenyo) 
	archivo_destino = ruta_destino + archivo
	

		
	if FileExists ( ruta_destino ) then
		if FileExists ( origen_bocetos ) then
			resultado =  FileCopy (origen_bocetos, archivo_destino, true)	
			
			choose case resultado
			case  1 //Success
				
			case -1 //Error opening sourcefile
				k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
				w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = "ART: "+articulo+"   ERROR ABRIENDO ORIGEN:  "+origen_bocetos
			
			case -2 // Error writing targetfile
				k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
				w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = "ART: "+articulo+"   ERROR ESCRIBIENDO  "+archivo_destino

			end choose
			
			RUTA_EFECTOS_INK04 = "\\Amazonas\hotfolders\INK-04\EFECTOS\"
			RUTA_EFECTOS_INK04 = RUTA_EFECTOS_INK04 + archivo
	 		if maquina_destino = "44" then
				if tipo_operacion = '43' or tipo_operacion = '45' or tipo_operacion = '54' then
					resultado = FileCopy (origen_bocetos, RUTA_EFECTOS_INK04 , true)	
				end if
			end if
			choose case resultado
			case  1 //Success
				
			case -1 //Error opening sourcefile
				k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
				w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = "ART: "+articulo+"   ERROR ABRIENDO ORIGEN:  "+origen_bocetos
			
			case -2 // Error writing targetfile
				k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
				w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = "ART: "+articulo+"   ERROR ESCRIBIENDO  "+archivo_destino

			end choose
			
		elseif FileExists ( origen_antiguo ) then
			resultado = FileCopy (origen_antiguo, ruta_destino, true)	
			// En principio no hay modelos antiguos con EFECTOS INK
//			if maquina_destino = "44" then
//				FileCopy (origen_antiguo, RUTA_EFECTOS_INK04, true)	
//			end if
			choose case resultado
			case  1 //Success
				
			case -1 //Error opening sourcefile
				k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
				w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = "ART: "+articulo+"   ERROR ABRIENDO ORIGEN (OLD): "+origen_antiguo
				
			case -2 // Error writing targetfile
				k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
				w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = "ART: "+articulo+"   ERROR ESCRIBIENDO (OLD):   "+ruta_destino

			end choose
		end if
	else 	// No existe la ruta destino
		k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)		
		if ruta_destino = "SIN PERFIL" then
			disenyador = ''
			modelo_origen = '' 
			referencia_laboratorio = ''
			select tecnico_dis.descripcion, articulos.modelo_origen, referencia_laboratorio
			into :disenyador, :modelo_origen, :referencia_laboratorio
			from articulos
			left outer join modelo on articulos.modelo_origen = modelo.modelo
			left outer join tecnico_dis on modelo.tecnico_dis = tecnico_dis.codigo
			where articulos.codigo = :articulo;
			
			if modelo_origen = '' or isnull(modelo_origen) then
				cadena =  "ART: "+articulo+"   ARCHIVO SIN PERFIL O CANALES MAL ETIQUETADOS.       PROGRAMA ANTIGUO.     MODELO: "+referencia_laboratorio
			else
				cadena =  "ART: "+articulo+"   ARCHIVO SIN PERFIL O CANALES MAL ETIQUETADOS.       "+disenyador+" .     MODELO: "+modelo_origen
			end if
			w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = cadena
		else
			w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = "ART: "+articulo+"   NO EXISTE EL DESTINO: "+ruta_destino
		end if
	end if
	f_mensaje_proceso ("Reg: ", i , ds_archivos.rowcount())
next

//DETECCION DE APLICACIONES QUE DEBERÍAN LLEVAR FICHEROS Y NO LLEVAN
sel = " SELECT planificacion.cod_articulo "+&
" FROM planificacion "+&
" LEFT OUTER JOIN art_ver_operaciones ON planificacion.empresa = art_ver_operaciones.empresa "+&
"	 								AND planificacion.cod_articulo = art_ver_operaciones.articulo "+&
"									AND planificacion.version = art_ver_operaciones.version "+&
"									AND planificacion.ordenoperacion = art_ver_operaciones.orden "+&
" LEFT OUTER JOIN art_ver_op_aplicaciones ON planificacion.empresa = art_ver_op_aplicaciones.empresa "+&
"									AND planificacion.cod_articulo = art_ver_op_aplicaciones.articulo AND planificacion.version = art_ver_op_aplicaciones.version "+&
"									AND art_ver_operaciones.operacion = art_ver_op_aplicaciones.operacion "+&
" LEFT OUTER JOIN prodaplicaciones ON art_ver_op_aplicaciones.empresa = prodaplicaciones.empresa AND art_ver_op_aplicaciones.tipoaplicacion = prodaplicaciones.codigo "+&
" where planificacion.empresa = '"+codigo_empresa+"' "+&
" and planificacion.usuario = '"+nombre_usuario+"' "+&
" and prodaplicaciones.requiere_fichero = '1' AND (archivo_disenyo_tipomaquina_disenyo IS NULL OR archivo_disenyo_codigo IS NULL OR archivo_disenyo_prueba IS NULL )"

f_cargar_cursor_nuevo (sel, ds_archivos)

for i = 1 to ds_archivos.rowcount()
	// No se ha indicado el fichero de producción y es necesario para fabricar!
		k = w_planificacion_tencer_wide.dw_informe_archivos.insertrow(0)
		w_planificacion_tencer_wide.dw_informe_archivos.object.texto[k] = "ARTICULO: "+articulo+"   NO SE HA ASOCIADO EL ARCHIVO A IMPRIMIR"
next

destroy ds_archivos;

update planificacion 
set usuario = "", ordenmarcado = 0
where empresa = :codigo_empresa
and usuario = :nombre_usuario using SQLCA;

if SQLCA.Sqlcode = 0 then
	commit using SQLCA;
else 
	rollback using SQLCA;
end if

DW.Retrieve(codigo_empresa,w_planificacion_tencer_wide.uo_1.em_codigo.text)

if w_planificacion_tencer_wide.dw_informe_archivos.rowcount() > 0 then
	w_planificacion_tencer_wide.dw_informe_archivos.visible = true
	f_imprimir_datawindow(w_planificacion_tencer_wide.dw_informe_archivos)
end if


timer ( 1800, w_planificacion_tencer_wide )
w_planificacion_tencer_wide.st_mensajes_envio.visible = true
w_planificacion_tencer_wide.st_mensajes_envio.text = "Iniciada conversión de archivos."
end event

type m_-4 from menu within m_herramientas
end type

on m_-4.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_-4.destroy
call super::destroy
end on

type m_verimagen from menu within m_herramientas
end type

on m_verimagen.create
call super::create
this.text = "Ver Imagen~tF12"
this.shortcut = 123
this.microhelp = "Ver Imagen"
this.toolbaritemname = "picturebutton!"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;str_parametros lstr_param
OpenWithParm(w_imagen, w_planificacion_tencer_wide.dw_1)
end event

on m_verimagen.destroy
call super::destroy
end on

type m_procesos from menu within menu_planificacion_tencer_wide_lotes
m_9 m_9
m_generar1 m_generar1
m_agruparmuestras m_agruparmuestras
m_agruparintermedios m_agruparintermedios
m_regenerarartculo m_regenerarartculo
m_-5 m_-5
m_calcularstock m_calcularstock
m_enlazarfechas m_enlazarfechas
m_sugerirfentrega m_sugerirfentrega
m_calculartiempos m_calculartiempos
m_-0 m_-0
m_ejecutarrecálculocompleto m_ejecutarrecálculocompleto
m_-6 m_-6
m_renumerar m_renumerar
end type

on m_procesos.create
call super::create
this.text = "Procesos"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
this.m_9=create m_9
this.m_generar1=create m_generar1
this.m_agruparmuestras=create m_agruparmuestras
this.m_agruparintermedios=create m_agruparintermedios
this.m_regenerarartculo=create m_regenerarartculo
this.m_-5=create m_-5
this.m_calcularstock=create m_calcularstock
this.m_enlazarfechas=create m_enlazarfechas
this.m_sugerirfentrega=create m_sugerirfentrega
this.m_calculartiempos=create m_calculartiempos
this.m_-0=create m_-0
this.m_ejecutarrecálculocompleto=create m_ejecutarrecálculocompleto
this.m_-6=create m_-6
this.m_renumerar=create m_renumerar
this.Item[UpperBound(this.Item)+1]=this.m_9
this.Item[UpperBound(this.Item)+1]=this.m_generar1
this.Item[UpperBound(this.Item)+1]=this.m_agruparmuestras
this.Item[UpperBound(this.Item)+1]=this.m_agruparintermedios
this.Item[UpperBound(this.Item)+1]=this.m_regenerarartculo
this.Item[UpperBound(this.Item)+1]=this.m_-5
this.Item[UpperBound(this.Item)+1]=this.m_calcularstock
this.Item[UpperBound(this.Item)+1]=this.m_enlazarfechas
this.Item[UpperBound(this.Item)+1]=this.m_sugerirfentrega
this.Item[UpperBound(this.Item)+1]=this.m_calculartiempos
this.Item[UpperBound(this.Item)+1]=this.m_-0
this.Item[UpperBound(this.Item)+1]=this.m_ejecutarrecálculocompleto
this.Item[UpperBound(this.Item)+1]=this.m_-6
this.Item[UpperBound(this.Item)+1]=this.m_renumerar
end on

on m_procesos.destroy
call super::destroy
destroy(this.m_9)
destroy(this.m_generar1)
destroy(this.m_agruparmuestras)
destroy(this.m_agruparintermedios)
destroy(this.m_regenerarartculo)
destroy(this.m_-5)
destroy(this.m_calcularstock)
destroy(this.m_enlazarfechas)
destroy(this.m_sugerirfentrega)
destroy(this.m_calculartiempos)
destroy(this.m_-0)
destroy(this.m_ejecutarrecálculocompleto)
destroy(this.m_-6)
destroy(this.m_renumerar)
end on

type m_9 from menu within m_procesos
end type

on m_9.create
call super::create
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_9.destroy
call super::destroy
end on

type m_generar1 from menu within m_procesos
end type

on m_generar1.create
call super::create
this.text = "&Generar OT´s"
this.default = true
this.microhelp = "Generar OT~'s"
this.toolbaritemname = "run!"
this.toolbaritemdownname = "Generar OT~'s"
this.toolbaritemorder = 7
this.toolbaritemspace = 1
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;datastore lineas_pedido//, operaciones
date v_f_entrega
boolean bien = True
dec i,j, total_lineaspedido, total_operaciones, ordent, v_cantidad, v_ordenoperacion
long v_pedido, v_linped, v_anyo, maximo_orden, v_factor
string v_operacion, tipooperacion, articulo_linea, v_base, v_formato, v_version = "1", v_lineaprod = "1", v_reajuste = "N"
string v_descripcion_formato, seleccion
datawindow DW
str_escandallo vector_escandallo[300]
integer  k, indice , m
string v_g2, v_uso
decimal factor_Acumulado = 1
long cantidad_pedido
time hora_inicio
long segundos, minutos, total_lineas
integer nivel
string tipo_unidad
dec ancho, largo
int  li_calibre
long ll_lote
//dec metroscaja
//integer piezascaja
//string caja

nivel = 0

hora_inicio = now()
minutos = 0

DW = w_planificacion_tencer_wide.dw_1
w_planificacion_tencer_wide.st_mensajes.visible = true

if MessageBox("Atención", "¿Desea generar nuevas OT´s", Exclamation!, YesNo!, 2) = 2 then
	return
else
	seleccion =	"select venliped.anyo, venliped.pedido, venliped.linea, venliped.articulo, venliped.formato, venliped.cantidad, venliped.tipo_unidad, formatos.ancho, formatos.largo "+ &
					" from venliped INNER JOIN venped ON venped.empresa = venliped.empresa AND venped.anyo = venliped.anyo AND venped.pedido = venliped.pedido "+ &
					" INNER JOIN articulos ON articulos.empresa = venliped.empresa AND articulos.codigo = venliped.articulo "+ &
					" INNER JOIN formatos ON articulos.empresa = formatos.empresa AND articulos.formato = formatos.codigo "+ &
					" where venliped.empresa = "+codigo_empresa+ " and ((venliped.planificado <> 'S') or (venliped.planificado is NULL)) AND venliped.bloqueado <> '1' and ( articulos.bloqueado = 'N' or  articulos.bloqueado is null ) AND venped.es_proforma = 'N' AND "+&
					" articulos.familia <> '2' and articulos.promocion <> 'S'"
	
	//IMPORTANTE : No planificamos ni proformas, ni artículos de la familia 2 (WOW)
	
	f_cargar_cursor_nuevo(seleccion,lineas_pedido)
	total_lineas = lineas_pedido.rowcount()
		
	if lineas_pedido.Rowcount() < 1 then
		messagebox ("Aviso","No hay ningún pedido pendiente de planificar")
	end if
	
	for i = 1 to lineas_pedido.Rowcount() 		

		w_planificacion_tencer_wide.st_mensajes.text = " Generando pedido "+string(i)+" de "+ string (total_lineas)+".  Quedan "+string(minutos)+ " minutos."
		
		articulo_linea = lineas_pedido.object.venliped_articulo[i]
		v_pedido = lineas_pedido.object.venliped_pedido[i]
		v_linped = lineas_pedido.object.venliped_linea[i]
		v_anyo = lineas_pedido.object.venliped_anyo[i]
		tipo_unidad = lineas_pedido.object.venliped_tipo_unidad[i]
		ancho = lineas_pedido.object.formatos_ancho[i]
		largo = lineas_pedido.object.formatos_largo[i]

  		v_cantidad = lineas_pedido.object.venliped_cantidad[i]
		  
		if tipo_unidad = '1' then
			if ancho * largo <> 0 and not isnull (ancho * largo ) then
				v_cantidad = round (  v_cantidad / ((ancho * largo ) / 10000 ) , 0) 
			end if	
		end if

		v_operacion = '';
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Recorremos recursivamente el árbol del artículo y llamamos a la función generar OT´s para cada nodo
		
		cantidad_pedido = v_cantidad 
		indice = 1
		for m = 1 to 300
			setnull(vector_Escandallo[m].articulo)
			setnull(vector_Escandallo[m].version)
			setnull(vector_Escandallo[m].factor)
		next
		if articulo_linea <> '' and not isnull(articulo_linea) then
			v_uso = ""
			SELECT uso 
			INTO :v_uso 
			FROM articulos 
			WHERE empresa = :codigo_empresa 
				AND codigo = :articulo_linea
			USING SQLCA;
			
			if v_uso = '1' then
				f_escandallo_factores_con_sin_base(vector_Escandallo, articulo_linea, indice, factor_Acumulado, nivel, true)		
			else
				f_escandallo_factores_con_sin_base(vector_Escandallo, articulo_linea, indice, factor_Acumulado, nivel, false)		
			end if 
			
			ll_lote    = f_contador_lotes("contador_lotes",1) //El segundo parametro es el valor inicial en caso de que no exista el contador
			li_calibre = 5				
			
			for k=1 to indice
				select g2
				into :v_g2
				from art_codestadistico
				where codigo = :vector_Escandallo[k].articulo
					and empresa = :codigo_empresa
				USING SQLCA;
				// Debe permitir que se programen las bases si hay pedido.
				//if (v_g2 <> "B" and v_g2 <> "Z" and v_g2 <> "N") or isnull(v_g2) or (articulo_linea =  vector_Escandallo[k].articulo) then //Error. El codigo estadistico no es significativo para saber si es base. Controlado en f_escandallo_factores_con_sin_base y usar funcion ftc_articulo_base()
					if vector_Escandallo[k].factor <> 0 and not isnull(vector_Escandallo[k].factor) then
						v_cantidad = cantidad_pedido / vector_Escandallo[k].factor
					else
						v_cantidad = cantidad_pedido
					end if
					f_generar_ots(vector_Escandallo[k].articulo, v_version, v_operacion, v_pedido, v_linped, &
									  v_anyo, v_cantidad, v_f_entrega, v_reajuste, articulo_linea, vector_escandallo[k].factor, vector_Escandallo[k].nivel, ll_lote, li_calibre) 
					
				//end if
			next
		end if
		commit using SQLCA;
		// fin del recorrido del árbol
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		f_mensaje_proceso("Generando OT's :",i,total_lineas)		
		segundos = secondsafter ( hora_inicio, now())
		minutos =  ( (segundos / i) * (total_lineas - i) ) / 60
//		w_planificacion_tencer_wide.st_mensajes.text = w_planificacion_tencer_wide.st_mensajes.text + " Quedan "+string(minutos)+ " minutos."
		
	next
	destroy lineas_pedido
//	destroy operaciones
	
	DW.Retrieve(codigo_empresa,"1")
end if
w_planificacion_tencer_wide.st_mensajes.visible = false



end event

on m_generar1.destroy
call super::destroy
end on

type m_agruparmuestras from menu within m_procesos
end type

on m_agruparmuestras.create
call super::create
this.visible = false
this.text = "Agrupar Muestras Línea Actual"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_agruparmuestras.destroy
call super::destroy
end on

event clicked;f_agrupar_ots(w_planificacion_tencer_wide.uo_1.em_codigo.text)



end event

type m_agruparintermedios from menu within m_procesos
end type

event clicked;f_agrupar_ots_intermedios(w_planificacion_tencer_wide.uo_1.em_codigo.text, &
								  w_planificacion_tencer_wide.dw_1.object.orden[w_planificacion_tencer_wide.dw_1.GetRow()], w_planificacion_tencer_wide.dw_1)

end event

on m_agruparintermedios.create
call super::create
this.text = "Agrupar Semielaborados y Encajados (Línea actual)"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_agruparintermedios.destroy
call super::destroy
end on

type m_regenerarartculo from menu within m_procesos
end type

event clicked;String v_base, articulo, versionart, v_formato, v_tipo_operacion
long v_operacion
u_em_campo_2 EE
DataWindow DW

EE = w_planificacion_tencer_wide.uo_1
DW = w_planificacion_tencer_wide.dw_1

articulo = DW.object.cod_articulo[DW.GetRow()]
versionart = DW.object.planificacion_version[DW.GetRow()]
v_operacion = DW.object.planificacion_ordenoperacion[DW.GetRow()]

select formato, tipo_operacion
into :v_formato, :v_tipo_operacion
from art_ver_operaciones
where empresa = :codigo_empresa
and articulo = :articulo
and version = :versionart
and orden = :v_operacion;

select base 
into :v_base
from art_versiones
where empresa = :codigo_empresa
and articulo  = :articulo
and version = :versionart;

connect using SQLCA;

update planificacion
set formato = :v_formato, tipo_operacion = :v_tipo_operacion
where empresa = :codigo_empresa
and cod_articulo  = :articulo
and version = :versionart
and ordenoperacion = :v_operacion;

update planificacion
set base = :v_base
where empresa = :codigo_empresa
and cod_articulo  = :articulo
and version = :versionart;

if SQLCA.SQLCode = 0 then
	messagebox ("AVISO", "Se ha regenerado el artículo con éxito")
	commit using SQLCA;
	DW.Retrieve(codigo_empresa,EE.em_codigo.text)
else 
	rollback using SQLCA;
	messagebox ("AVISO", "No se pudo regenerar el artículo")
end if
end event

on m_regenerarartculo.create
call super::create
this.text = "Regenerar Artículo"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_regenerarartculo.destroy
call super::destroy
end on

type m_-5 from menu within m_procesos
end type

on m_-5.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_-5.destroy
call super::destroy
end on

type m_calcularstock from menu within m_procesos
end type

on m_calcularstock.create
call super::create
this.text = "Calcular Stock"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;datastore lineas_planificacion
dec v_stockacabado, v_stockbase, total_filas, v_ot, aux_stockbase, aux_stockacabado, stock_cajas
dec{2} factor_base, factor_actual
datetime fecha
int i, v_ordenoperacion
string articulo, base, sel, base_anterior, v_version, v_hay_obs_ubicacion, articulo_anterior, art_encajado 
long v_observaciones
datawindow DW
u_em_campo_2 EE

EE = w_planificacion_tencer_wide.uo_1
DW = w_planificacion_tencer_wide.dw_1

fecha = DateTime(today(),Now())

setnull(fecha)

//--------------------------------------------------------------------------------------------------------------------------------------------
//				STOCK ACABADO										
//--------------------------------------------------------------------------------------------------------------------------------------------

sel = " select ot, cod_articulo, base,  stockacabado, stockbase "+&
		" from planificacion "+&
		" where empresa = '"+codigo_empresa+"'"+&
		" and ( ajuste = 'N' or ajuste is null )"+&
		" order by cod_articulo"
		
f_cargar_cursor_nuevo(sel, lineas_planificacion)
total_filas = lineas_planificacion.RowCount()

if total_filas > 0 then
	articulo_anterior = ""

	for i = 1 to total_filas
		IF lineas_planificacion.object.base[i] <> ""  AND  not isnull(lineas_planificacion.object.base[i] ) THEN
			articulo = lineas_planificacion.object.cod_articulo[i]

			if articulo <> articulo_anterior then
				v_stockacabado = f_stock_articulo_sin_a(codigo_empresa, articulo, fecha)
				update planificacion 
				set stockacabado = :v_stockacabado
				where cod_Articulo = :articulo
				and empresa = :codigo_empresa
				using SQLCA;

				if SQLCA.SQLCode = 0 then 
					commit using SQLCA;
				else	
					rollback using SQLCA; 
				end if
			end if
		end if
		articulo_anterior = articulo
		f_mensaje_proceso("Stocks Acabado:",i,total_filas)
	next
end if
destroy lineas_planificacion

//--------------------------------------------------------------------------------------------------------------------------------------------
//					CALCULO DEL STOCK DE BASE
//--------------------------------------------------------------------------------------------------------------------------------------------
sel = " select planificacion.ot, planificacion.cod_articulo, planificacion.base, planificacion.cantidad, "+&
		" planificacion.ordenoperacion, planificacion.version, planificacion.ajuste, art_escandallo.factor, planificacion.factor, "+&
		" planificacion.stockacabado, planificacion.stockbase, art_ver_operaciones.factor "+&
		" from planificacion, art_escandallo, art_ver_operaciones "+&
		" where planificacion.empresa = '"+codigo_empresa+"'"+&
		" and art_escandallo.empresa = '"+codigo_empresa+"'"+&
		" and art_ver_operaciones.empresa = '"+codigo_empresa+"'"+&
		" and planificacion.cod_articulo = art_ver_operaciones.articulo "+&
		" and planificacion.version = art_ver_operaciones.version "+&
		" and planificacion.ordenoperacion = art_ver_operaciones.orden "+&
		" and ( planificacion.ajuste = 'N' or ajuste is null )"+&
		" and planificacion.cod_articulo = art_escandallo.articulo "+&
		" and planificacion.version = art_escandallo.version "+&
		" and planificacion.base = art_escandallo.articulo_ant "+&
		" order by planificacion.base, planificacion.fecha_fin, planificacion.orden "
		
f_cargar_cursor_nuevo(sel, lineas_planificacion)
total_filas = lineas_planificacion.RowCount()

if total_filas > 0 then
	base_anterior = ""
	for i = 1 to total_filas
		base = lineas_planificacion.object.planificacion_base[i]
		v_ot = lineas_planificacion.object.planificacion_ot[i]
		articulo = lineas_planificacion.object.planificacion_cod_articulo[i]
		aux_stockbase = lineas_planificacion.object.planificacion_stockbase[i]
		if isnull(aux_stockbase) then aux_stockbase = 0
		
		if not (lineas_planificacion.object.planificacion_base[i] = "" or &
					isnull(lineas_planificacion.object.planificacion_base[i])) then

			if lineas_planificacion.object.planificacion_ordenoperacion [i] = 1 then
				if lineas_planificacion.object.art_escandallo_factor[i] = 0 &
					or isnull(lineas_planificacion.object.art_escandallo_factor[i]) then
					factor_base = 1
				else
					factor_base = lineas_planificacion.object.art_escandallo_factor[i] 
				end if
				if lineas_planificacion.object.planificacion_factor[i] = 0 &
					or isnull(lineas_planificacion.object.art_ver_operaciones_factor[i]) then
					factor_actual = 1
				else
					factor_actual = lineas_planificacion.object.art_ver_operaciones_factor[i] 
				end if
				
				if base_anterior <> base then
					v_stockbase = f_stock_articulo_sin_a(codigo_empresa, base, fecha) - &
																	(	lineas_planificacion.object.planificacion_cantidad[i] * factor_actual / factor_base )
					base_anterior = base
				else
					v_stockbase = v_stockbase - ( lineas_planificacion.object.planificacion_cantidad[i] * factor_actual / factor_base )
										
				end if
				if f_hay_obs_ubicacion(base) then
					v_hay_obs_ubicacion = 'S'
				else 
					setnull(v_hay_obs_ubicacion)
				end if
				
				if aux_stockbase <> v_stockbase then
					connect using SQLCA;
					update planificacion 
					set  stockbase = :v_stockbase, hay_obs_ubicaciones = :v_hay_obs_ubicacion
					where ot = :v_ot
					and empresa = :codigo_empresa;
					if SQLCA.SQLCode <> 0 then
						rollback using SQLCA;
					else
						commit using SQLCA;
					end if
				end if
			end if
		end if		
		f_mensaje_proceso("Stock de Bases:",i,total_filas)
	next
end if
destroy lineas_planificacion

DW.retrieve(codigo_empresa,EE.em_codigo.text)






end event

on m_calcularstock.destroy
call super::destroy
end on

type m_enlazarfechas from menu within m_procesos
end type

event clicked;/*
datastore pedidos, base
string sel_pedidos, sel_base, v_articulo, v_base, v_tipo_operacion , v_operacion_base
long i, v_anyo, v_pedido, v_linped, v_orden, v_stockbase, v_cantidad, v_orden_base, v_ot
datetime v_fecha_anterior
boolean bien
*/

datawindow DW
u_em_campo_2 EE
string sel_articulos_planificados, v_articulo, v_articulo_ant
datastore ds_articulos_planificados
long i, v_anyo, v_pedido, v_linped, v_ot
datetime v_fecha_anterior
boolean bien = true

EE = w_planificacion_tencer_wide.uo_1
DW = w_planificacion_tencer_wide.dw_1

sel_articulos_planificados = 	" Select cod_articulo, anyo, pedido, linped, ot, base "+&
										" from planificacion "+&
										" where empresa = '"+codigo_empresa+"' "//+&
									//	" and lineaprod <> '7'"
										
f_cargar_cursor_nuevo(sel_articulos_planificados, ds_articulos_planificados)					

for i = 1 to ds_articulos_planificados.rowcount()
	v_articulo = ds_articulos_planificados.object.cod_articulo[i]
	v_anyo = ds_articulos_planificados.object.anyo[i]
	v_pedido = ds_articulos_planificados.object.pedido[i]
	v_linped = ds_articulos_planificados.object.linped[i]	
	v_ot = ds_articulos_planificados.object.ot[i]	
	v_articulo_ant = ds_articulos_planificados.object.base[i]	

	setnull(v_fecha_anterior)

	select planificacion.fecha_fin
	into :v_fecha_anterior
	from planificacion
	where planificacion.empresa = :codigo_empresa
	and planificacion.cod_articulo = :v_articulo_ant
	and planificacion.anyo = :v_anyo
	and planificacion.pedido = :v_pedido
	and planificacion.linped = :v_linped;
	
	connect using SQLCA;
	update planificacion set fecha_anterior = :v_fecha_anterior 
	where empresa = :codigo_empresa 
	and ot = :v_ot;
	
	if SQLCA.SQLCode <> 0 then 
		bien = false
	end if
	f_mensaje_proceso("Enlazando Fechas: ",i,ds_articulos_planificados.RowCount())

next

DW.retrieve(codigo_empresa,EE.em_codigo.text)

if not bien then 
	rollback using SQLCA;
else 
	commit using SQLCA; 
end if
destroy ds_articulos_planificados




end event

on m_enlazarfechas.create
call super::create
this.text = "Enlazar Fechas"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_enlazarfechas.destroy
call super::destroy
end on

type m_sugerirfentrega from menu within m_procesos
end type

event clicked;datastore registros
datetime v_fecha_sugerida, v_fecha_primera_pasada 
boolean bien 
long i, total_reg, dias, dias_festivos
string sel, calendario = '5'
integer v_anyo, v_pedido, v_linped, v_anyo_ant, v_pedido_ant, v_linped_ant
string v_articulo, v_version, v_articulo_ant, v_version_ant, v_seccion
datawindow DW
u_em_campo_2 EE

EE = w_planificacion_tencer_wide.uo_1
DW = w_planificacion_tencer_wide.dw_1

sel = " select planificacion.anyo, planificacion.pedido, planificacion.linped, planificacion.cod_articulo, planificacion.version, planificacion.fecha_fin, "+&
		" art_ver_tipooperacion.codigo, art_ver_tipooperacion.dias, planificacion.ordenoperacion, prodlineas.seccion "+&
		" from planificacion, art_ver_tipooperacion, prodlineas "+&
		" where planificacion.empresa = '"+codigo_empresa+"'"+&
		" and prodlineas.empresa = '"+codigo_empresa+"'"+&
		" and planificacion.lineaprod =  prodlineas.codigo "+&
		" and art_ver_tipooperacion.empresa = '"+codigo_empresa+"'"+&
		" and planificacion.tipo_operacion =  art_ver_tipooperacion.codigo "+&
		" and planificacion.pedido <> 0 "+&
		" order by planificacion.anyo, planificacion.pedido,  "+&
		" convert(integer,planificacion.cod_articulo), convert(integer,planificacion.version),planificacion.ordenoperacion;"
		
f_cargar_cursor_nuevo ( sel, registros)

total_reg = registros.Rowcount()

if total_reg > 0 then
	v_anyo_ant = registros.object.planificacion_anyo[1]
	v_pedido_ant = registros.object.planificacion_pedido[1]
	v_linped_ant = registros.object.planificacion_linped[1]
	v_articulo_ant = registros.object.planificacion_cod_Articulo[1]
	v_version_ant = registros.object.planificacion_version[1]
	v_fecha_primera_pasada = registros.object.planificacion_fecha_fin[1]
	v_seccion = registros.object.prodlineas_seccion[1]
end if
	
dias = 0
bien = true
i = 1
do while (i <=  total_reg)
	v_anyo = registros.object.planificacion_anyo[i]
	v_pedido = registros.object.planificacion_pedido[i]
	v_linped = registros.object.planificacion_linped[i]
	v_articulo = registros.object.planificacion_cod_articulo[i]
	v_version = registros.object.planificacion_version[i]
	v_seccion = registros.object.prodlineas_seccion[i]
	
	if (v_anyo = v_anyo_ant) and (v_pedido = v_pedido_ant) and (v_linped = v_linped_ant) then
		if registros.object.prodlineas_seccion[i] = '7' then  // Si la operación esta en SUBCONTRATACIÓN, añadimos 7 días
			dias = dias + 7
		else
			dias = dias + registros.object.art_ver_tipooperacion_dias[i]
		end if
		i = i + 1   
	else 	
		v_fecha_sugerida = f_sumar_dias_fecha (v_fecha_primera_pasada , dias, calendario)
		
		connect using SQLCA;
		update planificacion 
		set fecha_sugerida = :v_fecha_sugerida
		where empresa = :codigo_empresa
		and pedido = :v_pedido_ant
		and anyo = :v_anyo_ant
		and linped = :v_linped_ant;
	
		if SQLCA.SQLCode = 0 then
			commit using SQLCA;
		else
			rollback using SQLCA;
			messagebox("ERROR",'No se han podido generar las fechas sugeridas')
		end if
		dias = 0
		v_anyo_ant =	 v_anyo
		v_pedido_ant = v_pedido
		v_linped_ant = v_linped
		v_articulo_ant = v_articulo
		v_version_ant =  v_version
		v_fecha_primera_pasada = registros.object.planificacion_fecha_fin[i]
	end if		
	f_mensaje_proceso ("Calculando Fechas: ", i, total_reg )
loop 
f_mensaje_proceso ("Calculando Fechas: ", 1, 1)

v_fecha_sugerida = f_sumar_dias_fecha (v_fecha_primera_pasada , dias, calendario)

connect using SQLCA;
update planificacion 
set fecha_sugerida = :v_fecha_sugerida
where empresa = :codigo_empresa
and pedido = :v_pedido
and anyo = :v_anyo
and linped = :v_linped;

if SQLCA.SQLCode = 0 then
	commit using SQLCA;
else
	rollback using SQLCA;
	messagebox("ERROR",'No se han podido generar las fechas sugeridas')
end if

destroy registros
DW.retrieve(codigo_empresa,EE.em_codigo.text)

end event

on m_sugerirfentrega.create
call super::create
this.text = "Sugerir F. Entrega"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_sugerirfentrega.destroy
call super::destroy
end on

type m_calculartiempos from menu within m_procesos
event clicked ( )
end type

event clicked;datastore lineas
string sel
dec i, total_lineas, v_velocidad, v_ot
string v_calendario, v_calendario_seccion, v_calendario_linea, v_linea, v_seccion
datawindow DW
u_em_campo_2 EE

EE = w_planificacion_tencer_wide.uo_1
DW = w_planificacion_tencer_wide.dw_1

f_cargar_tiempos()

// Calculamos los tiempos de todas las lineas
sel = "Select codigo "+&
		"from prodlineas  "+&
		"where empresa = '"+codigo_empresa+"'; "

f_cargar_cursor_nuevo(sel,lineas)
total_lineas = lineas.Rowcount()

//update planificacion
//set fecha_fin = null
//where empresa = :codigo_empresa;
		
for i = 1 to total_lineas
	v_linea = lineas.object.codigo[i]
	
	select prodsecciones.calendario, prodlineas.calendario, prodsecciones.codigo
	into :v_calendario_seccion, :v_calendario_linea, :v_seccion
	from prodsecciones, prodlineas
	where prodsecciones.empresa = :codigo_empresa
	and prodlineas.empresa = :codigo_empresa
	and prodlineas.seccion = prodsecciones.codigo
	and prodlineas.codigo = :v_linea;

	// Si existe calendario para
	if v_calendario_linea = "" or isnull(v_calendario_linea) then v_calendario_linea =  ""
	if v_calendario_seccion = "" or isnull(v_calendario_seccion) then v_calendario_seccion =  ""
	if v_calendario_linea <> "" then v_calendario = v_calendario_linea else 	v_calendario = v_calendario_seccion
	
	f_calcularfechas(v_linea, v_calendario, v_seccion)
next

DW.retrieve(codigo_empresa,EE.em_codigo.text)

destroy lineas
end event

on m_calculartiempos.create
call super::create
this.text = "Calcular Tiempos"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_calculartiempos.destroy
call super::destroy
end on

type m_-0 from menu within m_procesos
end type

on m_-0.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_-0.destroy
call super::destroy
end on

type m_ejecutarrecálculocompleto from menu within m_procesos
end type

event clicked;w_planificacion_tencer_wide.st_mensajes.visible = true

w_planificacion_tencer_wide.st_mensajes.text = "Calculando Stocks . . . . . ."
m_calcularstock.triggerevent(clicked!)

w_planificacion_tencer_wide.st_mensajes.text = "Calculando Tiempos . . . . . ."
m_calculartiempos.triggerevent(clicked!)

w_planificacion_tencer_wide.st_mensajes.text = "Enlazando Fechas  . . . . . ."
m_enlazarfechas.triggerevent(clicked!)

w_planificacion_tencer_wide.st_mensajes.text = "Calculando Fechas Sugeridas . . . . . ."
m_sugerirfentrega.triggerevent(clicked!)

w_planificacion_tencer_wide.st_mensajes.visible = False

end event

on m_ejecutarrecálculocompleto.create
call super::create
this.text = "Ejecutar Recálculo Completo"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_ejecutarrecálculocompleto.destroy
call super::destroy
end on

type m_-6 from menu within m_procesos
end type

on m_-6.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_-6.destroy
call super::destroy
end on

type m_renumerar from menu within m_procesos
end type

event clicked;datawindow DW 
long k

connect using SQLCA;
DW = w_planificacion_tencer_wide.dw_1
if DW.RowCount() > 0 then
	for k = 1 to DW.RowCount()
		DW.object.orden[K] = K
	next
end if

DW.update()
commit using SQLCA;
end event

on m_renumerar.create
call super::create
this.text = "Renumerar"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_renumerar.destroy
call super::destroy
end on

type m_seleccionar from menu within menu_planificacion_tencer_wide_lotes
m_pasadaanterior m_pasadaanterior
m_verselecin m_verselecin
m_-3 m_-3
m_hornosyhornosencajado m_hornosyhornosencajado
m_bicoccion m_bicoccion
m_monococcin m_monococcin
m_encastres m_encastres
m_encr m_encr
m_aaee m_aaee
m_enc m_enc
m_enf m_enf
m_pvho m_pvho
m_encf m_encf
m_-8 m_-8
m_marcarfechainamovible m_marcarfechainamovible
m_desmarcarfechainamovible m_desmarcarfechainamovible
m_eliminarfecha m_eliminarfecha
end type

on m_seleccionar.create
call super::create
this.text = "Seleccionar"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
this.m_pasadaanterior=create m_pasadaanterior
this.m_verselecin=create m_verselecin
this.m_-3=create m_-3
this.m_hornosyhornosencajado=create m_hornosyhornosencajado
this.m_bicoccion=create m_bicoccion
this.m_monococcin=create m_monococcin
this.m_encastres=create m_encastres
this.m_encr=create m_encr
this.m_aaee=create m_aaee
this.m_enc=create m_enc
this.m_enf=create m_enf
this.m_pvho=create m_pvho
this.m_encf=create m_encf
this.m_-8=create m_-8
this.m_marcarfechainamovible=create m_marcarfechainamovible
this.m_desmarcarfechainamovible=create m_desmarcarfechainamovible
this.m_eliminarfecha=create m_eliminarfecha
this.Item[UpperBound(this.Item)+1]=this.m_pasadaanterior
this.Item[UpperBound(this.Item)+1]=this.m_verselecin
this.Item[UpperBound(this.Item)+1]=this.m_-3
this.Item[UpperBound(this.Item)+1]=this.m_hornosyhornosencajado
this.Item[UpperBound(this.Item)+1]=this.m_bicoccion
this.Item[UpperBound(this.Item)+1]=this.m_monococcin
this.Item[UpperBound(this.Item)+1]=this.m_encastres
this.Item[UpperBound(this.Item)+1]=this.m_encr
this.Item[UpperBound(this.Item)+1]=this.m_aaee
this.Item[UpperBound(this.Item)+1]=this.m_enc
this.Item[UpperBound(this.Item)+1]=this.m_enf
this.Item[UpperBound(this.Item)+1]=this.m_pvho
this.Item[UpperBound(this.Item)+1]=this.m_encf
this.Item[UpperBound(this.Item)+1]=this.m_-8
this.Item[UpperBound(this.Item)+1]=this.m_marcarfechainamovible
this.Item[UpperBound(this.Item)+1]=this.m_desmarcarfechainamovible
this.Item[UpperBound(this.Item)+1]=this.m_eliminarfecha
end on

on m_seleccionar.destroy
call super::destroy
destroy(this.m_pasadaanterior)
destroy(this.m_verselecin)
destroy(this.m_-3)
destroy(this.m_hornosyhornosencajado)
destroy(this.m_bicoccion)
destroy(this.m_monococcin)
destroy(this.m_encastres)
destroy(this.m_encr)
destroy(this.m_aaee)
destroy(this.m_enc)
destroy(this.m_enf)
destroy(this.m_pvho)
destroy(this.m_encf)
destroy(this.m_-8)
destroy(this.m_marcarfechainamovible)
destroy(this.m_desmarcarfechainamovible)
destroy(this.m_eliminarfecha)
end on

type m_pasadaanterior from menu within m_seleccionar
end type

on m_pasadaanterior.create
call super::create
this.text = "Todas las Pasada"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;//Open (w_ver_pasadas, w_planificacion)

OpenWithParm(w_ver_pasadas_Tencer, w_planificacion_tencer_wide.dw_1)
end event

on m_pasadaanterior.destroy
call super::destroy
end on

type m_verselecin from menu within m_seleccionar
end type

on m_verselecin.create
call super::create
this.text = "Ver Selección"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;//Open (w_ver_seleccion, w_planificacion)

OpenWithParm(w_ver_seleccion_tencer, w_planificacion_tencer_wide.dw_1)
end event

on m_verselecin.destroy
call super::destroy
end on

type m_-3 from menu within m_seleccionar
end type

on m_-3.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_-3.destroy
call super::destroy
end on

type m_hornosyhornosencajado from menu within m_seleccionar
end type

on m_hornosyhornosencajado.create
call super::create
this.text = "Hornos"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;
seleccionar_por_operacion(3, w_planificacion_tencer_wide.dw_1)
seleccionar_por_operacion(8, w_planificacion_tencer_wide.dw_1)

end event

on m_hornosyhornosencajado.destroy
call super::destroy
end on

type m_bicoccion from menu within m_seleccionar
end type

event clicked;seleccionar_por_operacion(7, w_planificacion_tencer_wide.dw_1)

end event

on m_bicoccion.create
call super::create
this.text = "Bicoccion"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_bicoccion.destroy
call super::destroy
end on

type m_monococcin from menu within m_seleccionar
end type

event clicked;seleccionar_por_operacion(1, w_planificacion_tencer_wide.dw_1)

end event

on m_monococcin.create
call super::create
this.text = "Monococción"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_monococcin.destroy
call super::destroy
end on

type m_encastres from menu within m_seleccionar
end type

event clicked;seleccionar_por_operacion(19, w_planificacion_tencer_wide.dw_1)

end event

on m_encastres.create
call super::create
this.text = "EENC"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_encastres.destroy
call super::destroy
end on

type m_encr from menu within m_seleccionar
end type

event clicked;seleccionar_por_operacion(26, w_planificacion_tencer_wide.dw_1)

end event

on m_encr.create
call super::create
this.text = "ENCR"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_encr.destroy
call super::destroy
end on

type m_aaee from menu within m_seleccionar
end type

event clicked;seleccionar_por_operacion(5, w_planificacion_tencer_wide.dw_1)
seleccionar_por_operacion(10, w_planificacion_tencer_wide.dw_1)

end event

on m_aaee.create
call super::create
this.text = "AAEE"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_aaee.destroy
call super::destroy
end on

type m_enc from menu within m_seleccionar
end type

event clicked;seleccionar_por_operacion(9, w_planificacion_tencer_wide.dw_1)
end event

on m_enc.create
call super::create
this.text = "ENC"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_enc.destroy
call super::destroy
end on

type m_enf from menu within m_seleccionar
end type

event clicked;seleccionar_por_operacion(27, w_planificacion_tencer_wide.dw_1)
end event

on m_enf.create
call super::create
this.text = "ENF"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_enf.destroy
call super::destroy
end on

type m_pvho from menu within m_seleccionar
end type

event clicked;seleccionar_por_operacion(12, w_planificacion_tencer_wide.dw_1)
end event

on m_pvho.create
call super::create
this.text = "PVID"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_pvho.destroy
call super::destroy
end on

type m_encf from menu within m_seleccionar
end type

event clicked;seleccionar_por_operacion(30, w_planificacion_tencer_wide.dw_1)
end event

on m_encf.create
call super::create
this.text = "CMYK"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_encf.destroy
call super::destroy
end on

type m_-8 from menu within m_seleccionar
end type

on m_-8.create
call super::create
this.text = "-"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_-8.destroy
call super::destroy
end on

type m_marcarfechainamovible from menu within m_seleccionar
end type

event clicked;int pedido, linped, anyo, i

u_em_campo_2 EE
DataWindow DW

EE = w_planificacion_tencer_wide.uo_1
DW = w_planificacion_tencer_wide.dw_1

pedido = DW.object.pedido[DW.GetRow()]
linped = DW.object.linped[DW.GetRow()]
anyo = DW.object.planificacion_anyo[DW.GetRow()]


connect using SQLCA;

update planificacion
set fecha_exacta = 'S'
where empresa = :codigo_empresa
and pedido  = :pedido
and linped = :linped
and anyo = :anyo;

if SQLCA.SQLCode = 0 then
	commit using SQLCA;
else 
	rollback using SQLCA;
end if

for i = 1 to DW.rowcount()	
	if pedido = DW.object.pedido[i] and linped = DW.object.linped[i] and anyo = DW.object.planificacion_anyo[i] then
		DW.object.planificacion_fecha_exacta[i] = 'S'
	end if
next


end event

on m_marcarfechainamovible.create
call super::create
this.text = "Marcar Fecha Inamovible"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_marcarfechainamovible.destroy
call super::destroy
end on

type m_desmarcarfechainamovible from menu within m_seleccionar
end type

event clicked;int pedido, linped, anyo, i

u_em_campo_2 EE
DataWindow DW

EE = w_planificacion_tencer_wide.uo_1
DW = w_planificacion_tencer_wide.dw_1

pedido = DW.object.pedido[DW.GetRow()]
linped = DW.object.linped[DW.GetRow()]
anyo = DW.object.planificacion_anyo[DW.GetRow()]


connect using SQLCA;

update planificacion
set fecha_exacta = 'N'
where empresa = :codigo_empresa
and pedido  = :pedido
and linped = :linped
and anyo = :anyo;

if SQLCA.SQLCode = 0 then
	commit using SQLCA;
else 
	rollback using SQLCA;
end if

for i = 1 to DW.rowcount()	
	if pedido = DW.object.pedido[i] and linped = DW.object.linped[i] and anyo = DW.object.planificacion_anyo[i] then
		DW.object.planificacion_fecha_exacta[i] = 'N'
	end if
next

end event

on m_desmarcarfechainamovible.create
call super::create
this.text = "Desmarcar Fecha Inamovible"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_desmarcarfechainamovible.destroy
call super::destroy
end on

type m_eliminarfecha from menu within m_seleccionar
end type

event clicked;int pedido, linped, anyo, i

u_em_campo_2 EE
DataWindow DW

EE = w_planificacion_tencer_wide.uo_1
DW = w_planificacion_tencer_wide.dw_1

pedido = DW.object.pedido[DW.GetRow()]
linped = DW.object.linped[DW.GetRow()]
anyo = DW.object.planificacion_anyo[DW.GetRow()]


connect using SQLCA;

update planificacion
set fecha_exacta = 'N', f_fin_estimada = null
where empresa = :codigo_empresa
and pedido  = :pedido
and linped = :linped
and anyo = :anyo;

if SQLCA.SQLCode = 0 then
	commit using SQLCA;
else 
	rollback using SQLCA;
end if


date ld_date
SetNull(ld_date)


for i = 1 to DW.rowcount()	
	if pedido = DW.object.pedido[i] and linped = DW.object.linped[i] and anyo = DW.object.planificacion_anyo[i] then
		DW.object.planificacion_fecha_exacta[i] = 'N'
		DW.object.planificacion_f_fin_estimada[i]  = ld_date
	end if
next

end event

on m_eliminarfecha.create
call super::create
this.text = "Eliminar Fecha"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_eliminarfecha.destroy
call super::destroy
end on

type m_buscar from menu within menu_planificacion_tencer_wide_lotes
m_descripcin m_descripcin
end type

on m_buscar.create
call super::create
this.text = "Buscar"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
this.m_descripcin=create m_descripcin
this.Item[UpperBound(this.Item)+1]=this.m_descripcin
end on

on m_buscar.destroy
call super::destroy
destroy(this.m_descripcin)
end on

type m_descripcin from menu within m_buscar
end type

on m_descripcin.create
call super::create
this.text = "Buscar"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

event clicked;//Open (w_buscar, w_planificacion)

OpenWithParm(w_buscar_tencer_wide, w_planificacion_tencer_wide.dw_1)
end event

on m_descripcin.destroy
call super::destroy
end on

type m_listados from menu within menu_planificacion_tencer_wide_lotes
m_cargadelaslneas m_cargadelaslneas
m_necesidadesdecajas m_necesidadesdecajas
m_7 m_7
m_necesidadesdegranillas m_necesidadesdegranillas
m_11 m_11
end type

on m_listados.create
call super::create
this.text = "Listados"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
this.m_cargadelaslneas=create m_cargadelaslneas
this.m_necesidadesdecajas=create m_necesidadesdecajas
this.m_7=create m_7
this.m_necesidadesdegranillas=create m_necesidadesdegranillas
this.m_11=create m_11
this.Item[UpperBound(this.Item)+1]=this.m_cargadelaslneas
this.Item[UpperBound(this.Item)+1]=this.m_necesidadesdecajas
this.Item[UpperBound(this.Item)+1]=this.m_7
this.Item[UpperBound(this.Item)+1]=this.m_necesidadesdegranillas
this.Item[UpperBound(this.Item)+1]=this.m_11
end on

on m_listados.destroy
call super::destroy
destroy(this.m_cargadelaslneas)
destroy(this.m_necesidadesdecajas)
destroy(this.m_7)
destroy(this.m_necesidadesdegranillas)
destroy(this.m_11)
end on

type m_cargadelaslneas from menu within m_listados
end type

event clicked;datawindow report

report = w_planificacion_tencer_wide.dw_totales


report.SetTransObject(SQLCA)
report.setredraw(False)

report.retrieve()
report.sort()
report.groupcalc()


f_imprimir_datawindow(report)

report.setredraw(true)
end event

on m_cargadelaslneas.create
call super::create
this.text = "Carga de las líneas"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_cargadelaslneas.destroy
call super::destroy
end on

type m_necesidadesdecajas from menu within m_listados
end type

event clicked;datawindow report

report = w_planificacion_tencer_wide.dw_necesidades_cajas


report.SetTransObject(SQLCA)
report.setredraw(False)

report.retrieve(codigo_empresa)
report.sort()
report.groupcalc()


f_imprimir_datawindow(report)

report.setredraw(true)
end event

on m_necesidadesdecajas.create
call super::create
this.text = "Necesidades de Cajas"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_necesidadesdecajas.destroy
call super::destroy
end on

type m_7 from menu within m_listados
end type

event clicked;datawindow report

report = w_planificacion_tencer_wide.dw_necesidad_esmalte_ink


report.SetTransObject(SQLCA)
report.setredraw(False)

report.retrieve(codigo_empresa)
report.sort()
report.groupcalc()


f_imprimir_datawindow(report)

report.setredraw(true)
end event

on m_7.create
call super::create
this.text = "Necesidad de Esmaltes"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_7.destroy
call super::destroy
end on

type m_necesidadesdegranillas from menu within m_listados
end type

event clicked;datawindow report

report = w_planificacion_tencer_wide.dw_necesidades_granillas


report.SetTransObject(SQLCA)
report.setredraw(False)

report.retrieve(codigo_empresa)
report.sort()
report.groupcalc()


f_imprimir_datawindow(report)

report.setredraw(true)
end event

on m_necesidadesdegranillas.create
call super::create
this.text = "Necesidades de Granillas"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_necesidadesdegranillas.destroy
call super::destroy
end on

type m_11 from menu within m_listados
end type

on m_11.create
call super::create
this.text = "Necesidades Tierras"
this.menutextcolor = 134217735
this.menubackcolor = 134217732
this.menuhighlightcolor = 134217741
this.textsize = 8
this.weight = 400
this.facename = "Tahoma"
this.titlebackcolor = 134217730
this.bitmapbackcolor = 12632256
this.menubitmaps = true
this.titlegradient = true
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 67108864
this.toolbarhighlightcolor = 134217741
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_11.destroy
call super::destroy
end on

event clicked;datawindow report

report = w_planificacion_tencer_wide.dw_necesidades_tierras


report.SetTransObject(SQLCA)
report.setredraw(False)

report.retrieve(codigo_empresa)
report.sort()
report.groupcalc()


f_imprimir_datawindow(report)

report.setredraw(true)
end event

