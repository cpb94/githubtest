$PBExportHeader$f_depparam_nummov.srf
global type f_depparam_nummov from function_object
end type

forward prototypes
global function decimal f_depparam_nummov (string arg_empresa, decimal arg_anyo)
end prototypes

global function decimal f_depparam_nummov (string arg_empresa, decimal arg_anyo);Dec{0}  alm_anyo,alm_nummov,alm2_nummov 
String   alm_empresa,alm_almacen

// Variables gestion incidencias
   string  in_programa,in_incidencia

 in_programa="f_depparam_numorden"

 SELECT  depparam.nummov  
    INTO :alm_nummov  
    FROM depparam  
   WHERE depparam.empresa = :arg_empresa
   AND   depparam.anyo    = :arg_anyo ;

   IF SQLCA.SQLCode = 100 THEN alm_nummov=0
 
   IF IsNull(alm_nummov) Then alm_nummov = 0
   alm_nummov=alm_nummov + 1
   SELECT count(*) INTO :alm2_nummov  FROM depmovhis
   WHERE depmovhis.empresa = :arg_empresa 
	AND   depmovhis.anyo    = :arg_anyo
	AND   depmovhis.nummov  = :alm_nummov    ;
IF IsNull(alm2_nummov) Then alm2_nummov =0
IF alm2_nummov <>0 THEN
    in_incidencia = "He tenido que buscar, ultimo movimiento!!Proceso Lento!!"
    f_grabar_incidencia(in_programa,in_incidencia)

    SELECT max(depmovhis.nummov)  
    INTO   :alm_nummov
    FROM   depmovhis  
    WHERE  depmovhis.empresa = :arg_empresa 
	 AND    depmovhis.anyo    = :arg_anyo ;   

    f_actualiza_depnummov(arg_empresa,arg_anyo,alm_nummov)
    alm_nummov=alm_nummov + 1
END IF
Return alm_nummov
end function

