$PBExportHeader$f_vencimientos_factura.srf
global type f_vencimientos_factura from function_object
end type

forward prototypes
global function str_vencimientos f_vencimientos_factura (string empresa, decimal anyo, decimal factura)
end prototypes

global function str_vencimientos f_vencimientos_factura (string empresa, decimal anyo, decimal factura);String var_codpago,var_divisa,var_precartera,cliente,var_cartera
Dec    var_total_fac,reg,i,dias,acumulado,var_importe,var_efectos,var_primero, var_cad,g,importe_precartera,var_total_fac_pts,importe_precartera_pts,acumulado_pts,var_importe_pts
String var_tipodoc,var_cliente,moneda_empresa
Date   var_ffactura,var_ffactura1,var_vencimiento
DateTime  var_fecha, fecha_lb
Dec       var_cadencia[9]
Integer   a_dias[20],rel[9]
integer  total,hay_cadencia

str_vencimientos   vto
var_cliente = f_cliente_venfac(empresa,anyo,factura)
moneda_empresa = f_moneda_empresa(empresa)
vto.efectos = 0
vto.importe[1] =0
SetNull(vto.vencimiento[1])

Select venfac.cliente,venfac.codpago,venfac.total_fac,venfac.ffactura,venfac.divisa,
		 venfac.precartera,venfac.cartera,venfac.total_fac_pts, venfac.fecha_lb
Into  :cliente,:var_codpago,:var_total_fac,:var_fecha,:var_divisa,
		:var_precartera,:var_cartera,:var_total_fac_pts, :fecha_lb
From   venfac
Where  venfac.empresa   =  :codigo_empresa
And    venfac.anyo      =  :anyo
And    venfac.factura   =  :factura;
IF SQLCA.SQLCODE <> 0 Then Return vto
IF IsNull(var_precartera) Then var_precartera = "N"
var_ffactura   = Date(var_fecha) //FECHA ORIGINAL 
var_ffactura1  = Date(var_fecha) //FECHA CON CÁLCULOS
if not isnull(fecha_lb) and fecha_lb > var_fecha then //FECHA DE LOADING BOARD (Carga), que es la utilizada para algunos clientes para determinar los vencimientos (Sonia 07/2015)
	var_ffactura   = Date(fecha_lb) 
	var_ffactura1  = Date(fecha_lb)
end if

IF var_precartera = "S" and var_cartera = "S" Then
	importe_precartera = 0
  	SELECT sum(divisas),sum(importe)
   	INTO :importe_precartera,
	     :importe_precartera_pts 
	FROM  venfaccar  
   	WHERE venfaccar.empresa   = :empresa
	AND   venfaccar.anyo      = :anyo
	AND   venfaccar.factura   = :factura
	AND   venfaccar.facturado = 'S';
	IF IsNUll(importe_precartera) Then importe_precartera = 0
 	var_total_fac = var_total_fac + importe_precartera
 	var_total_fac_pts = var_total_fac_pts + importe_precartera_pts
END IF

SELECT carforpag.efectos,   carforpag.primero,   carforpag.cadencia,   
	carforpag.tipodoc,  carforpag.cadencia1, carforpag.cadencia2,   
  	carforpag.cadencia3,carforpag.cadencia4, carforpag.cadencia5,   
	carforpag.cadencia6,carforpag.cadencia7, carforpag.cadencia8,   
	carforpag.cadencia9,rel1,rel2,rel3,rel4,rel5,rel6,rel7,rel8,rel9
INTO :var_efectos,   :var_primero,   :var_cad,   :var_tipodoc,   
       :var_cadencia[1], :var_cadencia[2], :var_cadencia[3],  :var_cadencia[4],   
       :var_cadencia[5], :var_cadencia[6], :var_cadencia[7],  :var_cadencia[8],   
       :var_cadencia[9] ,:rel[1],:rel[2],:rel[3],:rel[4],:rel[5],:rel[6],:rel[7],:rel[8],:rel[9]
FROM   carforpag  
WHERE  carforpag.empresa = :empresa
AND    carforpag.forma   = :var_codpago ;
IF SQLCA.SQLCODE = 0 Then
	acumulado =0
	acumulado_pts =0

	total=0
	for reg=1 to var_efectos
		if isnull(rel[reg]) then rel[reg]=1
		total=total + rel[reg]
	next
//	var_importe     = Dec(String(var_total_fac/var_efectos,f_mascara_moneda(var_divisa)))
//	var_importe_pts = Dec(String(var_total_fac_pts/var_efectos,f_mascara_moneda(var_divisa)))
	vto.efectos = var_efectos
	hay_cadencia = 0
	IF var_primero = 0 Then
		FOR i = 1 to 9
			if not(isnull(var_cadencia[i])) then
				hay_cadencia = 1
			end if
		NEXT
		IF hay_cadencia = 1 then
			FOR reg = 1 To var_efectos
				 a_dias[reg] = var_cadencia[reg]
			NEXT
		ELSE
			FOR reg = 1 To var_efectos
				IF reg = 1 Then 
					a_dias[reg] = var_primero
				ELSE
					a_dias[reg] = var_cad
				END IF
			NEXT
		END IF
	ELSE
		FOR reg = 1 To var_efectos
			IF reg = 1 Then 
				a_dias[reg] = var_primero
			ELSE
				a_dias[reg] = var_cad
			END IF
		NEXT
	END IF
	FOR reg = 1 To var_efectos			
		IF reg <> 1 Then var_ffactura1 = vto.vencimiento[reg - 1]

		// (Tenemos en cuenta que los meses son 30 días siempre)
		Long meses, dia_vencimiento, mes_vencimiento, anyo_vencimiento
		int j

		dia_vencimiento   = day(var_ffactura1)
		mes_vencimiento   = month(var_ffactura1)
		anyo_vencimiento  = year(var_ffactura1)

		meses = a_dias[reg] / 30
//-------------------------------------------------------------------

	mes_vencimiento = mes_vencimiento + meses
	if mes_vencimiento > 12 then
		mes_vencimiento = mes_vencimiento -12
		anyo_vencimiento = anyo_vencimiento + 1
	end if

	if mes_vencimiento = 2 then
		if not (ftc_es_bisiesto ( anyo_vencimiento )) then
			if dia_vencimiento > 28 then
				dia_vencimiento = 28
			end if
		else
			if dia_vencimiento > 29 then
				dia_vencimiento = 29
			end if
		end if
	end if
	
	if (mes_vencimiento = 4) or  (mes_vencimiento = 6) or (mes_vencimiento = 9) or  (mes_vencimiento = 11) then
		if dia_vencimiento > 30 then
			dia_vencimiento = 30
		end if
	end if


//-------------------------------------------------------------------

/*		
		if meses = 0 then meses = 1
		
		for j = 1 to meses 
			if mes_vencimiento = 12 then
				mes_vencimiento = 1
				anyo_vencimiento = anyo_vencimiento + 1
			else
				mes_vencimiento = mes_vencimiento + 1
			end if
			if mes_vencimiento = 2 then
				if not (ftc_es_bisiesto ( anyo_vencimiento )) then
					choose case dia_vencimiento
						case	29 
								mes_vencimiento = mes_vencimiento + 1
								dia_vencimiento = 1							
						case	30 
								mes_vencimiento = mes_vencimiento + 1
								dia_vencimiento = 2							
						case	31 
								mes_vencimiento = mes_vencimiento + 1
								dia_vencimiento = 3												
					end choose
				else
					choose case dia_vencimiento
						case	30 
								mes_vencimiento = mes_vencimiento + 1
								dia_vencimiento = 1
						case	31 
								mes_vencimiento = mes_vencimiento + 1
								dia_vencimiento = 2												
					end choose
				
				end if
			end if
			if (mes_vencimiento = 4) or  (mes_vencimiento = 6) or (mes_vencimiento = 9) or  (mes_vencimiento = 11) then
				choose case dia_vencimiento
					case	31 
							mes_vencimiento = mes_vencimiento + 1
							dia_vencimiento = 1							
				end choose
			end if
		next
*/		
		var_vencimiento = date(string(dia_vencimiento,"##")+"/"+string(mes_vencimiento,"##")+"/"+string(anyo_vencimiento,"####"))	

		// Esta línea la comentamos para que no sume días naturales
		//		var_vencimiento = RelativeDate(var_ffactura1,dias[reg]) 
		// David 10-10-01
		var_vencimiento = f_vencimiento_ajuste_equipe_nuevo(empresa,var_cliente,var_vencimiento,var_ffactura)
		
		var_vencimiento = f_vencimiento_vacaciones(empresa,var_cliente,var_vencimiento)
		//-----------------------------------//
		// Cáculo del vencimiento para el último viernes del mes. Excepción para Aparici.
		if var_codpago	 = '100' then
			var_vencimiento = f_vencimiento_ultimo_viernes_mes(var_ffactura)
		end if		
		// Cálculo del vencimiento para Peronda.
		if var_codpago	 = '101' then
			var_vencimiento = f_vencimiento_dias_10_25_peronda(var_ffactura)
		end if		
		// Cálculo del vencimiento para Alcor.
		if var_codpago	 = '102' then
			var_vencimiento = f_vencimiento_dias_5_20_alcor(var_ffactura)
		end if		
		// Cálculo del vencimiento Arte y Diseño (VIVES). Día 25 del mes siguiente.
		if var_codpago	 = '106' then
			var_vencimiento = f_vencimiento_dia_25_mes_siguiente(var_ffactura)
		end if		
		// Cálculo del vencimiento días naturales
		if  var_codpago	 = '38' or var_codpago	 = '60' or var_codpago	 = '61' or var_codpago	 = '64' or var_codpago	 = '72' or var_codpago	 = '73' or var_codpago	 = '81' or var_codpago	 = '107' or var_codpago	 = '110'  then
			var_vencimiento = f_vencimiento_dias_naturales(var_ffactura, var_primero)
		end if		
		// Cálculo del vencimiento IT TRANSFERENCIA 120 DIAS: Fecha factura + 4 meses + último día de mes + día fijo de pago
		if var_codpago	 = '111' or  var_codpago = '114' then
			var_vencimiento = f_vencimiento_it_transf_120_dias(var_ffactura, var_cliente)
		end if		
		
		// Cálculo del vencimiento IT TRANSFERENCIA 150 DIAS: Fecha factura + 5 meses + último día de mes + día fijo de pago
		if var_codpago	 = '112' or var_codpago	 = '115' then
			var_vencimiento = f_vencimiento_it_transf_150_dias (var_ffactura, var_cliente )
		end if		
		
		// Cálculo del vencimiento IT TRANSFERENCIA 30 DIAS: Fecha factura + 5 meses + último día de mes + día fijo de pago
		if var_codpago	 = '113' then
			var_vencimiento = f_vencimiento_it_transf_30_dias (var_ffactura, var_cliente )
		end if		
		
		// Cálculo del vencimiento IT TRANSFERENCIA 180 DIAS: Fecha factura + 6 meses + último día de mes + día fijo de pago
		if var_codpago	 = '119' then
			var_vencimiento = f_vencimiento_it_transf_180_dias (var_ffactura, var_cliente )
		end if		
	
		
		vto.vencimiento[reg] = var_vencimiento
		var_importe = Dec(String(( var_total_fac * rel[reg] )/ total,f_mascara_moneda(var_divisa)))
		var_importe_pts = Dec(String((var_total_fac_pts* rel[reg] )/ total,f_mascara_moneda(moneda_empresa)))
		IF reg = var_efectos Then
			var_importe = var_total_fac - acumulado	
			var_importe_pts = var_total_fac_pts - acumulado_pts
		END IF
		acumulado = acumulado + var_importe
		acumulado_pts = acumulado_pts + var_importe_pts
		vto.importe[reg] = var_importe
		vto.importe_pts[reg] = var_importe_pts
	NEXT
END IF	
Return vto

end function

