$PBExportHeader$f_insertar_venped.srf
global type f_insertar_venped from function_object
end type

forward prototypes
global function boolean f_insertar_venped (str_venped str_venped)
end prototypes

global function boolean f_insertar_venped (str_venped str_venped);IF IsNull(str_venped.serie)  then str_venped.serie  = ""
if trim(str_venped.serie) = "" then str_venped.serie = f_serie_venclientes(str_venped.empresa,str_venped.cliente)
if isnull(str_venped.facturar_metros_reales) then str_venped.facturar_metros_reales = ""
if trim(str_venped.facturar_metros_reales) = "" then str_venped.facturar_metros_reales = "N"
if isnull(str_venped.recalcular_packs) then str_venped.recalcular_packs = ""
if trim(str_venped.recalcular_packs) = "" then str_venped.recalcular_packs = "N"

  INSERT INTO venped  
      (venped.empresa,
       venped.anyo,
       venped.pedido,
       venped.fpedido,
       venped.fentrega,
       venped.falta,
       venped.cliente,
       venped.flistado,
       venped.observaciones,
       venped.codpago,
       venped.agente1,
       venped.agente2,
       venped.comision1,
       venped.comision2,
       venped.comision11,
       venped.comision22,
       venped.dtopp,
       venped.dtoesp1,
       venped.dtoesp2,
       venped.dtoesp3,
       venped.dtoesp4,
       venped.tipodto1,
       venped.tipodto2,
       venped.tipodto3,
       venped.tipodto4,
       venped.explicaciondto1,
       venped.explicaciondto2,
       venped.explicaciondto3,
       venped.explicaciondto4,
       venped.tipoiva,
       venped.iva,
       venped.numpedcli,
       venped.idioma,
       venped.divisa,
       venped.cambio,
       venped.tarifa,
       venped.ftarifa,
       venped.fbloqueo,
       venped.transportista,
       venped.serie,
       venped.zona,
       venped.envio,
       venped.correspondencia,
       venped.domiciliacion,
       venped.forma_envio,
       venped.cod_entrega,
       venped.usuario,
       venped.tipo_portes,
       venped.periodo_fac,
       venped.peso,
       venped.usuario_pedido,
       venped.agente3,
       venped.comision31,
       venped.comision32,
       venped.veces,
       venped.textcomercial1,
       venped.textcomercial2,
       venped.textaduanaesp1,
       venped.textaduanaesp2,
       venped.textaduanaext1,
       venped.textaduanaext2,
       venped.textopie1,
       venped.textopie2,
       venped.condicion,
       venped.peso_neto,
       venped.banco_de_cobro,
       venped.porcentaje_aduana,
       venped.bruto,
       venped.importe_dto,
       venped.total_neto,
       venped.calculo_dto,
       venped.agrupa,
       venped.almacen_deposito,
       venped.deposito,
       venped.calculo_dtoesp,
       venped.agrupa_exp,
       venped.facturar_metros_reales,
       venped.almacen_de_carga,
       venped.comision_fija1,
       venped.comision_fija2,
       venped.comision_fija3,
       venped.es_proforma,
       venped.peso_bascula_kg,
       venped.fecha_carga_prevista,
       venped.observaciones2,
		 venped.recalcular_packs)  
  VALUES
  		(:str_venped.empresa,
       :str_venped.anyo,
       :str_venped.pedido,
       :str_venped.fpedido,
       :str_venped.fentrega,
       :str_venped.falta,
       :str_venped.cliente,
       :str_venped.flistado,
       :str_venped.observaciones,
       :str_venped.codpago,
       :str_venped.agente1,
       :str_venped.agente2,
       :str_venped.comision1,
       :str_venped.comision2,
       :str_venped.comision11,
       :str_venped.comision22,
       :str_venped.dtopp,
       :str_venped.dtoesp1,
       :str_venped.dtoesp2,
       :str_venped.dtoesp3,
       :str_venped.dtoesp4,
       :str_venped.tipodto1,
       :str_venped.tipodto2,
       :str_venped.tipodto3,
       :str_venped.tipodto4,
       :str_venped.explicaciondto1,
       :str_venped.explicaciondto2,
       :str_venped.explicaciondto3,
       :str_venped.explicaciondto4,
       :str_venped.tipoiva,
       :str_venped.iva,
       :str_venped.numpedcli,
       :str_venped.idioma,
       :str_venped.divisa,
       :str_venped.cambio,
       :str_venped.tarifa,
       :str_venped.ftarifa,
       :str_venped.fbloqueo,
       :str_venped.transportista,
       :str_venped.serie,
       :str_venped.zona,
       :str_venped.envio,
       :str_venped.correspondencia,
       :str_venped.domiciliacion,
       :str_venped.forma_envio,
       :str_venped.cod_entrega,
       :str_venped.usuario,
       :str_venped.tipo_portes,
       :str_venped.periodo_fac,
       :str_venped.peso,
       :str_venped.usuario_pedido,
       :str_venped.agente3,
       :str_venped.comision31,
       :str_venped.comision32,
       :str_venped.veces,
       :str_venped.textcomercial1,
       :str_venped.textcomercial2,
       :str_venped.textaduanaesp1,
       :str_venped.textaduanaesp2,
       :str_venped.textaduanaext1,
       :str_venped.textaduanaext2,
       :str_venped.textopie1,
       :str_venped.textopie2,
       :str_venped.condicion,
       :str_venped.peso_neto,
       :str_venped.banco_de_cobro,
       :str_venped.porcentaje_aduana,
       :str_venped.bruto,
       :str_venped.importe_dto,
       :str_venped.total_neto,
       :str_venped.calculo_dto,
       :str_venped.agrupa,
       :str_venped.almacen_deposito,
       :str_venped.deposito,
       :str_venped.calculo_dtoesp,
       :str_venped.agrupa_exp,
       :str_venped.facturar_metros_reales,
       :str_venped.almacen_de_carga,
       :str_venped.comision_fija1,
       :str_venped.comision_fija2,
       :str_venped.comision_fija3,
       :str_venped.es_proforma,
       :str_venped.peso_bascula_kg,
       :str_venped.fecha_carga_prevista,
       :str_venped.observaciones2,
		 :str_venped.recalcular_packs);
		 
IF SQLCA.SQLCODE <> 0 Then 
	f_mensaje("Error en funcion insert venped",sqlca.sqlerrtext)
	Return FALSE
END IF

Return TRUE
end function

