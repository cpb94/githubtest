$PBExportHeader$f_actualizar_linea_venproforma.srf
global type f_actualizar_linea_venproforma from function_object
end type

forward prototypes
global function boolean f_actualizar_linea_venproforma (string empresa, decimal periodo, decimal proforma, decimal linea)
end prototypes

global function boolean f_actualizar_linea_venproforma (string empresa, decimal periodo, decimal proforma, decimal linea);str_venliproformas  linpro
str_venproformas   pro 
STring v_mascara
DateTime var_fproforma
Integer  reg,reg1 ,bien
Dec{0}  ultima,parcial_pallets
Dec{2}  parcial_cantidad,parcial_cajas,acumulado,var_dto1,var_dto2,var_dto3,var_dto4,var_dtopp,control_descuento
Dec{4}  impdto,importe,importedto1,importedto2,importedto3,importedto4,importedtopp,importedtoesp,control_precio,control_bruto,control_importedto,control_importe
String  var_tipodto1,var_tipodto2,var_tipodto3,var_tipodto4,var_calculo_dto,var_calculo_dtoesp,ls_tarifa
Dec{4}  var_impdto1,var_impdto2,var_impdto3,var_impdto4
Integer procesos
bien = 0
linpro.empresa   = codigo_empresa
linpro.anyo      = periodo
linpro.proforma  = proforma
linpro.linea = linea
SELECT venproformas.dtoesp1,venproformas.dtoesp2,venproformas.dtoesp3,venproformas.dtoesp4,   
       venproformas.dtopp,venproformas.tipodto1,venproformas.tipodto2,venproformas.tipodto3,   
       venproformas.tipodto4,venproformas.divisa,venproformas.calculo_dto,
	 	 venproformas.fproforma,venproformas.calculo_dtoesp,venproformas.tarifa
INTO   :var_dto1,:var_dto2,:var_dto3,:var_dto4,:var_dtopp,
		 :var_tipodto1,:var_tipodto2,:var_tipodto3,:var_tipodto4,
		 :linpro.divisa,:var_calculo_dto,:var_fproforma,
		 :var_calculo_dtoesp,:ls_tarifa
FROM  venproformas  
WHERE venproformas.empresa  = :empresa
AND   venproformas.anyo     = :periodo 
AND   venproformas.proforma  = :proforma;
IF SQLCA.SQLCODE = 100 Then 
	bien = 1
	f_mensaje("Error base de datos","No existe proforma"+String(proforma))
END IF
			
v_mascara = f_mascara_moneda(linpro.divisa)

int li_decimales_precio
string ls_mascara_moneda_tarifa

li_decimales_precio       = f_ventarifas_decimales_precios(codigo_empresa,ls_tarifa)
ls_mascara_moneda_tarifa  = f_mascara_decimales(li_decimales_precio)

Select dtoesp,tipolinea,precio_aduana,precio,cantidad
Into   :linpro.dtoesp,:linpro.tipolinea,:linpro.precio_aduana,:linpro.precio,
       :linpro.cantidad
From   venliproformas
Where  venliproformas.empresa       = :empresa
And    venliproformas.anyo          = :periodo
And    venliproformas.proforma       = :proforma
And    venliproformas.linea = :linea;
IF SQLCA.SQLCODE = 100 Then 
	bien = 1
	f_mensaje("Error base de datos","No existe linea proforma"+String(periodo)+" "+String(proforma)+" "+String(linea))
END IF

 linpro.control_comisiones = f_comision_ventipolin(linpro.empresa,linpro.tipolinea)
 linpro.control_descuentos = f_descuento_ventipolin(linpro.empresa,linpro.tipolinea)

 IF IsNull(linpro.dtoesp) Then linpro.dtoesp= 0
 IF IsNull(var_dto1)  Then var_dto1  = 0
 IF IsNull(var_dto2)  Then var_dto2  = 0
 IF IsNull(var_dto3)  Then var_dto3  = 0
 IF IsNull(var_dto4)  Then var_dto4  = 0
 IF IsNull(linpro.dtoesp)  Then linpro.dtoesp  = 0
 IF IsNull(var_dtopp) Then var_dtopp = 0

linpro.impdtopp  =0
linpro.precio_neto = linpro.precio
linpro.precio_aduana_neto = linpro.precio_aduana

For procesos = 1 To 2

   IF procesos = 1 then control_precio = linpro.precio_neto
   IF procesos = 2 then control_precio = linpro.precio_aduana_neto
	
	control_bruto = Dec(String(linpro.cantidad * control_precio,v_mascara))
	IF var_calculo_dtoesp = "N" Then
			importedtoesp = Dec(String((control_bruto * linpro.dtoesp /100),v_mascara))
			acumulado = control_bruto - importedtoesp
	ELSE
		control_precio = control_precio - &
		Dec(String((control_precio * linpro.dtoesp)/100,ls_mascara_moneda_tarifa))
		control_bruto = Dec(String(linpro.cantidad * control_precio,v_mascara))
		acumulado = control_bruto
	END IF

	acumulado = acumulado
	
	IF linpro.control_descuentos = "N" Then
		linpro.descuento = 0
	ELSE
	 
	   IF var_tipodto1  = "L" Then 
		   IF var_calculo_dto = "N" Then
					importedto1 = Dec(String((acumulado * var_dto1 /100),v_mascara))
					acumulado = acumulado - importedto1
				ELSE
					control_precio = control_precio - &
					Dec(String((control_precio * var_dto1)/100,ls_mascara_moneda_tarifa))
					control_bruto = Dec(String(linpro.cantidad * control_precio,v_mascara))
					IF var_calculo_dtoesp = "N" Then
						importedtoesp = Dec(String(control_bruto * linpro.dtoesp/100,v_mascara))
					 ELSE
						importedtoesp = 0
					END IF
					acumulado = control_bruto - importedtoesp
	    	END IF
	 END IF
	 IF var_tipodto2  = "L" Then 
	 	  IF var_calculo_dto = "N" Then
					importedto2 = Dec(String((acumulado * var_dto2 /100),v_mascara))
					acumulado = acumulado - importedto2
				ELSE
					control_precio = control_precio - &
					Dec(String((control_precio * var_dto2)/100,ls_mascara_moneda_tarifa))
					control_bruto = Dec(String(linpro.cantidad * control_precio,v_mascara))
					IF var_calculo_dtoesp = "N" Then
						importedtoesp = Dec(String(control_bruto * linpro.dtoesp/100,v_mascara))
					ELSE
						importedtoesp = 0
					END IF
					acumulado = control_bruto - importedtoesp
			END IF
	 END IF
	 IF var_tipodto3  = "L" Then 
			IF var_calculo_dto = "N" Then
				importedto3 = Dec(String((acumulado * var_dto3 /100),v_mascara))
				acumulado = acumulado - importedto3
			ELSE
				control_precio = control_precio - &
				Dec(String((control_precio * var_dto3)/100,ls_mascara_moneda_tarifa))
				control_bruto = Dec(String(linpro.cantidad * control_precio,v_mascara))
				IF var_calculo_dtoesp = "N" Then
					importedtoesp = Dec(String(control_bruto * linpro.dtoesp/100,v_mascara))
				ELSE
					importedtoesp = 0
				END IF
				acumulado = control_bruto - importedtoesp
			END IF
	 END IF
	 IF var_tipodto4  = "L" Then 
				IF var_calculo_dto = "N" Then
					importedto4 = Dec(String((acumulado * var_dto4 /100),v_mascara))
					acumulado = acumulado - importedto4
				ELSE
					control_precio = control_precio - &
					Dec(String((control_precio * var_dto4)/100,ls_mascara_moneda_tarifa))
					control_bruto = Dec(String(linpro.cantidad * control_precio,v_mascara))
					IF var_calculo_dtoesp = "N" Then
						importedtoesp = Dec(String(control_bruto * linpro.dtoesp/100,v_mascara))
					ELSE
						importedtoesp = 0
					END IF
					acumulado = control_bruto - importedtoesp
				END IF
	  END IF
	END IF
	

	control_importedto    = control_bruto - acumulado 
	control_importe       = control_bruto - control_importedto
	
	If control_bruto = 0 then
		control_descuento  = 0
	ELse
		control_descuento  = (control_importedto/control_bruto)* 100
   End if
   control_importedto    = Dec(String(control_bruto * control_descuento / 100,v_mascara))
	control_importe       = control_bruto - control_importedto
	


	//----------------------------//
	// control descuentos en pie//
	//--------------------------//
	importedto1= 0
	importedto2= 0
	importedto3= 0
	importedto4= 0
	IF var_tipodto1 = "P" Then
	   	importedto1 = Dec(String((acumulado * var_dto1 /100),v_mascara))
			acumulado = acumulado - importedto1
	END IF
	IF var_tipodto2 = "P" Then
			importedto2 = Dec(String((acumulado * var_dto2 /100),v_mascara))
			acumulado = acumulado - importedto2	 
	END IF			
	IF var_tipodto3 = "P" Then			
			importedto3 = Dec(String((acumulado * var_dto3 /100),v_mascara))
			acumulado = acumulado - importedto3
	END IF			
	IF var_tipodto4 = "P" Then
			importedto4 = Dec(String((acumulado * var_dto4 /100),v_mascara))
			acumulado = acumulado - importedto4
	END IF

	importedtopp  = Dec(String((acumulado * var_dtopp /100),v_mascara)) 
   control_importedto = control_importedto + importedto1 + importedto2 + importedto3 + importedto4

	IF procesos = 1 Then
		linpro.descuento       = control_descuento
		linpro.bruto           = control_bruto
	   linpro.importedto      = control_importedto
	   linpro.importe         = control_importe
		linpro.precio_neto     = control_precio
 		linpro.neto            = acumulado
		linpro.impdtopp        = importedtopp
		linpro.impdtoesp1      = importedto1
		linpro.impdtoesp2      = importedto2
		linpro.impdtoesp3      = importedto3
		linpro.impdtoesp4      = importedto4
	END IF
	IF procesos = 2 Then
		linpro.descuento_aduana       = control_descuento
	   linpro.importe_aduana         = control_importe
		linpro.precio_aduana_neto     = control_precio
		linpro.impdtoesp1_aduana      = importedto1
		linpro.impdtoesp2_aduana      = importedto2
		linpro.impdtoesp3_aduana      = importedto3
		linpro.impdtoesp4_aduana      = importedto4
		linpro.impdtopp_aduana        = importedtopp
	END IF
Next

  UPDATE venliproformas  
     SET importe            = :linpro.importe,   
         descuento          = :linpro.descuento,   
         importedto         = :linpro.importedto,   
         precio_neto        = :linpro.precio_neto,   
         precio_aduana_neto = :linpro.precio_aduana_neto,   
         descuento_aduana   = :linpro.descuento_aduana,   
         importe_aduana     = :linpro.importe_aduana,   
         bruto              = :linpro.bruto  ,
			neto               = :linpro.neto,
			impdtopp           = :linpro.impdtopp ,
			fproforma          = :var_fproforma,
			impdtoesp1         =: linpro.impdtoesp1,
			impdtoesp2         =: linpro.impdtoesp2,
			impdtoesp3         =: linpro.impdtoesp3,
			impdtoesp4         =: linpro.impdtoesp4,			
			impdtoesp1_aduana  =: linpro.impdtoesp1_aduana,
			impdtoesp2_aduana  =: linpro.impdtoesp2_aduana,
			impdtoesp3_aduana  =: linpro.impdtoesp3_aduana,
			impdtoesp4_aduana  =: linpro.impdtoesp4_aduana,
			impdtopp_aduana    = :linpro.impdtopp
   WHERE venliproformas.empresa   = :linpro.empresa
	AND   venliproformas.anyo      = :linpro.anyo
	AND   venliproformas.proforma   = :linpro.proforma
   AND   venliproformas.linea = :linea    ;
  			IF SQLCA.SQLCODE <>0 Then 
				f_mensaje("Error base de datos","Error al modificar lineas de proformaes" + sqlca.sqlerrtext)
				bien = 1
			END IF

IF bien = 1 Then
	Return FALSE
Else
		Return TRUE
END IF

end function

