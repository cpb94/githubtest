$PBExportHeader$f_actualizar_linea_venpedido_old.srf
global type f_actualizar_linea_venpedido_old from function_object
end type

forward prototypes
global function boolean f_actualizar_linea_venpedido_old (string empresa, decimal periodo, decimal pedido, decimal linea)
end prototypes

global function boolean f_actualizar_linea_venpedido_old (string empresa, decimal periodo, decimal pedido, decimal linea);return f_actualizar_linea_venpedido_02052016_old(empresa,periodo,pedido,linea)

//str_venliped  linped
//str_venped   ped 
//String v_mascara
//DateTime var_fpedido
//Integer  reg,reg1 ,bien
//Dec{0}  ultima,parcial_pallets
//Dec{2}  parcial_cantidad,parcial_cajas,acumulado,var_dto1,var_dto2,var_dto3,var_dto4,var_dtopp,control_descuento
////Dec{2}  parcial_cantidad,parcial_cajas,acumulado,var_dto1,var_dto2,var_dto3,var_dto4,var_dtopp,control_descuento
//Dec{6}  impdto,importe,importedto1,importedto2,importedto3,importedto4,importedtopp,importedtoesp,control_precio,control_bruto,control_importedto,control_importe
//String  var_tipodto1,var_tipodto2,var_tipodto3,var_tipodto4,var_calculo_dto,var_calculo_dtoesp
//Dec{6}  var_impdto1,var_impdto2,var_impdto3,var_impdto4
//Integer procesos,li_numero_descuentos_aplicados
//string v_planificado, observaciones
//integer orden
//
//
//bien = 0
//linped.empresa   = codigo_empresa
//linped.anyo      = periodo
//linped.pedido  = pedido
//linped.linea = linea
//SELECT venped.dtoesp1,venped.dtoesp2,venped.dtoesp3,venped.dtoesp4,   
//       venped.dtopp,venped.tipodto1,venped.tipodto2,venped.tipodto3,   
//       venped.tipodto4,venped.divisa,venped.calculo_dto,
//	 	 venped.fpedido,venped.calculo_dtoesp
//INTO   :var_dto1,:var_dto2,:var_dto3,:var_dto4,:var_dtopp,
//		 :var_tipodto1,:var_tipodto2,:var_tipodto3,:var_tipodto4,
//		 :linped.divisa,:var_calculo_dto,:var_fpedido,
//		 :var_calculo_dtoesp
//FROM  venped  
//WHERE (venped.empresa  = :empresa)
//AND   (venped.anyo     = :periodo) 
//AND   (venped.pedido  = :pedido);
//IF SQLCA.SQLCODE = 100 Then 
//	bien = 1
//	f_mensaje("Error base de datos","No existe pedido"+String(pedido))
//END IF
//			
//v_mascara = f_mascara_precios_fra_moneda(linped.divisa)
//
//Select dtoesp,tipolinea,
//		 precio_aduana,
//		 precio,cantidad,
//		 cantidad_facturar,
//		 dtoesp2,planificado,
//		 observaciones,
//		 fecha_intr, orden
//Into   :linped.dtoesp,
//       :linped.tipolinea,
//		 :linped.precio_aduana,
//		 :linped.precio,
//       :linped.cantidad,
//		 :linped.cantidad_facturar,
//		 :linped.dtoesp2,
//		 :v_planificado,
//		 :observaciones,
//		 :linped.fecha_intr,
//		 :orden
//From   venliped
//Where  venliped.empresa       = :empresa
//And    venliped.anyo          = :periodo
//And    venliped.pedido       = :pedido
//And    venliped.linea = :linea;
//
//IF SQLCA.SQLCODE = 100 Then 
//	bien = 1
//	f_mensaje("Error base de datos","No existe linea pedido"+String(periodo)+" "+String(pedido)+" "+String(linea))
//END IF
//
//linped.control_comisiones = f_comision_ventipolin(linped.empresa,linped.tipolinea)
//linped.control_descuentos = f_descuento_ventipolin(linped.empresa,linped.tipolinea)
//
//// David 15-06-04  Poner a 0 los descuentos si la línea no tiene gestión de dtos
//IF linped.control_descuentos = "N" Then
//	linped.descuento = 0
//	linped.impdtoesp1 = 0
//	linped.impdtoesp2 = 0
//	linped.impdtoesp1_aduana = 0
//	linped.impdtoesp2_aduana = 0
//	var_dto1 = 0
//	var_dto2 = 0
//	var_dto3 = 0
//	var_dto4 = 0
//end if
//// Fin David 15-06-04
//
//IF IsNull(linped.dtoesp) Then linped.dtoesp= 0
//IF IsNull(linped.dtoesp2) Then linped.dtoesp2= 0
//IF IsNull(var_dto1)  Then var_dto1  = 0
//IF IsNull(var_dto2)  Then var_dto2  = 0
//IF IsNull(var_dto3)  Then var_dto3  = 0
//IF IsNull(var_dto4)  Then var_dto4  = 0
//IF IsNull(var_dtopp) Then var_dtopp = 0
//
//linped.impdtopp  =0
////***
////f_mensaje("precio1", String(linped.precio))
//linped.precio_neto = linped.precio
//linped.precio_aduana_neto = linped.precio_aduana
//
//For procesos = 1 To 2
//	li_numero_descuentos_aplicados = 0
//   IF procesos = 1 then control_precio = linped.precio_neto
//   IF procesos = 2 then control_precio = linped.precio_aduana_neto
//	
//	//control_bruto = Dec(String(linped.cantidad * control_precio,v_mascara))
//	control_bruto = Dec(String(linped.cantidad_facturar * control_precio,v_mascara))
//	IF var_calculo_dtoesp = "N" Then
//		importedtoesp = Dec(String((control_bruto * linped.dtoesp /100),v_mascara))
//		acumulado = control_bruto - importedtoesp
//		//Dto2
//		importedtoesp = importedtoesp + Dec(String((acumulado * linped.dtoesp2 /100),v_mascara))
//		acumulado = control_bruto - importedtoesp			
//	ELSE
//		control_precio = control_precio - &
//		Dec(String((control_precio * linped.dtoesp)/100,v_mascara))
//		control_precio = control_precio - &
//		Dec(String((control_precio * linped.dtoesp2)/100,v_mascara))		
//		//control_bruto = Dec(String(linped.cantidad * control_precio,v_mascara))
//		control_bruto = Dec(String(linped.cantidad_facturar * control_precio,v_mascara))
//		acumulado = control_bruto
//		
//	END IF
//
////	acumulado = acumulado
//	
//	IF linped.control_descuentos = "N" Then
//		linped.descuento = 0
//		linped.impdtoesp1 = 0
//		linped.impdtoesp2 = 0
//		linped.impdtoesp1_aduana = 0
//		linped.impdtoesp2_aduana = 0
//	ELSE
//	 
//	   IF var_tipodto1  = "L" Then 
//		   IF var_calculo_dto = "N" Then
//					importedto1 = Dec(String((acumulado * var_dto1 /100),v_mascara))
//					acumulado = acumulado - importedto1
//				ELSE
//					control_precio = control_precio - &
//					Dec(String((control_precio * var_dto1)/100,v_mascara))
//					//control_bruto = Dec(String(linped.cantidad * control_precio,v_mascara))
//					control_bruto = Dec(String(linped.cantidad_facturar * control_precio,v_mascara))
//					IF var_calculo_dtoesp = "N" Then
//						importedtoesp = Dec(String(control_bruto * linped.dtoesp/100,v_mascara))
//					 ELSE
//						importedtoesp = 0
//					END IF
//					acumulado = control_bruto - importedtoesp
//	    	END IF
//	 END IF
//	 IF var_tipodto2  = "L" Then 
//	 	  IF var_calculo_dto = "N" Then
//					importedto2 = Dec(String((acumulado * var_dto2 /100),v_mascara))
//					acumulado = acumulado - importedto2
//				ELSE
//					control_precio = control_precio - &
//					Dec(String((control_precio * var_dto2)/100,v_mascara))
//					//control_bruto = Dec(String(linped.cantidad * control_precio,v_mascara))
//					control_bruto = Dec(String(linped.cantidad_facturar * control_precio,v_mascara))
//					IF var_calculo_dtoesp = "N" Then
//						importedtoesp = Dec(String(control_bruto * linped.dtoesp/100,v_mascara))
//					ELSE
//						importedtoesp = 0
//					END IF
//					acumulado = control_bruto - importedtoesp
//			END IF
//	 END IF
//	 IF var_tipodto3  = "L" Then 
//			IF var_calculo_dto = "N" Then
//				importedto3 = Dec(String((acumulado * var_dto3 /100),v_mascara))
//				acumulado = acumulado - importedto3
//			ELSE
//				control_precio = control_precio - &
//				Dec(String((control_precio * var_dto3)/100,v_mascara))
//				//control_bruto = Dec(String(linped.cantidad * control_precio,v_mascara))
//				control_bruto = Dec(String(linped.cantidad_facturar * control_precio,v_mascara))
//				IF var_calculo_dtoesp = "N" Then
//					importedtoesp = Dec(String(control_bruto * linped.dtoesp/100,v_mascara))
//				ELSE
//					importedtoesp = 0
//				END IF
//				acumulado = control_bruto - importedtoesp
//			END IF
//	 END IF
//	 IF var_tipodto4  = "L" Then 
//				IF var_calculo_dto = "N" Then
//					importedto4 = Dec(String((acumulado * var_dto4 /100),v_mascara))
//					acumulado = acumulado - importedto4
//				ELSE
//					control_precio = control_precio - &
//					Dec(String((control_precio * var_dto4)/100,v_mascara))
//					//control_bruto = Dec(String(linped.cantidad * control_precio,v_mascara))
//					control_bruto = Dec(String(linped.cantidad_facturar * control_precio,v_mascara))
//					IF var_calculo_dtoesp = "N" Then
//						importedtoesp = Dec(String(control_bruto * linped.dtoesp/100,v_mascara))
//					ELSE
//						importedtoesp = 0
//					END IF
//					acumulado = control_bruto - importedtoesp
//				END IF
//	  END IF
//	END IF
//	
//	//linped.impdtopp = Dec(String((acumulado * var_dtopp/100),v_mascara))
//	
//	control_importedto    = control_bruto - acumulado 
//	control_importe       = control_bruto - control_importedto
//	
//	if linped.dtoesp <> 0 then
//		li_numero_descuentos_aplicados ++
//	end if
//	if linped.dtoesp2 <> 0 then
//		li_numero_descuentos_aplicados ++
//	end if	
//	if var_tipodto1  = "L" and var_dto1 <> 0 then
//		li_numero_descuentos_aplicados ++
//	end if	
//	if var_tipodto2  = "L" and var_dto2 <> 0 then
//		li_numero_descuentos_aplicados ++
//	end if	
//	if var_tipodto3  = "L" and var_dto3 <> 0 then
//		li_numero_descuentos_aplicados ++
//	end if	
//	if var_tipodto4  = "L" and var_dto4 <> 0 then
//		li_numero_descuentos_aplicados ++
//	end if	
//	
//	If control_bruto = 0 then
//		control_descuento  = 0
//	ELse
//		if li_numero_descuentos_aplicados > 1 then
//			control_descuento  = (control_importedto/control_bruto)* 100
//		else
//			control_descuento  = linped.dtoesp+linped.dtoesp2
//			if var_tipodto1  = "L" and var_dto1 <> 0 then
//				control_descuento  += var_dto1 
//			end if
//			if var_tipodto2  = "L" and var_dto2 <> 0 then
//				control_descuento  += var_dto2 
//			end if
//			if var_tipodto3  = "L" and var_dto3 <> 0 then
//				control_descuento  += var_dto3 
//			end if
//			if var_tipodto4  = "L" and var_dto4 <> 0 then
//				control_descuento  += var_dto4 
//			end if
//		end if
//	End if
//	
//	//David: Lo quito porque no cuadra el importe con el calculo de los descuentos por separado
////	control_importedto    = Dec(String(control_bruto * control_descuento / 100,v_mascara))
////	control_importe       = control_bruto - control_importedto
//	
//
//
//	//----------------------------//
//	// control descuentos en pie//
//	//--------------------------//
//	importedto1= 0
//	importedto2= 0
//	importedto3= 0
//	importedto4= 0
//	IF var_tipodto1 = "P" Then
//		importedto1 = Dec(String((acumulado * var_dto1 /100),v_mascara))
//		acumulado = acumulado - importedto1
//	END IF
//	IF var_tipodto2 = "P" Then
//		importedto2 = Dec(String((acumulado * var_dto2 /100),v_mascara))
//		acumulado = acumulado - importedto2	 
//	END IF			
//	IF var_tipodto3 = "P" Then			
//		importedto3 = Dec(String((acumulado * var_dto3 /100),v_mascara))
//		acumulado = acumulado - importedto3
//	END IF			
//	IF var_tipodto4 = "P" Then
//		importedto4 = Dec(String((acumulado * var_dto4 /100),v_mascara))
//		acumulado = acumulado - importedto4
//	END IF
//
//	importedtopp  = Dec(String((acumulado * var_dtopp /100),v_mascara)) 
//	control_importedto = control_importedto + importedto1 + importedto2 + importedto3 + importedto4
//
//	IF procesos = 1 Then
//		linped.descuento       = control_descuento
//		linped.bruto           = control_bruto
//		linped.importedto      = control_importedto
//		linped.importe         = control_importe
//		linped.precio_neto     = control_precio
//		linped.neto            = acumulado
//		linped.impdtopp        = importedtopp
//		linped.impdtoesp1      = importedto1
//		linped.impdtoesp2      = importedto2
//		linped.impdtoesp3      = importedto3
//		linped.impdtoesp4      = importedto4
//	END IF
//	IF procesos = 2 Then
//		linped.descuento_aduana       = control_descuento
//		linped.importe_aduana         = control_importe
//		linped.precio_aduana_neto     = control_precio
//		linped.impdtoesp1_aduana      = importedto1
//		linped.impdtoesp2_aduana      = importedto2
//		linped.impdtoesp3_aduana      = importedto3
//		linped.impdtoesp4_aduana      = importedto4
//		linped.impdtopp_aduana        = importedtopp
//	END IF
//Next
//
////***
////f_mensaje("precio2", String(linped.precio))
//
//
//UPDATE venliped  
//SET importe            = :linped.importe,   
//	descuento          = :linped.descuento,   
//	importedto         = :linped.importedto,   
//	precio_neto        = :linped.precio_neto,   
//	precio_aduana_neto = :linped.precio_aduana_neto,   
//	descuento_aduana   = :linped.descuento_aduana,   
//	importe_aduana     = :linped.importe_aduana,   
//	bruto              = :linped.bruto  ,
//	neto               = :linped.neto,
//	impdtopp           = :linped.impdtopp ,
//	fpedido            = :var_fpedido,
//	impdtoesp1         = :linped.impdtoesp1,
//	impdtoesp2         = :linped.impdtoesp2,
//	impdtoesp3         = :linped.impdtoesp3,
//	impdtoesp4         = :linped.impdtoesp4,			
//	impdtoesp1_aduana  = :linped.impdtoesp1_aduana,
//	impdtoesp2_aduana  = :linped.impdtoesp2_aduana,
//	impdtoesp3_aduana  = :linped.impdtoesp3_aduana,
//	impdtoesp4_aduana  = :linped.impdtoesp4_aduana,
//	impdtopp_aduana    = :linped.impdtopp,
//	planificado			 = :v_planificado,
//	fecha_intr			 = :linped.fecha_intr,
//	observaciones	    = :observaciones,
//	orden 			= :orden
//WHERE venliped.empresa   = :linped.empresa
//AND   venliped.anyo      = :linped.anyo
//AND   venliped.pedido   = :linped.pedido
//AND   venliped.linea = :linea    ;
//
//IF SQLCA.SQLCODE <>0 Then 
//	f_mensaje("Error base de datos","Error al modificar lineas de pedidoes")
//	bien = 1
//END IF
//
//IF bien = 1 Then
//	Return FALSE
//Else
//		Return TRUE
//END IF
end function

