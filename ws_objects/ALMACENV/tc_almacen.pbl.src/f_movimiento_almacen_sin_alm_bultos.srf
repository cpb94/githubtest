$PBExportHeader$f_movimiento_almacen_sin_alm_bultos.srf
global type f_movimiento_almacen_sin_alm_bultos from function_object
end type

forward prototypes
global function boolean f_movimiento_almacen_sin_alm_bultos (ref str_movimiento_almacen arg_movimiento)
end prototypes

global function boolean f_movimiento_almacen_sin_alm_bultos (ref str_movimiento_almacen arg_movimiento);string  ls_sel
long    ll_indice,ll_total_bultos,ll_piezas_pallet,ll_piezascaja,ll_cajaspallet,ll_id_linea_igual,ll_almubimapa_codbar_id_alm_bultos
dec     ld_cantidad_pendiente_salida,ld_cantidad_pendiente_entrada
boolean lb_correcto = true

str_almacenmovimientos lstr_almacenmovimientos

//Cargamos la estructura del movimiento
lstr_almacenmovimientos.empresa    = arg_movimiento.empresa
lstr_almacenmovimientos.fecha_mov  = datetime(arg_movimiento.fecha)
lstr_almacenmovimientos.orden      = 0
lstr_almacenmovimientos.fecha_intr = datetime(today(),now())
lstr_almacenmovimientos.origen     = ""

if arg_movimiento.id_alm_bultos <> 0 then
	lstr_almacenmovimientos.id_alm_bultos = arg_movimiento.id_alm_bultos
else
	lstr_almacenmovimientos.id_alm_bultos = 0
end if


	if arg_movimiento.id_ubicacion <> 0 then
		lstr_almacenmovimientos.id_ubicacion = arg_movimiento.id_ubicacion
		
		select almubimapa_codbar.almacen, 
				 almubimapa_codbar.zona, 
				 almubimapa_codbar.fila, 
				 almubimapa_codbar.altura,
				 isnull(almubimapa_codbar.id_alm_bultos,0) 
		into  :lstr_almacenmovimientos.almacen,
				:lstr_almacenmovimientos.zona,
				:lstr_almacenmovimientos.fila,
				:lstr_almacenmovimientos.altura,
				:ll_almubimapa_codbar_id_alm_bultos 
		from  almubimapa_codbar 
		where almubimapa_codbar.empresa = :lstr_almacenmovimientos.empresa
		and   almubimapa_codbar.id      = :lstr_almacenmovimientos.id_ubicacion;
		
	else
		lstr_almacenmovimientos.almacen = arg_movimiento.almacen
		lstr_almacenmovimientos.zona    = arg_movimiento.zona
		lstr_almacenmovimientos.fila    = arg_movimiento.fila
		lstr_almacenmovimientos.altura  = arg_movimiento.altura
	
		select isnull(almubimapa_codbar.id,0),
				 isnull(almubimapa_codbar.id_alm_bultos,0) 
		into  :lstr_almacenmovimientos.id_ubicacion,
				:ll_almubimapa_codbar_id_alm_bultos 
		from  almubimapa_codbar 
		where almubimapa_codbar.empresa = :lstr_almacenmovimientos.empresa
		and   almubimapa_codbar.almacen = :lstr_almacenmovimientos.almacen
		and   almubimapa_codbar.zona    = :lstr_almacenmovimientos.zona
		and	almubimapa_codbar.fila    = :lstr_almacenmovimientos.fila
		and	almubimapa_codbar.altura  = :lstr_almacenmovimientos.altura;
	
		if lstr_almacenmovimientos.id_ubicacion = 0 then
			lb_correcto = false
			messagebox("¡Error!","No existe ID para la ubicación seleccionada.~nInforme del error al departamento de sistemas.")
		end if
	
	end if
//end if

//Si la ubicacion tiene un bulto asociado este será el que asociaremos al movimiento de manera obligatoria
if ll_almubimapa_codbar_id_alm_bultos <> 0 then
	lstr_almacenmovimientos.id_alm_bultos = ll_almubimapa_codbar_id_alm_bultos
	arg_movimiento.id_alm_bultos          = lstr_almacenmovimientos.id_alm_bultos
end if

lstr_almacenmovimientos.articulo   = arg_movimiento.articulo
lstr_almacenmovimientos.familia    = ""
lstr_almacenmovimientos.formato    = ""
lstr_almacenmovimientos.calidad    = arg_movimiento.calidad
lstr_almacenmovimientos.tono       = arg_movimiento.tono
lstr_almacenmovimientos.calibre    = arg_movimiento.calibre
lstr_almacenmovimientos.tipo_pallet = arg_movimiento.tipo_pallet
lstr_almacenmovimientos.caja        = arg_movimiento.caja 

if arg_movimiento.cantidad > 0 then
	lstr_almacenmovimientos.cantidade = arg_movimiento.cantidad
	lstr_almacenmovimientos.cantidads = 0
else
	lstr_almacenmovimientos.cantidade = 0
	lstr_almacenmovimientos.cantidads = (arg_movimiento.cantidad * -1)		
end if

lstr_almacenmovimientos.tipomov      = arg_movimiento.tipo_movimiento
lstr_almacenmovimientos.tipo_unidad  = ""
lstr_almacenmovimientos.usuario      = "ERROR SGA"//nombre_usuario
lstr_almacenmovimientos.observaciones = arg_movimiento.observaciones 
lstr_almacenmovimientos.trazabilidad  = ""

SELECT articulos.familia,
		 articulos.formato,
		 articulos.unidad 
INTO   :lstr_almacenmovimientos.familia,
		 :lstr_almacenmovimientos.formato,   
		 :lstr_almacenmovimientos.tipo_unidad 
FROM   articulos  
WHERE  articulos.empresa= :lstr_almacenmovimientos.empresa 
AND    articulos.codigo = :lstr_almacenmovimientos.articulo;

//Fin de Cargamos la estructura del movimiento

//Hacemos la gestion de entrada o salida en el bulto
SELECT isnull(almartcajas.piezascaja,0)
INTO   :ll_piezascaja 
FROM   almartcajas  
WHERE  almartcajas.empresa   = :lstr_almacenmovimientos.empresa
AND    almartcajas.articulo  = :lstr_almacenmovimientos.articulo
AND    almartcajas.caja      = :lstr_almacenmovimientos.caja;

//Control del pallet "00000" sin pallet

SELECT isnull(palarticulo.cajaspallet,0) 
INTO   :ll_cajaspallet
FROM   palarticulo
WHERE  palarticulo.empresa  = :lstr_almacenmovimientos.empresa
AND    palarticulo.articulo = :lstr_almacenmovimientos.articulo
AND    palarticulo.codigo   = :lstr_almacenmovimientos.tipo_pallet
AND    palarticulo.caja     = :lstr_almacenmovimientos.caja;


if ll_cajaspallet = 0 and lstr_almacenmovimientos.tipo_pallet = "00000" then
	ll_cajaspallet = 9999
end if

ll_piezas_pallet = ll_piezascaja * ll_cajaspallet

if not(f_insert_almacenmovimientos(lstr_almacenmovimientos)) then
	lb_correcto = false
end if

return lb_correcto
end function

