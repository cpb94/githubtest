$PBExportHeader$ftc_calcular_unidades_almacen.srf
global type ftc_calcular_unidades_almacen from function_object
end type

forward prototypes
global function integer ftc_calcular_unidades_almacen (string cod_empresa, string cod_articulo, string cod_pallet, string cod_caja, integer n_pallets, integer n_cajas, decimal n_piezas, ref integer pallets_finales, ref integer cajas_finales, ref decimal piezas_finales, decimal lineales)
end prototypes

global function integer ftc_calcular_unidades_almacen (string cod_empresa, string cod_articulo, string cod_pallet, string cod_caja, integer n_pallets, integer n_cajas, decimal n_piezas, ref integer pallets_finales, ref integer cajas_finales, ref decimal piezas_finales, decimal lineales);String cod_formato,cod_modelo,cod_unidad
Integer longitud,largo
Integer bien
dec n_piezascaja
dec{0} total_cantidad
Dec n_metroscaja
dec{4} t_t,total_lineales=0,total_cajas,total_pallets,cajas,n_cajaspallet
string cadena

// Redondeo siempre a dos decimales
t_t = n_piezas
n_piezas = t_t

IF IsNull(n_pallets) THEN n_pallets=0
IF IsNull(n_cajas) THEN n_cajas=0

bien=0

cod_empresa = trim(cod_empresa)
cod_articulo = trim(cod_articulo)
cod_caja = trim(cod_caja)

SELECT  articulos.empresa,articulos.codigo, articulos.formato,   
		  	articulos.unidad
INTO 	  	:cod_empresa, :cod_articulo, :cod_formato, :cod_unidad
FROM    	articulos
WHERE  articulos.empresa = :cod_empresa
AND     	articulos.codigo  = :cod_articulo;

// 24-06-2015:  En el almacén siempre trabajaremos en piezas
cod_unidad = '0'

IF SQLCA.SQLCode<>0 THEN 
	bien=1
	if isnull(cod_articulo) then cod_articulo = ""
	MESSAGEBOX("Atención","el articulo "+cod_articulo+" no existe")
end if
if bien = 0 then
	SELECT  almartcajas.piezascaja,almartcajas.metroscaja  
	INTO    	:n_piezascaja,:n_metroscaja  
	FROM    	almartcajas  
	WHERE  almartcajas.empresa   = :cod_empresa
	AND     	almartcajas.articulo  = :cod_articulo
	AND     	almartcajas.caja      = :cod_caja;
	IF SQLCA.SQLCode<>0 THEN 
		bien=1
	end if
end if

IF bien = 0 THEN
	SELECT  palarticulo.cajaspallet			 
	INTO :n_cajaspallet
	FROM  palarticulo
	WHERE palarticulo.empresa  = :cod_empresa
	AND   palarticulo.articulo = :cod_articulo
	AND   palarticulo.codigo   = :cod_pallet
	AND   palarticulo.caja     = :cod_caja;
	if isnull(n_cajaspallet) then n_cajaspallet = 0
	IF SQLCA.SQLCode<>0 THEN
     	bien=1  
    END IF
END IF

largo = f_largo_formato(cod_empresa,cod_formato)

CHOOSE CASE cod_unidad
		
CASE  "1"
  	total_cajas = n_cajas+(n_pallets * n_cajaspallet)

	IF total_cajas <> 0 THEN
		total_cantidad = total_cajas * n_metroscaja
	ELSE
		// Modificacion redondeo por encima
		IF n_metroscaja = 0 THEN 
		  	total_cajas = 0
		ELSE
			total_cajas    = n_piezas / n_metroscaja
   		END IF
   		IF n_cajaspallet = 0 THEN
    			total_pallets = 0
   		ELSE
	  		total_pallets  = total_cajas / n_cajaspallet   	
   		END IF
   		total_cantidad  = total_cajas * n_metroscaja
		IF total_cantidad < n_piezas Then
			total_cajas    = total_cajas + 1
			total_cantidad = total_cajas  * n_metroscaja
			total_pallets = 0
			if n_cajaspallet<>0 then total_pallets  = total_cajas / n_cajaspallet 
		END IF
	//------------------------------------
	// total_cantidad=n_piezas
END IF
IF n_metroscaja=0 THEN 
  	total_cajas = 0
ELSE
  	total_cajas    = total_cantidad / n_metroscaja
END IF
IF n_cajaspallet=0 THEN
 	total_pallets = 0
ELSE
 	total_pallets  = total_cajas / n_cajaspallet
END IF

cajas = total_cajas - (total_pallets*n_cajaspallet)
total_cantidad  = total_cajas * n_metroscaja
if largo<>0 then total_lineales = (cajas*n_piezascaja) * (largo / 100) 

  
CASE "0"
	//  n_piezas=Dec(n_piezas)
  	IF n_piezas <> 0 THEN
    		IF n_piezascaja = 0 or isnull(n_piezascaja) THEN 	
   			cajas = 0			
			total_pallets = 0
		ELSE																	
			total_cantidad = n_piezas			
			
			// Quito el ceiling porque peta con Power Builder 12.5 y SQL 2008. David 07-02-2012
//     		total_cajas = CEILING(n_piezas / n_piezascaja)  
			
			if n_piezascaja > 0 then
				cajas = TRUNCATE(n_piezas / n_piezascaja, 0)
				if mod (n_piezas , n_piezascaja ) <>  0 then
					cajas ++
				end if
			else
				cajas = 0
			end if
			
			if n_cajaspallet > 0 then
				total_pallets  = truncate(cajas / n_cajaspallet,0)
				if total_pallets > 0 then
					if mod (cajas , n_cajaspallet ) <>  0 then
						total_pallets ++
					end if
				else
					total_pallets = 1
				end if
			else
				total_pallets = 0
			end if
		END IF																
	ELSE
		IF n_cajas <> 0 THEN
			total_cantidad = n_cajas * n_piezascaja
			total_cajas = n_cajas
			cajas = n_cajas
			IF n_cajaspallet <> 0 then
				total_pallets = truncate(n_cajas / n_cajaspallet,0) 
				if total_pallets > 0 then
					if mod (cajas , n_cajaspallet ) <>  0 then
						total_pallets ++
					end if
				else
					total_pallets = 1
				end if
			ELSE
				total_pallets = 0
			END IF
		ELSE
			IF n_pallets <> 0 THEN
			  	cajas = TRUNCATE(n_pallets * n_cajaspallet, 0)
				total_cajas = cajas
				total_cantidad = cajas * n_piezascaja
				total_pallets = n_pallets
			END IF
		END IF
	END IF
  	
  	IF largo<>0 THEN
		total_lineales = total_cantidad * (largo / 100)
	else
		total_lineales = 0
	END IF

CASE  ELSE
	bien=1
	
END CHOOSE

if cod_caja = "901" then //SIN CAJA
	cajas = 0
end if

if cod_pallet = "3" then //SIN PALLET
	total_pallets = 0
end if

pallets_finales = total_pallets
cajas_finales = cajas
piezas_finales = total_cantidad
lineales = total_lineales
         
RETURN bien

end function

