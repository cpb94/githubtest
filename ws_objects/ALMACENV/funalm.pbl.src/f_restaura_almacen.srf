$PBExportHeader$f_restaura_almacen.srf
global type f_restaura_almacen from function_object
end type

forward prototypes
global subroutine f_restaura_almacen ()
end prototypes

global subroutine f_restaura_almacen ();STRING SEL
LONG INDICE,TOTAL,INDICE2,TOTAL2
DATASTORE MOVIMIENTOS,UBICACIONES
STRING ALMACEN,ZONA,ARTICULO,CALIDAD,TONO,TIPO_PALLET,CAJA,UBICACION
LONG   FILA,ALTURA,CALIBRE,LINEA
DEC    EXISTENCIAS,EXISTENCIAS_ALMACEN,DIFERENCIA,EXISTENCIAS_UBI
BOOLEAN BIEN
SEL = "SELECT ALMACEN,ZONA,FILA,ALTURA,ARTICULO,CALIDAD,TONOCHAR,CALIBRE,"+&
		"TIPO_PALLET,CAJA,SUM(CANTIDADE) - SUM(CANTIDADS) EXISTENCIAS "+&
		"FROM ALMLINUBICAHIS "+&
		"WHERE EMPRESA = '"+CODIGO_EMPRESA+"' AND SITUACION <> 'A' "+&
		"GROUP BY ALMACEN,ZONA,FILA,ALTURA,ARTICULO,CALIDAD,TONOCHAR,CALIBRE,"+&
		"TIPO_PALLET,CAJA"
		
//MOVIMIENTOS = F_CARGAR_CURSOR(SEL)
f_cargar_cursor_nuevo(sel, movimientos)

TOTAL = MOVIMIENTOS.ROWCOUNT()

FOR INDICE = 1 TO TOTAL
	BIEN = TRUE
	F_MENSAJE_PROCESO("PROCESANDO",INDICE,TOTAL)
	ALMACEN     = MOVIMIENTOS.OBJECT.ALMACEN[INDICE]	
	ZONA        = MOVIMIENTOS.OBJECT.ZONA[INDICE]	
	FILA        = MOVIMIENTOS.OBJECT.FILA[INDICE]	
	ALTURA      = MOVIMIENTOS.OBJECT.ALTURA[INDICE]	
	ARTICULO    = MOVIMIENTOS.OBJECT.ARTICULO[INDICE]	
	CALIDAD     = MOVIMIENTOS.OBJECT.CALIDAD[INDICE]	
	TONO        = MOVIMIENTOS.OBJECT.TONOCHAR[INDICE]	
	CALIBRE     = MOVIMIENTOS.OBJECT.CALIBRE[INDICE]	
	TIPO_PALLET = MOVIMIENTOS.OBJECT.TIPO_PALLET[INDICE]	
	CAJA        = MOVIMIENTOS.OBJECT.CAJA[INDICE]	
	EXISTENCIAS = MOVIMIENTOS.OBJECT.EXISTENCIAS[INDICE]
	
	SELECT SUM(EXISTENCIAS)
	INTO   :EXISTENCIAS_ALMACEN
	FROM   ALMLINUBICA
	WHERE   EMPRESA = :CODIGO_EMPRESA
	AND     ALMACEN = :ALMACEN
	AND        ZONA = :ZONA
	AND        FILA = :FILA
	AND      ALTURA = :ALTURA
	AND    ARTICULO = :ARTICULO
	AND     CALIDAD = :CALIDAD
	AND    TONOCHAR = :TONO
	AND     CALIBRE = :CALIBRE
	AND TIPO_PALLET = :TIPO_PALLET
	AND        CAJA = :CAJA;
	
	IF ISNULL(EXISTENCIAS_ALMACEN) THEN EXISTENCIAS_ALMACEN = 0
	IF EXISTENCIAS_ALMACEN <> EXISTENCIAS THEN
		SEL = "SELECT UBICACION,LINEA,EXISTENCIAS "+&
		      "FROM ALMLINUBICA "+&
				"WHERE   EMPRESA = '"+CODIGO_EMPRESA+"' "+&
				"AND     ALMACEN = '"+ALMACEN+"' "+&
				"AND        ZONA = '"+ZONA+"' "+&
				"AND        FILA = "+STRING(FILA)+" "+&
				"AND      ALTURA = "+STRING(ALTURA)+" "+&
				"AND    ARTICULO = '"+ARTICULO+"' "+&
				"AND     CALIDAD = '"+CALIDAD+"' "+&
				"AND    TONOCHAR = '"+TONO+"' "+&
				"AND     CALIBRE = "+STRING(CALIBRE)+" "+&
				"AND TIPO_PALLET = '"+TIPO_PALLET+"' "+&
				"AND        CAJA = '"+CAJA+"' "
		DIFERENCIA = EXISTENCIAS_ALMACEN - EXISTENCIAS
		
//		UBICACIONES = F_CARGAR_CURSOR(SEL)
		f_cargar_cursor_nuevo(sel, ubicaciones)
		
		TOTAL2 = UBICACIONES.ROWCOUNT()
		FOR INDICE2 = 1 TO TOTAL2
			EXISTENCIAS_UBI = UBICACIONES.OBJECT.EXISTENCIAS[INDICE2]
			UBICACION       = UBICACIONES.OBJECT.UBICACION[INDICE2]
			LINEA           = UBICACIONES.OBJECT.LINEA[INDICE2]
			IF DIFERENCIA > 0 THEN
				IF EXISTENCIAS_UBI >= DIFERENCIA THEN
					
					EXISTENCIAS_UBI = EXISTENCIAS_UBI - DIFERENCIA
					
					IF EXISTENCIAS_UBI = 0 THEN
						
						DELETE FROM ALMLINUBICA
						WHERE EMPRESA = :CODIGO_EMPRESA
						AND UBICACION = :UBICACION
						AND LINEA     = :LINEA;
						
						IF SQLCA.SQLCODE <> 0 THEN BIEN = FALSE
						
					ELSE
						
						UPDATE ALMLINUBICA
						SET EXISTENCIAS = :EXISTENCIAS_UBI
						WHERE   EMPRESA = :CODIGO_EMPRESA
						AND   UBICACION = :UBICACION
						AND   LINEA     = :LINEA;
						
						IF SQLCA.SQLCODE <> 0 THEN BIEN = FALSE
						
					END IF
					
					DIFERENCIA = 0
					
				ELSE
					
					DELETE FROM ALMLINUBICA
					WHERE EMPRESA = :CODIGO_EMPRESA
					AND UBICACION = :UBICACION
					AND LINEA     = :LINEA;
					
					IF SQLCA.SQLCODE <> 0 THEN BIEN = FALSE
					
					DIFERENCIA = DIFERENCIA - EXISTENCIAS_UBI
					
				END IF
			ELSE
				IF DIFERENCIA < 0 THEN
					EXISTENCIAS_UBI = EXISTENCIAS_UBI + (DIFERENCIA * -1)

					UPDATE ALMLINUBICA
					SET EXISTENCIAS = :EXISTENCIAS_UBI
					WHERE   EMPRESA = :CODIGO_EMPRESA
					AND   UBICACION = :UBICACION
					AND   LINEA     = :LINEA;
					
					IF SQLCA.SQLCODE <> 0 THEN BIEN = FALSE
					
					DIFERENCIA = 0
					
				END IF
			END IF
		NEXT
		IF DIFERENCIA <> 0 THEN BIEN = FALSE
		IF BIEN THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF			
	END IF
NEXT

DESTROY MOVIMIENTOS
DESTROY UBICACIONES
end subroutine

