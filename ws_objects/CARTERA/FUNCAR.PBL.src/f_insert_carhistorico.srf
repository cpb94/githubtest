$PBExportHeader$f_insert_carhistorico.srf
global type f_insert_carhistorico from function_object
end type

forward prototypes
global function boolean f_insert_carhistorico (str_carhistorico historico)
end prototypes

global function boolean f_insert_carhistorico (str_carhistorico historico);if isnull(historico.agrupado) then historico.agrupado = ''
if trim(historico.agrupado) = '' then historico.agrupado = 'N'

if isnull(historico.pago_a_cuenta) then historico.pago_a_cuenta = ''
if trim(historico.pago_a_cuenta) = '' then historico.pago_a_cuenta = 'N'

INSERT INTO carhistorico  
	( carhistorico.empresa, 
	  carhistorico.anyo, 
	  carhistorico.orden, 
	  carhistorico.linea, 
	  carhistorico.anyofra, 
	  carhistorico.factura, 
	  carhistorico.recibo, 
	  carhistorico.fvto, 
	  carhistorico.ffra, 
	  carhistorico.fvto_original, 
	  carhistorico.fcobro, 
	  carhistorico.importe, 
	  carhistorico.divisas, 
	  carhistorico.monedas, 
	  carhistorico.fpago, 
	  carhistorico.tipodoc, 
	  carhistorico.banco, 
	  carhistorico.remesa, 
	  carhistorico.fremesa, 
	  carhistorico.situacion, 
	  carhistorico.agente1, 
	  carhistorico.pais, 
	  carhistorico.cuenta, 
	  carhistorico.domiciliacion, 
	  carhistorico.Nacional, 
	  carhistorico.observaciones, 
	  carhistorico.libre, 
	  carhistorico.gasto, 
	  carhistorico.fdevolucion, 
	  carhistorico.agrupado, 
	  carhistorico.efectoagrupa, 
	  carhistorico.anyoagrupa, 
	  carhistorico.cliente, 
	  carhistorico.anyo_remesa, 
	  carhistorico.comision11, 
	  carhistorico.comision12, 
	  carhistorico.agente2, 
	  carhistorico.comision21, 
	  carhistorico.comision22, 
	  carhistorico.agente3, 
	  carhistorico.comision31, 
	  carhistorico.comision32, 
	  carhistorico.cambio, 
	  carhistorico.serie, 
	  carhistorico.remesa_total, 
	  carhistorico.tipo_remesa, 
	  carhistorico.veces, 
	  carhistorico.fechaimp, 
	  carhistorico.nomcli, 
	  carhistorico.domicli, 
	  carhistorico.poblacli, 
	  carhistorico.paiscli, 
	  carhistorico.nombanco, 
	  carhistorico.dirbanco1, 
	  carhistorico.dirbanco2, 
	  carhistorico.recibir_dmto, 
	  carhistorico.fecha_recibido, 
	  carhistorico.punteado, 
	  carhistorico.clase_efecto, 
	  carhistorico.cambio_euros, 
	  carhistorico.cambio_asegurado, 
	  carhistorico.devuelto_notificado_agente, 
	  carhistorico.devuelto_notificado_agente2, 
	  carhistorico.devuelto_notificado_agente3, 
	  carhistorico.banco_docu, 
	  carhistorico.desviacion, 
	  carhistorico.cambio_cobro, 
	  carhistorico.situacion_anterior, 
	  carhistorico.pago_a_cuenta )  
VALUES 
	( :historico.empresa, 
	  :historico.anyo, 
	  :historico.orden, 
	  :historico.linea, 
	  :historico.anyofra, 
	  :historico.factura, 
	  :historico.recibo, 
	  :historico.fvto, 
	  :historico.ffra, 
	  :historico.fvto_original, 
	  :historico.fcobro, 
	  :historico.importe, 
	  :historico.divisas, 
	  :historico.monedas, 
	  :historico.fpago, 
	  :historico.tipodoc, 
	  :historico.banco, 
	  :historico.remesa, 
	  :historico.fremesa, 
	  :historico.situacion, 
	  :historico.agente1, 
	  :historico.pais, 
	  :historico.cuenta, 
	  :historico.domiciliacion, 
	  :historico.Nacional, 
	  :historico.observaciones, 
	  :historico.libre, 
	  :historico.gasto, 
	  :historico.fdevolucion, 
	  :historico.agrupado, 
	  :historico.efectoagrupa, 
	  :historico.anyoagrupa, 
	  :historico.cliente, 
	  :historico.anyo_remesa, 
	  :historico.comision11, 
	  :historico.comision12, 
	  :historico.agente2, 
	  :historico.comision21, 
	  :historico.comision22, 
	  :historico.agente3, 
	  :historico.comision31, 
	  :historico.comision32, 
	  :historico.cambio, 
	  :historico.serie, 
	  :historico.remesa_total, 
	  :historico.tipo_remesa, 
	  :historico.veces, 
	  :historico.fechaimp, 
	  :historico.nomcli, 
	  :historico.domicli, 
	  :historico.poblacli, 
	  :historico.paiscli, 
	  :historico.nombanco, 
	  :historico.dirbanco1, 
	  :historico.dirbanco2, 
	  :historico.recibir_dmto, 
	  :historico.fecha_recibido, 
	  :historico.punteado, 
	  :historico.clase_efecto, 
	  :historico.cambio_euros, 
	  :historico.cambio_asegurado, 
	  :historico.devuelto_notificado_agente, 
	  :historico.devuelto_notificado_agente2, 
	  :historico.devuelto_notificado_agente3, 
	  :historico.banco_docu, 
	  :historico.desviacion, 
	  :historico.cambio_cobro, 
	  :historico.situacion_anterior, 
	  :historico.pago_a_cuenta )  ;

IF Sqlca.SqlCode <> 0 Then
	f_mensaje("Error en base de datos",SQLCA.SQLERRTEXT)
	Return FALSE
ELSE
	Return TRUE
END IF
end function

